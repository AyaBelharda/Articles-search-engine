[
  {
    "titre": "AI Model for Computer games based on Case Based Reasoning and AI Planning",
    "resume": "Making efficient AI models for games with imperfect information can be a particular challenge. Considering the large number of possible moves and the incorporated uncertainties building game trees for these games becomes very difficult due to the exponential growth of the number of nodes at each level. This effort is focused on presenting a method of combined Case Based Reasoning (CBR) with AI Planning which drastically reduces the size of game trees. Instead of looking at all possible combinations we can focus only on the moves that lead us to specific strategies in effect discarding meaningless moves. These strategies are selected by finding similarities to cases in the CBR database. The strategies are formed by a set of desired goals. The AI planning is responsible for creating a plan to reach these goals. The plan is basically a set of moves that brings the player to this goal. By following these steps and not regarding the vast number of other possible moves the model develops Game Trees which grows slower so they can be built with more feature moves restricted by the same amount of memory.",
    "auteurs": [
      "Case Based \nReasoning",
      "Vlado Menkovski",
      "Case Based \nReasoning",
      "Game Trees",
      "Game Trees and Minimax",
      "Game Trees"
    ],
    "institutions": [
      "Vlado Menkovski Athens Information Technology ",
      "Dimitrios Metafas Athens Information Technology "
    ],
    "mots_cles": [
      " Game AI",
      " Case Based Reasoning",
      " AI Planning",
      " Game Trees  "
    ],
    "texte_integral": "AI Model for Computer games based on Case Based \nReasoning and AI Planning  \nVlado Menkovski \nAthens Information Technology \n0.8km Markopoulou Ave. \nPeania, 19002, Greece \nvmen@ait.edu.gr \nDimitrios Metafas \nAthens Information Technology \n0.8km Markopoulou Ave. \nPeania, 19002, Greece \ndmeta@ait.edu.gr \nAbstract\nMaking efficient AI models for games with imperfect \ninformation can be a particular challenge. Considering the large \nnumber of possible moves and the incorporated uncertainties \nbuilding game trees for these games becomes very difficult due to \nthe exponential growth of the number of nodes at each level. This \neffort is focused on presenting a method of combined Case Based \nReasoning (CBR) with AI Planning which drastically reduces the \nsize of game trees. Instead of looking at all possible combinations \nwe can focus only on the moves that lead us to specific strategies \nin effect discarding meaningless moves. These strategies are \nselected by finding similarities to cases in the CBR database. The \nstrategies are formed by a set of desired goals. The AI planning is \nresponsible for creating a plan to reach these goals. The plan is \nbasically a set of moves that brings the player to this goal. By \nfollowing these steps and not regarding the vast number of other \npossible moves the model develops Game Trees which grows \nslower so they can be built with more feature moves restricted by \nthe same amount of memory.  \nCategories and Subject Descriptors \nI.2.1 [Applications and Expert Systems]: Games\nGeneral Terms\nAlgorithms, Performance. \nKeywords\nGame AI, Case Based Reasoning, AI Planning, Game Trees \n1. Introduction \nThe goal of this effort is to explore a model for design and \nimplementation of an AI agent for turn based games. This model \nprovides for building more capable computer opponents that rely \non strategies that closely resemble human approach in solving \nproblems opposed to classical computational centric heuristics in \ngame AI. In this manner the computational resources can be \nfocused on more sensible strategies for the game play.  \nWith the advancement in computer hardware increasingly \nmore computing power is left for executing AI algorithms in \ngames. In the past AI in games was mainly a cheating set of \ninstructions that simulated the increasing difficulty in the game \nenvironment so that the player had the illusion of real counterpart. \nImprovement in available memory and processing power allows \nimplementation of more intelligent algorithms for building the \ngame environment as well as direct interaction with the human \nplayers.   \nIn this particular research the emphasis is put on the \ninteraction between the AI agent and a computer player in the \nrealm of the game rules. It is particularly focused on turn based \ngames that have the elements of uncertainty like dice or concealed \ninformation. At the beginning a description of Game AI \nalgorithms are given; such as Game Trees and Minimax. The \nfollowing section describes an approach of using AI Planning to \nimprove building Game Trees in games with imperfect \ninformation where Game Trees tend to be very large with high \ngrowth ratio. Section 4 discusses another approach that provides a \nsignificant reduction to the number of considered moves in order \nto find the favorable strategy of the AI player. This approach uses \nAI Planning techniques and Case Base Reasoning (CBR) to plan \nfor different scenarios in predetermined strategies which would be \nanalogous to human player experience in the particular game. The \nCBR database illustrates a set of past experiences for the AI \nproblem and the AI Planning illustrates the procedure to deal with \nthe given situation in the game. In the next two sections \nimplementations and evaluations of both approaches are given. \nThe AI Planning approach is implemented with the Tic-tac-toe \ngame and the combined AI Planning and CBR approach is \nimplemented with a model for the Monopoly game. The last part \ncontains conclusions and future work ideas.  \n2. Game Trees and Minimax \nGame Trees are common model for evaluating how different \ncombinations of moves from the player and his opponents will \naffect the future position of the player and eventually the end \nresult of the game. An algorithm that decides on the next move by \nevaluating the results from the built Game Tree is minimax [1]. \nMinimax assumes that the player at hand will always choose the \nbest possible move for him, in other words the player will try to \nselect the move that maximizes the result of the evaluation \nfunction over the game state. So basically the player at hand needs \nto choose the best move overall while taking into account that the \nnext player(s) will try to do the same thing. Minimax tries to \nmaximize the minimum gain. Minimax can be applied to multiple \nPermission to make digital or hard copies of all or part of this work for \npersonal or classroom use is granted without fee provided that copies are \nnot made or distributed for profit or commercial advantage and that \ncopies bear this notice and the full citation on the first page. To copy \notherwise, or republish, to post on servers or to redistribute to lists, \nrequires prior specific permission and/or a fee. \nDIMEA\u201908, September 10\u201312, 2008, Athens, Greece. \nCopyright 2008 ACM 978-1-60558-248-1/08/09... $5.00 \nInteractive and Adaptable Media\n295\n3rd International Conference on Digital Interactive Media in Entertainment and Arts\nlevels of nodes on the game tree, where the leaves bring the final \nknown (or considered) game state.  \nThe minimax theorem states: \nFor every two-person, zero-sum game there is a mixed strategy \nfor each player, such that the expected payoff for both is the same \nvalue V when the players use these strategies. Furthermore, V is \nthe best payoff each can expect to receive from a play of the \ngame; that is, these mixed strategies are the optimal strategies for \nthe two players. \nThis theorem was established by John von Neumann, who is \nquoted as saying \"As far as I can see, there could be no theory of \ngames \u2026 without that theorem \u2026 I thought there was nothing \nworth publishing until the Minimax Theorem was proved\" [2]. \nA simple example of minimax can be observed by building a \ngame tree of the tic-tac-toe game. The tic-tac-toe game is a simple \ngame which can end by the first player wining, the second player \nwining or a tie. There are nine positions for each of the players in \nwhich at each turn the player puts X or O sign. If the player has \nthree adjacent signs in a row, column or the two diagonals he or \nshe wins. This game has limited number of position and it is well \nsuited for building the whole game tree. The leaves of this tree \nwill be final positions in the game. A heuristics evaluation \nfunction will also need to be written to evaluate the value of each \nnode along the way. \n3. AI Planning for building Game Trees \n3.1.1 AI Planning \nAI Planning also referred as Automated Planning and \nScheduling is a branch of Artificial Intelligence that focuses on \nfinding strategies or sequences of actions that reach a predefined \ngoal [3]. Typical execution of AI Planning algorithms is by \nintelligent agents, autonomous robots and unmanned vehicles. \nOpposed to classical control or classification AI Planning results \nwith complex solutions that are derived from multidimensional \nspace. \n AI Planning algorithms are also common in the video game \ndevelopment. They solve broad range of problems from path \nfinding to action planning. A typical planner takes three inputs: a \ndescription of the initial state of the world, a description of the \ndesired goal, and a set of possible actions. Some efforts for \nincorporating planning techniques for building game trees have \nalso shown up, similar to the approach explored in this effort. In \naddition Cased Based Reasoning [4] techniques are also gathering \npopularity in developing strategies based in prior knowledge \nabout the problems in the games. One of the benefits from \nHierarchical Task Network (HTN) [5] planning is the possibility \nto build Game Trees based on HTN plans; this method is \ndescribed in the following section. \n3.2 Game Trees with AI Planning \nAn adaptation of the HTN planning can be used to build \nmuch smaller and more efficient game trees. This idea has already \nbeen implemented in the Bridge Baron a computer program for \nthe game of Contact Bridge [6]. \nComputer programs based on Game Tree search techniques \nare now as good as or better than humans in many games like \nChess [7] and checkers [8], but there are some difficulties in \nbuilding a game tree for games that have imperfect information \nand added uncertainty like card or games with dice. The main \nproblem is the enormous number of possibilities that the player \ncan choose from in making his move. In addition some of the \nmoves are accompanied with probabilities based on the random \nelements in the games. The number of possible moves \nexponentially grows with each move so the depth of the search \nhas to be very limited to accommodate for the memory \nlimitations.  \nThe basic idea behind using HTN for building game trees is \nthat the HTN provides the means of expressing high level goals \nand describing strategies how to reach those goals. These goals \nmay be decomposed in goals at lower level called sub-goals. This \napproach closely resembles the way a human player usually \naddresses a complex problem. It is also good for domains where \nclassical search for solution is not feasible due to the vastness of \nthe problem domain or uncertainties. \n3.2.1 Hierarchical Task Networks \nThe Hierarchical Task Network, or HTN, is an approach to \nautomated planning in which the dependency among actions can \nbe given in the form of networks [9] [Figure 1]. \nA simple task network (or just a task network for short) is an \nacyclic digraph \ufffd \ufffd \ufffd\ufffd\ufffd \ufffd\ufffd in which U is the node set, E is the \nedge set, and each node \ufffd \ufffd \ufffd contains a task \ufffd\ufffd. The edges of \ufffd\ndefine a partial ordering of U. If the partial ordering is total, then \nwe say that \ufffd is totally ordered, in which case \ufffd can be written as \na sequence of tasks \ufffd \ufffd \ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd \ufffd \ufffd \ufffd\ufffd\ufffd.\nFigure 1: Simple Hierarchical Task Network \nA Simple Task Network (STN) method is a 4-tuple of its name, \ntask, precondition and a task network. The name of the method \nlets us refer unambiguously to substitution instances of the \nmethod, without having to write the preconditions and effects \nexplicitly. The task tells what kind of task can be applied if the \npreconditions are met. The preconditions specify the conditions \nthat the current state needs to satisfy in order for the method to be \napplied. And the network defines the specific subtasks to \naccomplish in order to accomplish the task. \nA method is relevant for a task if the current state satisfies the \npreconditions of a method that implements that task. This task can \nbe then substituted with the instance of the method. The \nsubstitution is basically giving the method network as a solution \nfor the task. \nIf there is a task \u201cGo home\u201d and the distance to home is 3km \n[Figure 2] and there exists a method walk-to and this method has a \nprecondition that the distance is less than 5km, then a substation \nto the task \u201cGo home\u201d can be made with this method instance.  \nFigure 2: HTN Method \nBuy milk\nGo to (shop)\nPurchase \nGo to (home)\nGo-to (from, to)\nWalk (to)\nIf (to \u2013 from) < 5km \n296\nDIMEA 2008\n3rd International Conference on Digital Interactive Media in Entertainment and Arts\nIf the distance is larger than 5km another meth\nto be substituted [Figure 3]. \nFigure 3: HTN Method 2 \nAn STN planning domain is a set of operatio\nmethods M. A STN planning problem is a 4-tu\nstate S0, the task network w called initial task\nSTN domain. A plan \ufffd \ufffd \ufffd\ufffd\ufffd\ufffd \ufffd \ufffd \ufffd\ufffd\ufffd is a soluti\nproblem if there is a way to decompose w into \u03c0\nand each decomposition is applicable in the ap\nthe world. The algorithm that is capable to \nnetworks into plans is called Total-forward-deco\n[9] or Partial-forward-decomposition (PFD). H\ncases where one does not want to use a forwa\nprocedure. HTN planning is generalization of S\ngives the planning procedure more freedom\nconstruct the task networks.  \nIn order to provide this freedom, a bookke\nis needed to represent constraints that the plann\nnot yet enforced. The bookkeeping is done by\nunenforced constraints explicitly in the task netw\nThe HTN generalizes the definition of a\nSTN. A task network is the pair \ufffd \ufffd \ufffd\ufffd\ufffd \ufffd\ufffd w\ntask nodes and C is a set of constraints. Eac\nspecifies a requirement that must be satisfied by\na solution to a planning problem.  \nThe definition of a method in HTN also\ndefinition used in STN planning. A HTN pla\nname, task, subtasks, and constraints. The s\nconstraints form the task network. The HTN plan\nidentical to STN planning domains except they u\ninstead of STN methods. \nCompared to classical planners the prim\nHTN planners is their sophisticated knowledge r\nreasoning capabilities. They can represent and \nnon-classical planning problems; with a good\nguide them, they can solve classical planning p\nmagnitude more quickly than classical or neoc\nThe primary disadvantage of HTN is the nee\nauthor to write not only a set of planning opera\nof methods. \n3.2.2 HTN Planning in building Game \nFor a HTN planning algorithm to be adap\ntrees we need to define the domain (set of H\noperators) which is the domain of the game. Thi\na knowledge representation of the rules of the\nenvironments and possible strategies of game pla\nIn this domain the game rules as well as kn\ntackle specific task are defined.   The implem\nTree building with HTN is called Tign\nimplementation \nuses \na \nprocedure \nsimila\ndecomposition, but adapted to build up a game \nDrive(to\nIf(t\nGo-to (from, to) \nIf(to \u2013 from) < 5km \nWalk (to) \nhod instance needs \nons O and a set of \nuple of the initial \nk network and the \nion for a planning \n\u03c0 if \u03c0 is executable \nppropriate state of \ndecompose these \nomposition (TFD) \nHowever there are \nard-decomposition \nSTN planning that \nm about how to \neeping mechanism \nning algorithm has \ny representing the \nwork. \na task network in \nwhere \ufffd is a set of \nh constraint in C \ny every plan that is \no generalizes the \nan is a 4-tuple of \nsubtasks and the \nnning domains are \nuse HTN methods \nmary advantage of \nrepresentation and \nsolve a variety of \nd set of HTNs to \nproblems orders of \nclassical planners. \ned of the domain \nators but also a set \nTrees\nted to build game \nHTN methods and \nis is in some sense \ne game, the game \nay.\nnown strategies to \nmentation of Game \nnum2 [9]. This \nar \nto \nforward-\ntree rather than a \nplan. The branches of the game tree rep\nthe methods. Tignum2 applies all met\nstate of the world to produce new\ncontinues recursively until there are n\nhave not already been applied to th\nworld.  \nIn the task network generated by Tignu\nactions will occur is determined by th\nBy listing the actions in the order \nnetwork can be \u201cserialized\u201d into a gam\n4. Case Based Reasoning in\n4.1 Case Based Reasoning\nCase-based reasoning (CBR) is a \nArtificial Intelligence (AI), both as \nproblems and as a basis for standalone \nCase-based reasoning is a paradigm\nsolving and learning that has became \napplied subfield of AI of recent yea\nintuition that problems tend to recur. I\nare often similar to previously en\ntherefore, that past solutions may be of\n[10].  \nCBR is particularly applicable to probl\navailable, even when the domain is n\nfor a deep domain model. Helpdesks,\nsystems have been the most successfu\nto determine a fault or diagnostic \nattributes, or to determine whether or\nrepair is necessary given a set of past s\nFigure 5: Game Tree built fr\nFigure 4: HTN to Game Tr\n)\nto \u2013 from) < 200km \npresent moves generated by \nthods applicable to a given \nw states of the world and \nno applicable methods that \nhe appropriate state of the \num2, the order in which the \ne total-ordering constraints. \nthey will occur, the task \nme tree [Figure 4] [Figure 5]. \nn Game Strategies\nwell established subfield of \na mean for addressing AI \nAI technology.\nm for combining problem-\none of the most successful \nars. CBR is based on the \nIt means that new problems \nncountered problems and, \nf use in the current situation \nlems where earlier cases are \nnot understood well enough \n, diagnosis or classification \nul areas of application, e.g., \nan illness from observed \nr not a certain treatment or \nolved cases [11]. \nrom HTN\nree Algorithm\nInteractive and Adaptable Media\n297\n3rd International Conference on Digital Interactive Media in Entertainment and Arts\nCentral tasks that all CBR methods have to deal with are [12]: \"to \nidentify the current problem situation, find a past case similar to \nthe new one, use that case to suggest a solution to the current \nproblem, evaluate the proposed solution, and update the system by \nlearning from this experience. How this is done, what part of the \nprocess that is focused, what type of problems that drives the \nmethods, etc. varies considerably, however\".  \nWhile the underlying ideas of CBR can be applied \nconsistently \nacross \napplication \ndomains, \nthe \nspecific \nimplementation of the CBR methods \u2013in particular retrieval and \nsimilarity functions\u2013 is highly customized to the application at \nhand. \n4.2 CBR and Games \nMany different implementations of CBR exist in games. \nCBR technology is nicely suited for recognizing complex \nsituations much easier and more elegant than traditional parameter \ncomparison or function evaluation. There are especially evident \ncases in real time strategies where different attack and defense of \nglobal strategies are nicely defined by CBR datasets and later used \nin the running games. Also intelligent bots behavior is also \nanother typical example. Depending on the number of enemy bots \nthe layout of the terrain and position of human players the CBR \nsystem finds the closest CBR case and employs that strategy \nagainst the human players which in prior evaluation was proved to \nbe highly efficient. \n5. Game Trees with AI Planning \u2013 Tic-tac-toe \nIn order to show the expressive power of AI Planning in \ndefining strategies for games, and the use of these plans to build \nGame Trees I implemented an algorithm that builds Game Trees \nfor the Tic-Tac-Toe game. \nThe game tree of Tic-Tac-Toe shows 255,168 possible \ngames of which 131,184 are won by X (the first player), 77904 \nare won by O and the rest 46,080 are draw [13]. All these games \ncan be derived from building a complete Game Tree.  \nEven though it is possible to build a complete game tree of \nTic-tac-toe it is definitely not an optimal solution. Many of the \nmoves in this tree would be symmetrical and also there are a many \nmoves that would be illogical or at least a bad strategy to even \nconsider.  \nSo what strategy should X (the first player) choose in order \nto win the game? \nThere are few positions that lead to certain victory. These \npositions involve simultaneous attack on two positions so the \nother player could not defend, basically the only trick in Tic-Tac-\nToe. \nFigure 6: Tic-tac-toe winning strategy positions \nPosition 1 leads to victory if the two of the three fields: top \nmiddle, bottom left corner and bottom right corner are free \n[Figure 6]. \nPosition 2 lead to victory if two of the three fields: top right \ncorner, bottom right corner and bottom middle are free [Figure ]. \nAnd in the third position if the two of center, middle top and \nmiddle left are available the position is a certain victory. \nThere are many different arrangements of the player\u2019s tokens \nthat give equivalent positions as these three positions. By using \nplanning we do not need to consider all possible layouts but just \nconsider these three similar to what a human would consider. \n The game starts from an empty table. \nThe two relevant strategies that would lead to these positions \nare to take one corner or to take the center [Figure 7]. \nFigure 7: Tic-tac-toe Two starting moves \nThe center position as we can see in the simulation results \nlead to a bigger number of victorious endings but it is also a \nstraight forward strategy with obvious defense strategy. \nAt this point we need to consider the moves of the opponent. \nIf we take the left branch the opponent moves can be a center, a \ncorner or a middle field. We also need to differentiate with a \nmove to a corner adjacent with our like top left or bottom right or \nacross the center to bottom right [Figure 8]. \nFigure 8: Tic-tac-toe opponent response to corner move \nIn cases one and two, we have a clear path to executing \nstrategy 3 so we need to capture the diagonally opposite field. \nAnd as for the third case the best way to go is to capture the center \nand go for strategy 1 or 2 depending of the opponent\u2019s next move.  \nFigure 9: Tic-tac-toe move 2 after corner opening \nThe first move leads to certain victory, O will have to go to \nthe center and X will achieve strategy 3 [Figure 9]. The second \nmove is a possible way to strategy 3 if O makes a mistake in the \nnext loop, so X goes to the opposite corner. For the third case \nsince O is playing a valid strategy the only move that leaves a \npossible mistake from O would be to take the center and wait for \nO to go to the middle and then achieve strategy 1 or 3 which will \nbe a symmetric situation to the one that we will find if we \nbranched with the center. \nFigure 10: Tic-tac-toe opponent response to center move \nIf we go back to the second branch [Figure 10], a possible \nway for the second player to engage is corner or middle. The first \n298\nDIMEA 2008\n3rd International Conference on Digital Interactive Media in Entertainment and Arts\nmove is a valid strategy for O and can be mee\ncorner move from X to try a mistake from O in \nthe same as in the third case above from the pre\nanother move would be go to the middle wh\nachieves strategy 1 or 2.  \nFigure 11: Tic-tac-toe Move 2 after cent\nThe fist move will lead to win if O moves \ndraw if it goes for the corners [Figure 11]. In t\nhas to block the lower left corner which leave\nmiddle left or corner left which are strategy 1 and\nTo sum the strategies for the planning, first \ncorner strategy for the beginning. Then for the ce\nthe corners with the particularly the one oppo\nholds. If the center is empty for the second strate\nwe go for the opposite corner. After this point w\nopponent or try to implement strategies 1, 2 or\nvictory.  \nPlan 1: Take center  \nPreconditions: Center empty \nPlan 2: Take corner  \nPreconditions: All corners empty \nPlan 3: Take corner after center \nPreconditions: We have center take corner oppos\nopponent has \nPlan 4: Take diagonal corner \nPreconditions: We have a corner, the opponent ha\n the corner opposite to the one we have is free. \nPlan 5: Block \nPrecondition: The opponent has tree tokens in a r\nagonal \nPlan 6: Win \nPreconditions: We have two tokens in a row, colu\nnd the third place is free \nPlan 7: Tie \nPreconditions: If all places are taken, it\u2019s a tie. \n5.1 Hierarchical Task Network \nTop level task is Play [Figure 12]. This is a \ncan be derived into: Win, Block, Tie or Sear\nSearch for plan is derived to both Plan 1 and Pla\nPlan 4, which later leads to a call for the oppon\nrecursive call to Play. \nFigure 12: Tic-tac-toe HT\net with a opposite \nthe future exactly \nevious branch, and \nhere X eventually \nter opening\nto the middle or a \nthe second case O \nes X to go for the \nd 2.\nwe have center or \nenter we try to get \nosite to the one O \negy we go for it or \nwe either block the \nr 3 which lead to \nsite to the  one the \nas the ce\u2212nter and\nrow, colu\u2212mn or di\nmn or dia\u2212gonal a\na complex task and \nrch for Plan. The \nan 2 or Plan 3 and \nnent\u2019s move and a \nTN\nThis HTN when executed will re\ngame scenarios. By creating nodes from\nthem with branches with the move of t\ntree for the Tic-tac-toe game over whi\nalgorithm. \nThis set up with 7 plans with 3 ta\nfor Tic-tac-toe which considers all pos\nplayer with only 457 games, 281 of w\nand 0 where the second opponent w\nreduction over the 255, 168 possible g\ntree. These reductions can be very use\ncomputing capabilities but also we pr\nthat planning can be very efficient if d\ntrees by applying reasoning very \nreasoning. \nFurther improvements to the gam\nthe opponents moves are also planned\nall the meaningless and symmetrical m\n6. Game AI in Monopoly \n6.1 Overview of the AI Imp\nThe AI agent is responsible for \nplayers in the game. The core principle\na Game Tree with all the sensible move\nmake from the current point of time\nminimax algorithm the agent selects t\nwould bring the computer player mo\nwith the highest probability. Building \nthat would be big enough to consider \nis obstructed by the vastness of poss\nwith all the possible random landings \nnodes of the game tree exponentially\ntackle this problem the AI agents \ndiscussed technologies: Case Based Re\nThe technologies are employed \nFirst the agent searches the CBR datab\nlargest similarity with the current state\nassociated with a playing strategy. Th\nthat the planner needs to build plans f\nconsecutive player moves that bring th\nway only moves that are part of that str\nbeing a small fraction of the overall po\nedges of the game tree at each level dec\nAt each level of the game tree the\nof a single player. After the strateg\nconsidered the response to those strate\nby the opponent(s). The move of the \nprobability distribution of the dice as \nplayer. A more general strategy needs\nopponent\u2019s (human player) moves sin\nthe expertise of the opponent. This ge\nmore plausible moves than the focused\nAfter covering all opponents t\ndeducting a feature move of the com\nCBR selected plan strategy. After \nstrategies and reaching a reasonable s\ninto account the memory limits an\nprobabilities that the move is possible\nthe dice the building of the Game Tre\nalgorithm searches the Game Tree \nfavorable move for the AI player usi\nThe process is repeated each time the A\nesult with plans for possible \nm each position and linking \nthe player we create a game \nich we can run the minimax \narget strategies creates a tree \nssible moves for the second \nwhich X wins 176 are draw \nwins. This is a significant \names with a complete game \neful for devices with limited \nrove a very important point \ndesigning meaningful game \nsimilar to human player \nme tree are also possible if \nd, in other words if we drop \nmoves of the opponent. \nplementation\nthe moves of the artificial \ne of the AI agent is building \nes that all the players would \ne forward. Then using the \nthe move that in the future \nost favorable game position \na Game Tree in this game \nsufficient number of moves \nsible moves in combination \nof the dice. The number of \ny grows at each level. To \nincorporates two already \neasoning and AI Planning. \nin the following manner. \nbase to find the case with the \ne of the board. This case is \nhe strategy consists of goal \nfor, and the plans consist of \nhe player to that goal. This \nrategy are considered, those \nossible moves the number of \ncreases immensely. \ne model considers the moves \ngies of the AI player are \negies needs to be considered \nopponent(s) depends of the \nwell as the strategy of the \ns to be implemented for the \nnce we cannot be aware of \neneral strategy would bring \nd strategy of the AI player.  \nthe agent comes back to \nmputer player by using the \ncreating several loops of \nsize of a Game Tree taking \nnd the rapidly decreasing \ne due to the distribution of \nee stops. Then the minimax \nand decides on the most \ning the minimax algorithm. \nAI player is up. \nInteractive and Adaptable Media\n299\n3rd International Conference on Digital Interactive Media in Entertainment and Arts\nBuying, auctioning and trading game moves are always \naccompanied by return of investment calculations in making the \nplans. These calculations represent adaptation of the more general \nplanning associated with the cases in the CBR database. These \nadaptations are necessary due to the fact that the cases do not \nidentically correspond to the situation on the table. In addition \ncalculating the game position value of each node of the game tree \nis done by heuristic functions that incorporate economic \ncalculations of net present value, cash, and strategic layout and so \non. For example railroads in monopoly are known to be \nstrategically effective because they bring constant income even \nthough the income can be smaller than building on other \nproperties.  \n6.2 Details on the CBR Implementation \nThe implementation of the CBR is by using the JColibri2 \nplatform.  JColibri2 is an object-oriented framework in Java for \nbuilding CBR systems that is an evolution of previous work on \nknowledge intensive CBR [14].  \nFor this implementation we need to look into three particular \nclasses of the JColibri2 platform. The StandardCBRApplication, \nConnector, CBRQuery. For a JColibri2 implementation the \nStandardCBRApplication interface needs to be implemented.  \nThe CBR cycle executed accepts an instance of CBRQuery. \nThis class represents a CBR query to the CBR database. The \ndescription component (instance of CaseComponent) represents \nthe description of the case that will be looked up in the database. \nAll \ncases \nand \ncase \nsolutions \nare \nimplementing \nthe \nCaseComponent interface. \nThe JColibri2 platform connects to the CBR database via a \nConnector class. Each connector implements all the necessary \nmethods for accessing the database, retrieval of cases, storing and \ndeletion of cases. This implementation uses a custom XML \nstructure for holding the CBR cases. Since the game will not \nupdate the CBR database only read it, a XML solution satisfies \nthe needs. The XML file to a certain extent is similar to the XML \nrepresentation of the board. We are interested in finding one \nCBRCase that is the most similar case to the situation in the game \nat the time of the search. This procedure is done in the cycle \nmethod of the CBRApplication. The JColibri2 CBR comparison is \ndone by Nearest Neighbor (NN) search method.  \nJColibri2 offers implementations for NN search algorithms \nof simple attributes. These implementations are called local \nsimilarities. For complex attributes like in our case global \ncustomized similarity mechanisms need to be implemented. \nThe MonopolyDescription class [Figure 13] is basically a \nserialization of the GameState. It holds all the information about \nthe state of the board, the players, their amount of cash etc.  \nFigure 13: Class diagram of the Monopoly Case component \nmodels \nOn the other hand the MonopolySolution class holds the \nthree particular attributes that are needed for the planning, the \nplanning Domain, State and TaskList. \nThe game is implemented by using the Model-View-\nController software development pattern. The controller is \nresponsible for implementing the game rules and handling all of \nthe events in the game like roll of dice, input commands for \ntrading, auctioning and etc from the players. The View layer is \nresponsible for displaying the board and all of the input widgets \non to the game screen, and the models are data structures \nrepresenting the game state [Figure 14]. \nFigure 14: Class diagram of the Monopoly models \n6.2.1 Complex Similarity representation in CBR \nThe similarity measurement part of the Nearest Neighbor \nalgorithm JColibri2 is implemented by implementing the \nLocalSimiralrityFunction \nand \nthe \nGlobalSimiralityFunction \ninterface. A local similarity function is applied to simple attributes \nby the NN algorithm, and a global similarity function is applied to \ncompound attributes. In the case of our implementation the \nattributes of the MonopolyDescription are compound attributes \ndescribing the state of the board, number of players, amount of \ncash for every player and etc. Since MonopolyDescription is a \ncustom CaseComponent a global similarity function needs to be \nimplemented to accurately find the distance between different \nCBR cases. \nThe similarity mechanism is inseparable core element of the \nCBR system. This mechanism represents how the CBR decides \nwhich strategy is best suited for the particular situation by \n300\nDIMEA 2008\n3rd International Conference on Digital Interactive Media in Entertainment and Arts\ncalculating the distance or similarity to other cases in the \ndatabase.  \nFor the monopoly implementation we need to consider \nseveral basic strategies. Monopoly is based on investing in \nproperties and receiving revenues from those investments. One of \nthe basic strategies of the game is to build a set of properties that \nwill bring constant income larger than the one of the opponents. \nSo in time the opponents will have to declare bankruptcy. But on \nthe other hand over investment can lead to too stretched resources \nwith low income that will eventually drove the player to \nbankruptcy. To decide on these two we need a clear separation \ninto two groups of cases in the CBR database. The first group of \ncases will represent a situation on the board where the player has \nsignificant income per loop formed of one or more color group \nproperties, maybe railroads, some buildings on them and so on. It \nis important to note that in this case the player is better situated \nthan his opponents so he only needs to survive long enough to win \nthe game. In the other group of cases either the opponent is not \nwell positioned on the board or its opponents are better situated. \nIn this case further investments are necessary to improve the \nsituation so the player can have a chance of winning in the long \nrun.  \nThese metrics can be owning color groups, valuing groups of \nrailroads, evaluating the other opponents as well, and considering \nthe amount of cash. As it is obvious in monopoly the number of \nstreets is not as nearly as important as the combination of streets \nthe player owns. It is also important to note that one CBR case \ndoes not hold only a single strategy in place, but its solution can \nhave multiple different strategic goals. For example one CBR case \nmight simultaneously say buy this land to form a color group but \nalso trade some other unimportant property to increase cash \namount.  \nThe cases do not represent all possible combinations of board \npositions. They are only representation of typical game scenarios. \nThe CBR Case solutions do not give exact instructions in general \nbut rather strategic goals. For example one CBR Solution might \nsay trade the streets that you only have one of each for the ones \nthat you have two of that color already. Then the planner based on \nthe situation on the board needs to decompose this high level task \nto a low level operations. Like offer \"Mediterranean Avenue\" for \n\"Reading Railroad\" and offer $50. The exact amounts and actual \nstreets are left to the planer to evaluate.  \nThe monopoly CBR database is currently in development on \na monopoly clone game called Spaceopoly. The cases are \narchitected based on human player experience and knowledge. \nThere is a plan of making a number of slightly different strategies \nthat differ on the style of playing and then running simulation \ntests that would determine the particular validity of each database \nas well as validity of certain segments of the strategy or even \nparticular cases in the database.  \nThe actual execution of the strategies will not differ from \nstrategy to strategy since the plan execution is more related to the \nstructure and rules of the game than to the actual playing strategy. \n6.3 Details on the Planning Implementation \nFor the purpose of planning this implementation uses a \nmodification of the JSHOP2 planner. The Java Simple \nHierarchical Ordered Planner 2 is a domain independent HTN \nplanning system [15].  \nJSHOP2 uses ordered task decomposition in reducing the \nHTN to list of primitive tasks which form the plans. An ordered \ntask decomposition planner is an HTN planner that plans for tasks \nin the same order that they will be executed. This reduces the \ncomplexity of reasoning by removing a great deal of uncertainty \nabout the world, which makes it easy to incorporate substantial \nexpressive power into the planning algorithm. In addition to the \nusual HTN methods and operators, the planners can make use of \naxioms, can do mixed symbolic/numeric conditions, and can do \nexternal function calls. \n In order for the JSHOP2 planer to generate plans it needs \ntree crucial components: Domain, State and Tasks. The Domain \ndefines all the functionalities that the particular domain offers. \nThese are simple and complex tasks. The complex tasks also \ncalled methods create the hierarchy with the fact that they can be \nevaluated by simple tasks of other complex tasks. This is how a \nhierarchical structure of tasks is formed. The problem reduction is \ndone by reducing the high level complex tasks to simpler until all \nthe tasks are primitive. The list of primitive tasks forms the plan. \nThe State represents the state of the system. It is a simple \ndatabase of facts that represent the state of the system. The State \nis necessary to determine the way the problems or tasks are \nreduced to their primitive level. The reduction is done by \nsatisfying different prerequisites set in the methods; these \nprerequisites are defined in the state. The Tasks are high level \ntasks or methods defined in the Domain. The planner based on the \nState and the goals selects one or more high level tasks that need \nto be reduced to plans [Figure  15]. \nFigure 15: Diagram of a Planner \nThe plans then generate the game moves. The number of \nmoves generated by the plans is just a fraction of the possible \nmoves at that point. This reduces the game tree providing the \nopportunity to generate smaller and deeper game trees and making \nmore efficient decisions in general.  \n7. Conclusion \nEven though the results from the CBR database are not \ncomplete at this time partial strategies are implemented as cases \nand recognized during game play by the CBR system. These \nsmaller local strategies coupled with more global higher level \nstrategies that are particularly important at the beginning of the \ngame would form a complete CBR database and represent a \nknowledge engineered style of playing of the AI player.  \nThe AI Planning approach is a proven method by the tic-tac-\ntoe experiment and is suitable for implementing the strategies \nassociated with the CBR cases. \nThis approach in general benefits from both technologies, \nCBR as well as AI Planning and comprises an elegant solution. \nEven though AI Planning can be enough as a single technology \nfor some simpler problems like tic-tac-toe the complexity of \nMonopoly would mean that the Planner would have to incorporate \nCore Planner \nTasks\nPlan\nState\nInteractive and Adaptable Media\n301\n3rd International Conference on Digital Interactive Media in Entertainment and Arts\nlarge and complex domain and a very big state model. The CBR \napplication helps reduce this complexity by focusing the planning \non smaller domain of the game. Basically the CBR reduces the \noverall goal of the play (wining the game) to smaller more \nconcrete goals suitable to the particular state of the game, thus \nreducing the need for global planning strategies and complex \nplanning domain.  \nFurthermore this symbiosis of technologies gives way for \nmore precise and finely tuned strategies which can be difficult to \ninclude into global plan for the whole game. One simple example \nfor the Monopoly game would be this: Sometimes it\u2019s better to \nstay in jail because rolling double increases the probability of \nlanding on some field (two, four, six, eight, ten or twelve steps \nfrom the jail) that can be of great importance to the rest of the \ngame. These and similar small local strategies can be easily \nrecognized by similar cases in the CBR database.  \nIn other words the system is flexible enough so that new \nstrategies can be incorporated easily missing strategies can be also \nrecognized by the distance metrics as well as wrong assumptions \nin the strategies can be easily recognized. \nOne other important property of the system is that is highly \nconfigurable. The game its self can be diversely different \ndepending on the configuration of the board. Even though the \nplatform is restricted to Monopoly type of games, changing the \nlayout and values of the fields effectively brings completely \ndifferent properties of the game. In addition the CBR database \nrepresents the entire experience of the AI Player. It can be filled \nwith rich set of strategies or even configured with different flavors \nof difficulties of play, this of course coupled with the domain of \nthe planner which can differ from a case to a case as well.  \n8. Future Work \nFurther exploration of this technology would go towards \ncomplete implementation of an AI aware agent for monopoly. \nInitial results from the local cases with more specific strategies \nshow CBR as a capable tool for representing expertise in playing \nthe game. Completing the more general strategies and coupling \nthem with the planning domain will give precise results on the \nbenefits from this architecture. \nThere is also need for exploring the planning of strategies of \nopponents. This task is to some extent different because we \ncannot always expect the opponent to select the best move we \nthink. In the Tic-tac-toe example all possible moves of the \nopponent were taken into consideration, if we used the same \nplanner for the opponent only tie games would result from the \ngame tree. In other words mistakes of the players also need to be \nconsidered.  \nThe CBR Platform brings other functionalities well worth of \nexploring as well. The revision stage of the JColibri2 platform is \nbasically capable of fine tuning strategies or even developing new \nstrategies for the games. A well written underlying AI planning \nmodel with a capable feedback of the game tree evaluation back \nto the CBR revision capability can be an interesting concept in \nautomatic experience acquisition for the AI model. \nThere are also many other fields were combined CBR and \nplanning approach can be incorporated into a problem solution. \nThis combination is analogous in a big extent to a human way of \nreasoning. People in addition to logic of reasoning in situations \nwith lack of information rely to planning strategies and prior \nexperience, exactly the intuition behind CBR \u2013 AI Planning \narchitecture.  \n9. ACKNOWLEDGMENTS \nWe would like to thank Prof. Sofia Tsekeridou for her \ninvolvement in the valuable discussions we had on the topic of \nCBR. \n10. REFERENCES \n[1]\nMinimax. Wikipedia. [Online] [Cited: April 23, 2008.] \nhttp://en.wikipedia.org/wiki/Minimax. \n[2]\nVon Neumann, J: Zur theorie der gesellschaftsspiele Math. \nAnnalen. 100 (1928) 295-320 \n[3]\nAutomated Planning. Wikipedia. [Online] [Cited: April 23, \n2008.] http://en.wikipedia.org/wiki/Automated_planning. \n[4]\nSanchez-Ruiz, Antonio, et al. Game AI for a Turn-based \nStrategy Game with Plan Adaptation and Ontology-based \nretrieval.\n[5]\nK. Erol, J. Hendler, and D. Nau (1994). Semantics for \nhierarchical task-network planning. Technical Report TR-94-\n31, UMIACS. \n[6]\nSmith, S. J. J. and Dana S. Nau, T. A. Throp. A Planning \napproach decrarer play in contract bridge. Computational \nIntelligence. 1996, Vol. 12, 1. \n[7]\nOne Jump Ahead: Challenging Human Supremacy in \nCheckers. J.Schaeffer. s.l. : Springer-Verlag, 1997. \n[8]\nIBM. How Deep Blue works. [Online] 1997. [Cited: April \n23, 2008.] \nhttp://www.research.ibm.com/deepblue/meet/html/d.3.2.html\n[9]\nGhallab, Malik, Nau, Dana and Traverso, Paolo.\nAutomated Planning theory and practice. s.l. : Morgan \nKaufmann Publishers, May 2004. ISBN 1-55860-856-7. \n[10] Case Based Reasoning. Experiences, Lessons and Future. \nLeake, David. s.l. : AAAI Press. MIT Press., 1997. \n[11] Applying case-based reasoning: techniques for enterprise \nsystems. Watson, I. San Francisco, CA, USA : Morgan \nKaufmann Publishers Inc., 1998. \n[12] Plaza, A. Aamodt and E. Case-based reasoning: \nFoundational issues, methodological. AI Communications. \n1994, 7(i). \n[13] Tic-tac-toe. Wikipedia. [Online] [Cited: April 23, 2008.] \nhttp://en.wikipedia.org/wiki/Tic-tac-toe. \n[14] D\u00edaz-Agudo, B. and Gonz\u00e1lez-Calero, P. A. An \narchitecture for knowledge intensive CBR systems. Advances \nin Case-Based Reasoning \u2013 (EWCBR\u201900). New York : \nSpringer-Verlag, Berlin Heidelberg, 2000. \n[15] Ilghami, Okhtay and Nau, Dana S. A General Approach to \nSynthesize Problem-Specific Planners. 2003. \n302\nDIMEA 2008\n3rd International Conference on Digital Interactive Media in Entertainment and Arts\n",
    "pdf_url": "/media/Article_01_3I0E4lP.pdf",
    "references": [
      "[1]",
      "Minimax. Wikipedia. [Online] [Cited: April 23, 2008.] ",
      "http://en.wikipedia.org/wiki/Minimax. ",
      "[2]",
      "Von Neumann, J: Zur theorie der gesellschaftsspiele Math. ",
      "Annalen. 100 (1928) 295-320 ",
      "[3]"
    ],
    "publication_date": "2023-11-05T00:00:00",
    "corrected": 0
  },
  {
    "titre": "Semantic Analysis and Classification of Emails through Informative Selection of Features and Ensemble AI Model",
    "resume": "The emergence of novel types of communication, such as email, hasbeen brought on by the development of the internet, which radicallyconcentrated the way in that individuals communicate socially andwith one another. It is now establishing itself as a crucial aspect ofthe communication network which has been adopted by a varietyof commercial enterprises such as retail outlets. So in this researchpaper, we have built a unique spam-detection methodology basedon email-body sentiment analysis. The proposed hybrid model isput into practice and preprocessing the data, extracting the proper-ties, and categorizing data are all steps in the process. To examinethe emotive and sequential aspects of texts, we use word embed-ding and a bi-directional LSTM network. this model frequentlyshortens the training period, then utilizes the Convolution Layer toextract text features at a higher level for the Bi LSTM network. Ourmodel performs better than previous versions, with an accuracyrate of 9798%. In addition, we show that our model beats not justsome well-known machine learning classifiers but also cutting-edgemethods for identifying spam communications, demonstrating itssuperiority on its own. Suggested Ensemble models results areexamined in terms of recall, accuracy, and precision",
    "auteurs": [
      "Khushbu Doulani",
      "GRU",
      "Shivangi Sachan",
      "Khushbu Doulani",
      "Mainak Adhikari",
      "Noida",
      "Decision Trees",
      "Bi-LSTM",
      "GRU",
      "BiLSTM+GRU"
    ],
    "institutions": [
      "Department of CSEIIIT Lucknow Lucknow, UP, ",
      "Mainak Adhikari Department of CSEIIIT LucknowUP, "
    ],
    "mots_cles": [
      " Dataset",
      " KNN",
      " Gaussian Naive Bayes",
      " LSTM",
      " SVM",
      " Bidirectional "
    ],
    "texte_integral": "Semantic Analysis and Classification of Emails through\nInformative Selection of Features and Ensemble AI Model\nShivangi Sachan\u2217\nDepartment of CSE\nIIIT Lucknow\nLucknow, UP, India\nmcs21025@iiitl.ac.in\nKhushbu Doulani\nVardhaman College of Engineering\nHyderabad, India\nkhushidoulani@gmail.com\nMainak Adhikari\nDepartment of CSE\nIIIT Lucknow\nUP, India\nmainak.ism@gmail.com\nABSTRACT\nThe emergence of novel types of communication, such as email, has\nbeen brought on by the development of the internet, which radically\nconcentrated the way in that individuals communicate socially and\nwith one another. It is now establishing itself as a crucial aspect of\nthe communication network which has been adopted by a variety\nof commercial enterprises such as retail outlets. So in this research\npaper, we have built a unique spam-detection methodology based\non email-body sentiment analysis. The proposed hybrid model is\nput into practice and preprocessing the data, extracting the proper-\nties, and categorizing data are all steps in the process. To examine\nthe emotive and sequential aspects of texts, we use word embed-\nding and a bi-directional LSTM network. this model frequently\nshortens the training period, then utilizes the Convolution Layer to\nextract text features at a higher level for the BiLSTM network. Our\nmodel performs better than previous versions, with an accuracy\nrate of 97\u201398%. In addition, we show that our model beats not just\nsome well-known machine learning classifiers but also cutting-edge\nmethods for identifying spam communications, demonstrating its\nsuperiority on its own. Suggested Ensemble model\u2019s results are\nexamined in terms of recall, accuracy, and precision\nCCS CONCEPTS\n\u2022 Computer systems organization \u2192 Embedded systems; Re-\ndundancy; Robotics; \u2022 Networks \u2192 Network reliability.\nKEYWORDS\nDataset, KNN, Gaussian Naive Bayes, LSTM, SVM, Bidirectional\nLSTM, GRU, Word-Embeddings, CNN\nACM Reference Format:\nShivangi Sachan, Khushbu Doulani, and Mainak Adhikari. 2023. Semantic\nAnalysis and Classification of Emails through Informative Selection of\nFeatures and Ensemble AI Model. In 2023 Fifteenth International Conference\non Contemporary Computing (IC3-2023) (IC3 2023), August 03\u201305, 2023, Noida,\nIndia. ACM, New York, NY, USA, 7 pages. https://doi.org/10.1145/3607947.\n3607979\n\u2217Both authors contributed equally to this research.\nPermission to make digital or hard copies of all or part of this work for personal or\nclassroom use is granted without fee provided that copies are not made or distributed\nfor profit or commercial advantage and that copies bear this notice and the full citation\non the first page. Copyrights for components of this work owned by others than the\nauthor(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or\nrepublish, to post on servers or to redistribute to lists, requires prior specific permission\nand/or a fee. Request permissions from permissions@acm.org.\nIC3 2023, August 03\u201305, 2023, Noida, India\n\u00a9 2023 Copyright held by the owner/author(s). Publication rights licensed to ACM.\nACM ISBN 979-8-4007-0022-4/23/08...$15.00\nhttps://doi.org/10.1145/3607947.3607979\n1\nINTRODUCTION\nOver the past few years, a clear surge of both the amount of spam-\nmers as well as spam emails. This is likely due to a fact that the\ninvestment necessary for engaging in the spamming industry is\nrelatively low. As a result of this, we currently have a system that\nidentifies every email as suspicious, which has caused major expen-\nditures in the investment of defense systems [12]. Emails are used\nfor online crimes like fraud, hacking, phishing, E-mail bombing, bul-\nlying, and spamming. [16]. Algorithms that are based on machine\nlearning (ML) are now the most effective and often used approach to\nthe recognition of spam. Phishing, which is defined as a fraudulent\nattempt to acquire private information by masquerading as a trust-\nworthy party in electronic communication, has rapidly advanced\npast use of simple techniques and the tactic of casting a wide net;\ninstead, spear phishing uses a variety of sophisticated techniques\nto target a single high-value individual. Other researchers used NB,\nDecision Trees, and SVM to compare the performance of supervised\nML algorithms for spam identification [6]. Spam emails clog up re-\ncipients\u2019 inboxes with unsolicited communications, which frustrate\nthem and push them into the attacker\u2019s planned traps [7]. As a re-\nsult, spam messages unquestionably pose a risk to both email users\nand the Internet community. In addition, Users may occasionally\nread the entire text of an unsolicited message that is delivered to\nthe target users\u2019 inboxes without realizing that the message is junk\nand then choosing to avoid it. Building a framework for email spam\ndetection is the aim of this project. In this approach, we combine the\nWord-Embedding Network with the CNN layer, Bi-LSTM, and GRU\n(BiLSTM+GRU). CNN layers are used to speed up training time\nbefore the Bi-LSTM network, and more advanced textual character-\nistics are extracted with the use of this network in comparison to\nthe straight LSTM network, in less time. Gated recurrent neural net-\nworks (GRUs) are then added because they train more quickly and\nperform better for language modeling. To evaluate and investigate\nvarious machine learning algorithms for predicting email spam,\nand develop a hybrid classification algorithm to filter email spam\nbefore employing an ensemble classification algorithm to forecast\nit. To put an innovative technique into practice and compare it to\nthe current method in terms of various metrics. Ensemble learn-\ning, a successful machine learning paradigm, combines a group of\nlearners rather than a single learner to forecast unknown target\nattributes. Bagging, boosting, voting, and stacking are the four main\ntypes of ensemble learning techniques. To increase performance,\nan integrated method and the combining of two or three algorithms\nare also suggested. Extraction of text-based features takes a long\ntime. Furthermore, it can be challenging to extract all of the crucial\ninformation from a short text. Over the span associated with this\n181\nIC3 2023, August 03\u201305, 2023, Noida, India\nSachan et al.\nresearch, we utilize Bidirectional Large Short-Term Memories (Bi-\nLSTM) in conjunction with Convolutional Neural Networks (CNN)\nto come up with an innovative method to the detection of spam.\nBagging and boosting approaches were widely preferred in this\nstudy. Contribution and paper organization is as follows: section 1.1\ndescribes literature study, section 1.2 describe motivation for this\nresearch work, section 2 sketches procedure of details implemen-\ntation, Section 3 present experimental setup, dataset description\nand evaluation metrics, and section 4 summarizing outcomes of the\nexperiment.\n1.1\nRelated Work\nEmail is indeed the second most frequently utilized Internet appli-\ncation as well as the third most common method of cyberbullying,\nclaims one study. Cybercriminals exploit it in a number of ways,\nincluding as sending obscene or abusive messages, adding viruses\nto emails, snatching the private information of victims, and ex-\nposing it to a broad audience. Spam letters made up 53.95% of all\nemail traffic in March 2020. We examine three main types of un-\nlawful emails in our study. First are fake emails, which are sent\nto manipulate recipients to submit sensitive information. The sec-\nond as being cyberbullying\u2019s use of harassing emails to threaten\nindividuals. Suspicious emails that describe illegal activities belong\nto the third category. Many researchers have earlier contributed\nmassively to this subject. The researcher claims there is some proof\nthat suspicious emails were sent before to the events of 9/11. [14].\nWhen it comes to data labeling, there are also convinced rule-based\napproaches and technologies ( like VADER) that are used, even\nthough their efficiency of the are together is adversely affected. A\nhidden layer, which itself is essential for vectorization, is the top\nlayer of the model. We use oversampling methods for this minority\nclass because of the absence of data. Sampling techniques can help\nwith multicollinearity, but they have an impact on simulation re-\nsults. Oversampling causes data to be randomly repeated, which\naffects test data because dividing data may result in duplicates. Un-\ndersampling may result in the loss of some strong information. In\norder to advance email research, it is crucial to provide datasets on\ncriminal activity. P. Garg et al. (2021) [5], which revealed that spam\nin an email was detected in 70 percent of business emails, spam was\nestablished as an obstacle for email administrators. Recognizing\nspam and getting rid of it were the primary concerns, as spam can\nbe offensive, may lead to other internet sites being tricked, which\ncan offer harmful data, and can feature those who are not particu-\nlar with their content using NLP. To select the best-trained model,\neach mail transmission protocol requires precise and effective email\nclassification, a machine learning comparison is done. Our study\nhas suggested that innovative deep learning outperforms learning\nalgorithms like SVM and RF. Current studies on the classification\nof emails use a variety of machine learning (ML) techniques, with\na few of them focusing on the study of the sentiments consisted of\nwithin email databases. The lack of datasets is a significant obstacle\nto email classification. There are few publicly accessible E-mail\ndatasets, thus researchers must use these datasets to test their hy-\npotheses or gather data on their own. Authors[15] describe supplied\ntwo-phased outlier detection models to enhance the IIOT network\u2019s\ndependability. Artificial Neural Network, SVM, Gaussian NB, and\nRF (random forest) ensemble techniques were performed to forecast\nclass labels, and the outputs were input into a classifying unit to\nincrease accuracy. A method for content-based phishing detection\nwas presented by the authors in [2], to classify phishing emails,\nthey employed RF. They categorize spam and phishing emails. They\nenhanced phishing email classifiers with more accurate predictions\nby extracting features. They showed some effective Machine learn-\ning spam filtering techniques. When the PCA method is used, it will\nlower the number of features in the dataset. The collected features\ngo through the PCA algorithm to reduce the number of features.\nThe PCA method is used to make a straightforward representation\nof the information which illustrates the amount of variability there\nis in the data. The authors of [20] presented the Fuzzy C-means\nmethod for classifying spam email. To stop spam, they implemented\na membership threshold value. A methodology to identify unla-\nbeled data was put forth by the authors of [1] and applied motive\nanalysis to the Enron data collection. They divided the data into\ncategories that were favorable, negative, and neutral. They grouped\nthe data using k-means clustering, an unsupervised ML technique\nand then classified it using the supervised ML techniques SVM and\nNB. Hina, Maryam, and colleagues (2021) implemented Sefaced:\nDeep learning-based semantic analysis and categorization of e-mail\ndata using a forensic technique. For multiclass email classification,\nSeFACED employs a Gated Recurrent Neural Network (GRU) based\non Long Short-Term Memory (LSTM). Different random weight ini-\ntializations affect LSTMs [9]. Zhang, Yan, et al.(2019) Experiments\non three-way game-theoretic rough set (GTRS) email spam filter-\ning show that it is feasible to significantly boost coverage without\ndecreasing accuracy [23]. According to Xia et al. [22], SMS spam\nhas been identified using machine learning model such as naive\nbayes , vector-space modeling, support vector machines (SVM),\nlong selective memory machines (LSTM), and convolutional neural\nnetworks including every instance of a method for categorizing\ndata. Elshoush, Huwaida, et al. (2019) Using adaboost and stochastic\ngradient descent (sgd) algorithms for e-mail filtering with R and\norange software spam [3]. Orange software was used to create the\nclassifications, which included Adaboost and SGD. The majority of\nresearchers focused on text-based email spam classification meth-\nods because image-based spam can be filtered in the early stages\nof pre-processing. There are widely used word bag (BoW) model,\nwhich believes that documents are merely unordered collections\nof words, is the foundation for these techniques. Kumaresan [11]\nexplains SVM with a cuckoo search algorithm was used to extract\ntextual features for spam detection. Renuka and Visalakshi made\nuse of svm [17] spam email identification, followed by selecting\nfeatures using Latent Semantic Indexing (LSI). Here we have used\nlabeled dataset to train the hybrid classifier. We used TF-IDF for\nfeature extraction [20] and Textual features for spam detection\nwere extracted using SVM and a cuckoo search algorithm. [4] for\nfiltering out the spam email. Combining the integrated strategy to\nthe pure SVM and NB methods, overall accuracy is really improved.\nMoreover, accurate detection for spam email has been proposed\nusing the Negative Selection Algorithm (NSA) and Particle Swarm\nOptimization\u2019s (PSO) algorithm. PSO is used in this instance to\nimprove the effectiveness of the classifier.\n182\nSemantic Analysis and Classification of Emails through Informative Selection of Features and Ensemble AI Model\nIC3 2023, August 03\u201305, 2023, Noida, India\n1.2\nMotivation and Novelty\nEmail is most common form of communication between people\nin this digital age. Many users have been victims of spam emails,\nand their personal information has been compromised. The email\nClassification technique is employed to identify and filter junk\nmail, junk, and virus-infected emails prior to reach a user\u2019s inbox.\nExisting email classification methods result in irrelevant emails\nand/or the loss of valuable information. Keeping these constraints\nin mind, the following contributions are made in this paper:\n\u2022 Text-based feature extraction is a lengthy process. Further-\nmore, extracting every important feature from text is difficult.\nIn this paper, we show how to employ GRU with Convo-\nlutional Neural Networks and Bidirectional-LSTM to find\nspam.\n\u2022 Used Word-Embeddings, BiLSTM, and Gated Recurrent Neu-\nral Networks to examine the relationships, sentimental con-\ntent, and sequential way of email contents.\n\u2022 Applied CNN before the Bi-LSTM network, training time can\nbe sped up. This network can also extract more advanced\ntextual features faster than the Bi-LSTM network alone when\ncombined with the GRU network.\n\u2022 We use Enorn Corpora datasets and compute precision, re-\ncall, and f-score to assess how well the suggested technique\nperforms. Our model outperforms several well-known ma-\nchine learning techniques as well as more contemporary\nmethods for spam message detection.\n2\nPROPOSED SYSTEM ARCHITECTURE AND\nMODEL\nE-mail is a valuable tool for communicating with other users. Email\nallows the sender to efficiently forward millions of advertisements\nat no cost. Unfortunately, this scheme is now being used in a variety\nof organizations. As a result, a massive amount of redundant emails\nis known as spam or junk mail, many people are confused about the\nemails in their E- Mailboxes. Each learning sequence is given for-\nward as well as backward to two different LSTM networks that are\nattached to the same outputs layer in order for bidirectional Lstms\nto function. This indicates that the Bi-LSTM has detailed sequential\ninformation about all points before and following each point in a\nspecific sequence. In other words, we concatenate the outputs from\nboth the forward and the backward LSTM at each time step rather\nthan just encoding the sequence in the forward direction. Each\nword\u2019s encoded form now comprehends the words that come before\nand after it. This is a problem for the Internet community. The di-\nagram depicts various stages that aid in the prediction of email spam:\nBecause real-world data is messy and contains unnecessary infor-\nmation and duplication, data preprocessing is critical in natural\nlanguage processing (NLP). The major preprocessing steps are de-\npicted below.\n2.1\nNLP Tokenization\nTokenization of documents into words follows predefined rules.\nThe tokenization step is carried out in Python with spacy library.\n2.2\nStop Words Removal\nStop words appear infrequently or frequently in the document, but\nthey are less significant in terms of importance. As a result, these\nare removed to improve data processing.\n2.3\nText Normalization\nA word\u2019s lexicon form or order may differ. Thus, they must all be\nchanged to their root word to be correctly analyzed. Lemmatization\nand stemming are the two methods that can be used for normal-\nization. When a word\u2019s final few characters are removed to create\na shorter form, even if that form has no meaning, the procedure\nis known as stemming. lemmatization [21] is a mixture of corpus-\nbased an rule-based methods, and it retains the context of a term\nwhile changing it back to its root.\n2.4\nFeature Extraction\nfeature extraction which transforms the initial text into its features\nso that it may be used for modeling after being cleaned up and\nnormalized. Before predicting them, we use a specific way to give\nweights to specific terms in our document. While it is simple for a\ncomputer to process numbers, we choose to represent individual\nwords numerically. In such cases, we choose word embeddings. IDF\nis the count of documents containing the term divided by the total\nnumber of documents, and occurrence is the amount of instances a\nword appears in a document. We derive characteristics based on\nequations. 1,2,3,4,5, and 6. We use equations to derive properties.\n\ud835\udc47 \ud835\udc53 \ud835\udc3c\ud835\udc51\ud835\udc53 = \ud835\udc61\ud835\udc53 \u2217\n\ufffd 1\n\ud835\udc51\ud835\udc53\n\ufffd\n(1)\n\ud835\udc47 \ud835\udc53 \ud835\udc3c\ud835\udc51\ud835\udc53 = \ud835\udc61\ud835\udc53 \u2217 Inverse(\ud835\udc51\ud835\udc53 )\n(2)\n\ud835\udc47 \ud835\udc53 \ud835\udc3c\ud835\udc51\ud835\udc53 (\ud835\udc61,\ud835\udc51, \ud835\udc37) = \ud835\udc47 \ud835\udc53 (\ud835\udc61,\ud835\udc51).\ud835\udc3c\ud835\udc51\ud835\udc53 (\ud835\udc61, \ud835\udc37)\n(3)\n\ud835\udc47\ud835\udc3c\ud835\udc51\ud835\udc53 (\ud835\udc61,\ud835\udc51) = log\n\ud835\udc41\n|\ud835\udc51\ud835\udf16\ud835\udc37\ud835\udc61\ud835\udf16\ud835\udc37|\n(4)\nA word2vec neural network-based approach is the method that is\nutilized for this goal as the tool. The following equation, referred\nto as 5, shows how word2vec handles word context through the\nuse of probability-accurate measurements. Here letter D stands for\nthe paired-wise display of a set of words, while the letters w and c0\nor c1 represent paired word context that originated from a larger\ncollection of set D.\n\ud835\udc43 (\ud835\udc37 = 1 | \ud835\udc64,\ud835\udc5011:\ud835\udc58) =\n1\n1 + \ud835\udc52\u2212(\ud835\udc64\u00b7\ud835\udc5011+\ud835\udc64\u00b7\ud835\udc5012+...+\ud835\udc64\u00b7\ud835\udc501\ud835\udc58)\n(5)\n\ud835\udc43 (\ud835\udc37 = 1 | \ud835\udc64,\ud835\udc501:\ud835\udc58) =\n1\n1 + \ud835\udc52\u2212(\ud835\udc64\u00b7\ud835\udc500)\n(6)\n183\nIC3 2023, August 03\u201305, 2023, Noida, India\nSachan et al.\n2.5\nWord-Embeddings\nWord-Embedding helps to improve on the typical \"bag-of-words\"\nworldview, which requires a massive sparse feature vector to score\nevery word individually to represent this same entire vocabulary.\nThis perception is sparse because the vocabulary is large, and each\nword or document is defined by a massive vector. Using a word\nmap-based dictionary, word embedding needs to be converted terms\n(words) into real value feature vectors. There are two basic issues\nwith standard feature engineering techniques for deep learning.\nData is represented using sparse vectors, and the second is that\nsome of the meanings of words are not taken into consideration.\nSimilar phrases will have values in embedding vectors that are\nalmost real-valued. The Input length in our proposed study is set\nto 700 for our suggested model. If the texts seemed to be integer\nencoded with value systems between 10 and 20, the vocabulary\ndistance would be 11. Our data is encoded as integers, and the input\nand output dimensions are both set to 50,000. The embedding layer\noutcome will be used in successive layers and for BiLSTM and GRU\nlayers.\n2.6\nMachine Learning Model\nWithin the scope of the research, we are using the subsequent ma-\nchine learning techniques, to examine and compare the overall\nefficacy of our suggested Bi-LSTM strategy: Support Vector Ma-\nchine, Gaussian NB, Logistic Regression, K - nearest neighbors, and\nRandom Forest (RF).\n2.7\nConvolution Network\nThe popular RNN model generally performs well but takes too\nlong to train the model incorporating the textual sequential data.\nWhen a layer is added after the RNN layer, the model\u2019s learning\nduration is considerably decreased. Higher-level feature extraction\nis another benefit. [19] additionally possible using the convolutional\nlayer. In essence, the convolution layer looks for combinations of\nthe various words or paragraphs in the document that involve the\nfilters. We use features with 128 dimensions and a size 10 for each.\nFor this task, the Relu activation function is utilized. After that, the\none-dimensional largest pooling layers with a pooling size of 4 are\nput on the data in order to obtain higher-level features.\n2.8\nBiLSTM Network with GRU\nRecurrent Neural Network (RNN) technique of text sentiment anal-\nysis is particularly well-liked and frequently applied. Recurrent\nneural networks (RNN) surpass conventional neural networks. be-\ncause it can remember the information from earlier time steps\nthanks to its memory. A state vector is combined with an RNN\u2019s\ndata to create a new state vector. The resulting state vector uses the\npresent to recollect past knowledge. The RNN is straightforward\nand is based on the following equations:\n\u210e\ud835\udc61 = tanh (\ud835\udc4a\u210e\u210e\u210e\ud835\udc61\u22121 +\ud835\udc4a\ud835\udf0b\u210e\ud835\udc65\ud835\udc61)\n(7)\n\ud835\udc66\ud835\udc61 = \ud835\udc4a\u210e\ud835\udc66\u210e\ud835\udc61\n(8)\nThe vanilla RNN[18]is not very good at remembering previous\nsequences. In addition to that, RNN struggles with diminishing\ngradient descent. A kind of RNN is a long short-term recall network\n(LSTM), solves a vanishing gradient descent problem and learns\nlong-term dependencies[10]. LSTM was actually created to address\nthe problem of long-term reliance. LSTM has the unique ability to\nrecall. The cell state is the LSTM model\u2019s central concept. With\nonly a small amount of linear interaction, the cell state follows the\nsequence essentially unmodified from beginning to end. gate of\nan LSTM is also significant. Under the command of these gates,\ninformation is safely inserted to or eliminated from the cell stated.\nThe following equations are used by the LSTM model to update\neach cell:\n\ud835\udc53\ud835\udc61 = \ud835\udf0e\n\ufffd\n\ud835\udc4a\ud835\udc53 \u00b7 [\u210e\ud835\udc61\u22121,\ud835\udc65\ud835\udc61] + \ud835\udc4f\ud835\udc53\n\ufffd\n(9)\nIn this case, Xt denotes input, and ht is the hidden state at the t\ntime step. The following is the revised cell state Ct:\n\ud835\udc56t = \ud835\udf0e (\ud835\udc4a\ud835\udc56 [\u210e\ud835\udc61\u22121,\ud835\udc65\ud835\udc61] + \ud835\udc4f\ud835\udc56)\n(10)\n\ud835\udc36\ud835\udc47 = tanh (\ud835\udc4a\ud835\udc50 [\u210e\ud835\udc61\u22121,\ud835\udc65\ud835\udc61] + \ud835\udc4f\ud835\udc50\ud835\udc61)\n(11)\n\ud835\udc36\ud835\udc61 = \ud835\udc53\ud835\udc61 \u2217 \ud835\udc36\ud835\udc61\u22121 + \ud835\udc56\ud835\udc61 \u2217 \ud835\udc36\ud835\udc47\n(12)\nHere, we may compute the output and hidden state at t time steps\nusing the point-wise multiplication operator *.\n\ud835\udc5c\ud835\udc61 = \ud835\udf0e (\ud835\udc4a\ud835\udc5c \u00b7 [\u210e\ud835\udc61\u22121,\ud835\udc65\ud835\udc61] + \ud835\udc4f\ud835\udc5c)\n(13)\n\u210e\ud835\udc61 = \ud835\udc5c\ud835\udc61 \u2217 tanh (\ud835\udc36\ud835\udc61)\n(14)\nDue to the reality it only considers all prior contexts from the\npresent one, LSTM does have a few drawbacks. As a result of this,\nit may accept data from preceding time steps through LSTM as well\nas RNN. Therefore, in order to avoid this issue, further improve-\nments are carried out with the help of a bidirectional recurrent\nneural network(Bi-RNN). BiRNN [13] can handle two pieces of in-\nformation from both the front and the back. Bi-LSTM is created\nby combining the Bi-RNN and LSTM. As a result, operating LSTM\nhas advantages such as cell state storage so that BiRNN have way\nto acknowledge from the context before and after. As a conse-\nquence of this, it provides the Bi-LSTM with the advantages of an\nLSTM with feedback for the next layer. Remembering long-term\ndependencies is a significant new benefit of Bi-LSTM. The output,\nwhich is a feature vector, will be based on the call state. Finally,\nwe forecast the probability of email content as Normal, Fraudu-\nlent, Harassment, and Suspicious Emails using as an input to the\nsoftmax activation function, which is a weighted sum of the dense\nlayer\u2019s outputs. To regulate the information flow, GRU employs\nthe point-wise multiplying function and logistic sigmoid activation.\nThe GRU has hidden states of storage memory and does not have\ndistinct memory cells or units for state control. The W, U, and b\nvectors, which stand for weights, gates, and biases, respectively, are\ncrucial variables that must be calculated during the creation of the\nGRU model. For training reasons, the pre-trained word embedding\nknown as the Glove vector is used. They made it clear that GRU\nis the superior model when there is a large amount of training\ndata for textual groups and word embedding is available. BiLSTM,\nCNN, and GRU is required so as to compensate for the deletion\nof the document\u2019s long-term and short-term connections. In our\ncase, the embedding dimension, maximum sequence length, and\nlexicon size were used to start the LSTM embedding layer in three\nseparate LSTM models. The input vector was modified to make it\nappropriate for such a Conv1D layer, prior situations\u2019 sequences are\nreturned by LSTM layer. The \"return sequences\" of the LSTM layer\nmust be set to False when the subsequent state is free of the gated\n184\nSemantic Analysis and Classification of Emails through Informative Selection of Features and Ensemble AI Model\nIC3 2023, August 03\u201305, 2023, Noida, India\narchitecture. Quantity of learning parameters must be taken into\nconsideration. A 350-unit LSTM layer was set - up, and different\nLSTM unit combinations were tested. More importantly, because\nit has more parts, the model made with BiLSTM will take longer\nto train. Bidirectional LSTM is the name of a particular kind of\nrecurrent neural network that is primarily used for the processing\nof natural languages. (BiLSTM). It is able to use data from both\nsides, and, in contrast to regular LSTM, it enables input flow in\nboth directions. It is an effective instrument for demonstrating the\nlogical relationships between words and phrases, and this involves\nboth the forward and backward directions of the sequence. In con-\nclusion, BiLSTM works by adding one extra layer of LSTM, causing\nthe information flow to travel in the other direction. It only denotes\nthat the input sequence runs in reverse at the next LSTM layer. Mul-\ntiple operations, including averaging, summation, multiplication,\nand concatenation, are then applied to the results of the two LSTM\nlayers. The gated design of Bi-LSTM and GRU networks solves\nthe disappearing gradient and exploding problems. A good way to\nhandle more long sequences is to use Bi-LSMT and GRU together.\nGRU works well with datasets that don\u2019t have text. In two to three\nrounds, the complicated CNN+BiLSTM+GRU model learns the long\nsequence of email text well. We have used word embedding, cnn,\nbidirectional lstm and gru networks as our three building blocks\nto separate email messages based on their sentiment and text\u2019s\nsequential features. Also, we succinctly demonstrate below why\nthese blocks help identify email spam:\n\u2022 First, We have used the Sequence - to - sequence Lstm as the\ncurrent block in the networks since it can retrieve both the\nprevious and next sequences from the current. More so than\na straightforward LSTM network, it can also recognize and\nextract text sentiment and sequential properties.\n\u2022 Second, we extract the more complex and advanced charac-\nteristics for Bi-LSTM network using Convolutional Network\nblock, which is the network\u2019s second block after the Bi-LSTM\nblock. Bi-LSTM takes a long time to extract text-based fea-\ntures, hence one of the reasons for using this block is to\nreduce the network\u2019s overall training time.\n3\nEXPERIMENTAL EVALUATION\n3.1\nExperimental Setup\nWe divided the information into training and testing groups of\n80/20. We divided the remaining 20% of the 80 percent training\ndata into test data for the model. Construct, compute, and evaluate\nthe efficacy of the suggested method using the Pythonic packages\nKeras, as TensorFlow and Scikit learn.\n3.2\nDataset Description\nEmail spam detection is the foundation of this research project. The\ndataset includes normal emails from the Enron corpora, deceptive\nemails from phished email corpora, harassment emails chosen from\nhate speech, and the offensive dataset. Only the content of the email\nbody is used for analysis; all header information, including sender,\ntopic, CC, and BCC, are eliminated. Word2vector, TF-IDF, and Word\nEmbedding are used to extract characteristics from the email mes-\nsage and classify them. This dataset[8] is publicly available. The\npresented model is implemented using Python, and several metrics,\nincluding accuracy, precision, and recall, are used to examine the\noutcomes.\n3.3\nEvaluation Metrics and Results\nClassifier performance is assessed Using metrics such as accuracy,\nprecision, and recall. Four terms make up a confusion matrix that\nis used to calculate these metrics.\n\u2022 True positives (TP) are positive values that have been accu-\nrately assigned the positive label.\n\u2022 The negative values that are accurately identified as negative\nare known as True Negatives (TN).\n\u2022 True Negative values are those that can be accurately identi-\nfied as being negative (TN).\n\u2022 Positive readings that have been mistakenly labeled as nega-\ntive are known as False Negatives (FN).\nAssess the efficacy of the suggested model is listed below:\n3.3.1\nAccuracy. Accuracy reveals how frequently the ML model\nwas overall correct.\nAccuracy =\n\ud835\udc47\ud835\udc43 +\ud835\udc47\ud835\udc41\n\ud835\udc47\ud835\udc43 +\ud835\udc47\ud835\udc41 + \ud835\udc39\ud835\udc43 + \ud835\udc39\ud835\udc41\n(15)\n3.3.2\nPrecision. The accuracy of the model gauges how effectively\nit can predict a specific category.\nPrecision =\n\ud835\udc47\ud835\udc43\n\ud835\udc47\ud835\udc43 + \ud835\udc39\ud835\udc43\n(16)\n3.3.3\nRecall. Recall tells us how often the model was able to rec-\nognize a specific category.\nRecall =\n\ud835\udc47\ud835\udc43\n\ud835\udc47\ud835\udc43 + \ud835\udc39\ud835\udc41\n(17)\nModel\nAccuracy\nPrecision\nRecall\nGaussian NB\n91.3\n90.1\n91.8\nRandom Forest\n88.41\n90\n88\nKNN\n86.6\n89\n87\nSVM\n92.4\n91\n92\nLSTM\n95.2\n95\n95.7\nProposed\nEnsemble\n(CNN,BiLSTM+GRU)\n97.32\n95.6\n95.3\nTable 1: Differet Model\u2019s Score on Test Data\nAccuracy, Precision, and Recall metrics are computed. In the\ngiven Table 1 where six different classifiers are Gaussian NB, Ran-\ndom Forest, KNN, SVM, LSTM, and Propose Ensemble Hybrid\nModel (CNN+BiLSTM+GRU) have been used in this work. In the\nCNN, Bi-LSTM, and GRU architectures which enable sequence pre-\ndiction, CNN strands for feature extraction on data input which are\ncombined with LSTM. It requires less time training and a higher\nexpandable model. Any bottlenecks are created by predictions and\nthe increasing number of distinct units of information. This model\nis useful for dealing with issue-related classifications that consist\nof two or more than two classes. So suggested Ensemble model, out\nof these six classifiers, produces more accurate findings.\n185\nIC3 2023, August 03\u201305, 2023, Noida, India\nSachan et al.\nFigure 1: Performance Analysis\n3.4\nComparative Analysis\nA model\u2019s ability to fit new data is measured by the validation\nloss, whereas its ability to fit training data is determined by the\ntraining loss. The two main variables that decide whether in which\nlearning is efficient or not are validation loss and training loss.\nLSTM and Suggested Ensemble hybrid Models have equivalent loss\nand accuracy. In this context, we are contrasting the LSTM with the\nproposed model (CNN, Bilstm, and GRU) in terms of their respective\nvalidation accuracies and losses. The model\u2019s accuracy was at its\nhighest after 14 epochs of operation when it achieved an accuracy\nof roughly 97-98% while minimizing model loss.\nFigure 2: LSTM Model Training and Validation Accuracy\nFigure 3: LSTM Model Training and Validation Loss\nFigure 4: Ensemble Model (CNN,BiLSTM+GRU) Training\nand Validation Accuracy\nFigure 5: Ensemble Model (CNN,BiLSTM+GRU)Training\nand Validation Loss\n186\nSemantic Analysis and Classification of Emails through Informative Selection of Features and Ensemble AI Model\nIC3 2023, August 03\u201305, 2023, Noida, India\nIn this Proposed ensemble hybrid model\u2019s train accuracy is 98.7%\nValidation accuracy is 97.32% and LSTM has train accuracy of 97.41%\nand validation accuracy is 95.2%. So based on figures 3 and 5 indicate\nthe validation loss for LSTM and the proposed ensemble hybrid\nmodel to be 0.93 and 0.84, respectively, and figures 2 and 4 show the\nvalidation accuracy to be 95.2% and 97.3%, respectively. LSTM and\nthe proposed hybrid model used ensemble artificial intelligence,\nwith the proposed hybrid model outperforming the LSTM. We\ndecide on dense architecture as the final model for identifying the\ntext messages as spam or nonspam based on loss, accuracy, and the\naforementioned charts. The loss and accuracy over epochs are more\nstable than LSTM, and the Proposed classifier has a straightforward\nstructure.\n4\nCONCLUSION\nThe model is composed of four networks Word-Embeddings, CNN,\nBi-LSTM, and GRU. We may train the model more quickly by using\nthe convolutional layer first, followed by the word-embedding layer,\nand then the BiLSTM network. The Bidirectional LSTM network\nalso has higher-level properties that we can extract. We have used\na bidirectional LSTM(BiLSTM)and GRU network to memorize a\nsentence\u2019s contextual meaning and sequential structure, which im-\nproves the model\u2019s performance accuracy to roughly 97.32 percent.\nREFERENCES\n[1] Rayan Salah Hag Ali and Neamat El Gayar. 2019. Sentiment analysis using unla-\nbeled email data. In 2019 International Conference on Computational Intelligence\nand Knowledge Economy (ICCIKE). IEEE, 328\u2013333.\n[2] Ali Shafigh Aski and Navid Khalilzadeh Sourati. 2016. Proposed efficient algo-\nrithm to filter spam using machine learning techniques. Pacific Science Review A:\nNatural Science and Engineering 18, 2 (2016), 145\u2013149.\n[3] Huwaida T Elshoush and Esraa A Dinar. 2019. Using adaboost and stochastic\ngradient descent (sgd) algorithms with R and orange software for filtering e-mail\nspam. In 2019 11th Computer Science and Electronic Engineering (CEEC). IEEE,\n41\u201346.\n[4] Weimiao Feng, Jianguo Sun, Liguo Zhang, Cuiling Cao, and Qing Yang. 2016. A\nsupport vector machine based naive Bayes algorithm for spam filtering. In 2016\nIEEE 35th International Performance Computing and Communications Conference\n(IPCCC). IEEE, 1\u20138.\n[5] Pranjul Garg and Nancy Girdhar. 2021. A Systematic Review on Spam Filtering\nTechniques based on Natural Language Processing Framework. In 2021 11th Inter-\nnational Conference on Cloud Computing, Data Science & Engineering (Confluence).\nIEEE, 30\u201335.\n[6] Adam Kavon Ghazi-Tehrani and Henry N Pontell. 2021. Phishing evolves: Ana-\nlyzing the enduring cybercrime. Victims & Offenders 16, 3 (2021), 316\u2013342.\n[7] Radicati Group et al. 2015. Email Statistics Report 2015\u20132019. Radicati Group.\nAccessed August 13 (2015), 2019.\n[8] Maryam Hina, Mohsin Ali, and Javed. 2021. Sefaced: Semantic-based forensic\nanalysis and classification of e-mail data using deep learning. IEEE Access 9\n(2021), 98398\u201398411.\n[9] Maryam Hina, Mohsin Ali, Abdul Rehman Javed, Fahad Ghabban, Liaqat Ali\nKhan, and Zunera Jalil. 2021. Sefaced: Semantic-based forensic analysis and\nclassification of e-mail data using deep learning. IEEE Access 9 (2021), 98398\u2013\n98411.\n[10] Weicong Kong, Zhao Yang Dong, Youwei Jia, David J Hill, Yan Xu, and Yuan\nZhang. 2017. Short-term residential load forecasting based on LSTM recurrent\nneural network. IEEE transactions on smart grid 10, 1 (2017), 841\u2013851.\n[11] T Kumaresan and C Palanisamy. 2017. E-mail spam classification using S-cuckoo\nsearch and support vector machine. International Journal of Bio-Inspired Compu-\ntation 9, 3 (2017), 142\u2013156.\n[12] Nuha H Marza, Mehdi E Manaa, and Hussein A Lafta. 2021. Classification of\nspam emails using deep learning. In 2021 1st Babylon International Conference on\nInformation Technology and Science (BICITS). IEEE, 63\u201368.\n[13] Tomas Mikolov and Geoffrey Zweig. 2012. Context dependent recurrent neural\nnetwork language model. In 2012 IEEE Spoken Language Technology Workshop\n(SLT). IEEE, 234\u2013239.\n[14] Sarwat Nizamani, Nasrullah Memon, Mathies Glasdam, and Dong Duong Nguyen.\n2014. Detection of fraudulent emails by employing advanced feature abundance.\nEgyptian Informatics Journal 15, 3 (2014), 169\u2013174.\n[15] V Priya, I Sumaiya Thaseen, Thippa Reddy Gadekallu, Mohamed K Aboudaif,\nand Emad Abouel Nasr. 2021. Robust attack detection approach for IIoT using\nensemble classifier. arXiv preprint arXiv:2102.01515 (2021).\n[16] Justinas Rastenis, Simona Ramanauskait\u02d9e, Justinas Janulevi\u010dius, Antanas \u010cenys,\nAsta Slotkien\u02d9e, and K\u0119stutis Pakrijauskas. 2020. E-mail-based phishing attack\ntaxonomy. Applied Sciences 10, 7 (2020), 2363.\n[17] Karthika D Renuka and P Visalakshi. 2014. Latent semantic indexing based SVM\nmodel for email spam classification. (2014).\n[18] Shuvendu Roy, Sk Imran Hossain, MAH Akhand, and N Siddique. 2018. Sequence\nmodeling for intelligent typing assistant with Bangla and English keyboard. In\n2018 International Conference on Innovation in Engineering and Technology (ICIET).\nIEEE, 1\u20136.\n[19] Tara N Sainath, Oriol Vinyals, Andrew Senior, and Ha\u015fim Sak. 2015. Convolu-\ntional, long short-term memory, fully connected deep neural networks. In 2015\nIEEE international conference on acoustics, speech and signal processing (ICASSP).\nIeee, 4580\u20134584.\n[20] Anuj Kumar Singh, Shashi Bhushan, and Sonakshi Vij. 2019. Filtering spam\nmessages and mails using fuzzy C means algorithm. In 2019 4th International\nConference on Internet of Things: Smart Innovation and Usages (IoT-SIU). IEEE,\n1\u20135.\n[21] Kristina Toutanova and Colin Cherry. 2009. A global model for joint lemmati-\nzation and part-of-speech prediction. In Proceedings of the Joint Conference of\nthe 47th Annual Meeting of the ACL and the 4th International Joint Conference on\nNatural Language Processing of the AFNLP. 486\u2013494.\n[22] Tian Xia. 2020. A constant time complexity spam detection algorithm for boosting\nthroughput on rule-based filtering systems. IEEE Access 8 (2020), 82653\u201382661.\n[23] Yan Zhang, PengFei Liu, and JingTao Yao. 2019. Three-way email spam filtering\nwith game-theoretic rough sets. In 2019 International conference on computing,\nnetworking and communications (ICNC). IEEE, 552\u2013556.\nReceived 15 April 2023\n187\n",
    "pdf_url": "/media/Article_02_zeNjnqn.pdf",
    "references": [
      "[1] Rayan Salah Hag Ali and Neamat El Gayar. 2019. Sentiment analysis using unla-",
      "beled email data. In 2019 International Conference on Computational Intelligence",
      "and Knowledge Economy (ICCIKE). IEEE, 328\u2013333.",
      "[2] Ali Shafigh Aski and Navid Khalilzadeh Sourati. 2016. Proposed efficient algo-",
      "rithm to filter spam using machine learning techniques. Pacific Science Review A:",
      "Natural Science and Engineering 18, 2 (2016), 145\u2013149.",
      "[3] Huwaida T Elshoush and Esraa A Dinar. 2019. Using adaboost and stochastic"
    ],
    "publication_date": "2023-11-06T00:00:00",
    "corrected": 0
  },
  {
    "titre": "Towards a Quantum Software Modeling Language",
    "resume": "We set down the principles behind a modeling language for quan-tum software. We present a minimal set of extensions to the well-known Unified Modeling Language (UML) that allows it to effec-tively model quantum software. These extensions are separate andindependent of UML as a whole. As such they can be used to ex-tend any other software modeling language, or as a basis for acompletely new language. We argue that these extensions are bothnecessary and sufficient to model, abstractly, any piece of quantumsoftware. Finally, we provide a small set of examples that showcasethe effectiveness of the extension set.",
    "auteurs": [
      "Carlos A. P\u00e9rez-Delgado\u2217",
      "G. Perez-Gonzalez",
      "Luis Potos\u00ed",
      "Modeling Language",
      "Carlos A. P\u00e9rez-Delgado",
      "G. Perez-Gonzalez"
    ],
    "institutions": [
      "University of Kent"
    ],
    "mots_cles": [
      " quantum computing",
      " software engineering",
      " UML "
    ],
    "texte_integral": "Towards a Quantum Software Modeling Language\nCarlos A. P\u00e9rez-Delgado\u2217\nUniversity of Kent\nCanterbury, Kent, United Kingdom\nc.perez@kent.ac.uk\nHector G. Perez-Gonzalez\nUniversidad Aut\u00f3noma de San Luis Potos\u00ed\nSan Luis Potos\u00ed, SLP, M\u00e9xico\nhectorgerardo@uaslp.mx\nABSTRACT\nWe set down the principles behind a modeling language for quan-\ntum software. We present a minimal set of extensions to the well-\nknown Unified Modeling Language (UML) that allows it to effec-\ntively model quantum software. These extensions are separate and\nindependent of UML as a whole. As such they can be used to ex-\ntend any other software modeling language, or as a basis for a\ncompletely new language. We argue that these extensions are both\nnecessary and sufficient to model, abstractly, any piece of quantum\nsoftware. Finally, we provide a small set of examples that showcase\nthe effectiveness of the extension set.\nCCS CONCEPTS\n\u2022 General and reference \u2192 General conference proceedings;\nDesign; \u2022 Software and its engineering \u2192 System descrip-\ntion languages; Unified Modeling Language (UML); Software\ndesign engineering; \u2022 Theory of computation \u2192 Quantum\ncomputation theory; Quantum information theory.\nKEYWORDS\nquantum computing, software engineering, UML\nACM Reference Format:\nCarlos A. P\u00e9rez-Delgado and Hector G. Perez-Gonzalez. 2020. Towards a\nQuantum Software Modeling Language. In IEEE/ACM 42nd International\nConference on Software Engineering Workshops (ICSEW\u201920), May 23\u201329, 2020,\nSeoul, Republic of Korea. ACM, New York, NY, USA, 3 pages. https://doi.org/\n10.1145/3387940.3392183\n1\nINTRODUCTION\nQuantum computation rose to prominence after the discovery of\nquantum algorithms[5, 7] that can efficiently perform tasks that\nare intractable classically. These discoveries propelled research and\ninterest in quantum computation. Today, there exists prototype\nquantum hardware with computational capabilities beyond that of\nany classical machine[1]. Further applications of quantum theory\nto computation have also been made in several areas of theory of\ncomputing, such as models of computation[6], data structures[8],\nand cryptography[2].\n\u2217Both authors contributed equally to this research.\nPermission to make digital or hard copies of all or part of this work for personal or\nclassroom use is granted without fee provided that copies are not made or distributed\nfor profit or commercial advantage and that copies bear this notice and the full citation\non the first page. Copyrights for components of this work owned by others than the\nauthor(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or\nrepublish, to post on servers or to redistribute to lists, requires prior specific permission\nand/or a fee. Request permissions from permissions@acm.org.\nICSEW\u201920, May 23\u201329, 2020, Seoul, Republic of Korea\n\u00a9 2020 Copyright held by the owner/author(s). Publication rights licensed to ACM.\nACM ISBN 978-1-4503-7963-2/20/05...$15.00\nhttps://doi.org/10.1145/3387940.3392183\nQuantum computation has, until today, been studied almost\nexclusively \u2018in the small.\u2019 A general understanding of quantum\ncomputation, or, quantum programming \u2018in the large\u2019 is yet to be\ndeveloped. Here we aim to set the foundations of a general frame-\nwork for studying, developing, and conveying quantum programs.\nWe aim to do so by developing a universal modeling language\nfor quantum software. Rather than develop such a language from\nscratch, we have decided to start from the well-known Unified\nModeling Language (UML)[3], and introduce a minimum set of\nextensions that allow it to effectively model quantum software.\nAssuming UML to be a shared common-language upon which\nwe can build, allows us to convey our original extensions much\nmore succinctly. Our extension set can, however, be applied with\nlittle or no modification to any other modeling language.\n2\nQ-UML\nBefore discussing in depth the extensions we are introducing, we\nmake a few fundamental observations on which we base the guiding\nprinciples for our extension set.\nOur first observation is about the nature of quantum computa-\ntion. The central difference between quantum and classical com-\nputation is in how it achieves its goals. Quantum computers have\naccess to quantum algorithms[7], and quantum data-structures[8],\nthat are unavailable to classical computers\u2014hence their perfor-\nmance advantage. Algorithms and data-structures are, however,\nimplementation details. Algorithms are an essential design choice\nwhile programming in the small. However, they are more often\nthan not completely ignored in large-scale software architectural\ndesign. For instance, UML diagrams seldom portray algorithms and\ndata-structures beyond a very high-level design perspective.\nIt would seem then that quantum computation introduces noth-\ning to computation that needs to be captured in a software design\ndiagram. This is not the case, and the reason for this is our second\nobservation. Quantum computation changes the very nature of in-\nformation itself. Quantum information is much richer than classical\ninformation. It is also much more challenging to store, transmit,\nand receive. If a module (class, object, etc.) needs to store, transmit\nor receive quantum information, then this is an important design\nconsideration\u2014which needs to be included in any effective software\ndesign.\nA third observation here is that the classical vs. quantum nature\nof the information used by a module is an important consideration\nboth when discussing its internal implementation and its interface.\nFurthermore, these two are separate and independent considera-\ntions.\nA classical module, implementing some classical behavior, would\nhave no need, or capability, to communicate quantum data. A quan-\ntum module may or may not have to; i.e. a module\u2019s quantum\nbehavior may be completely part of its internal implementation\n442\n2020 IEEE/ACM 42nd International Conference on Software Engineering Workshops (ICSEW)\nand not appear as part of its interface. For instance, take a module\nimplementing Shor\u2019s algorithm. Shor\u2019s algorithm uses quantum\neffects to efficiently factor a large integer into its prime factors.\nThe implementation of this module must necessarily be quantum.\nBoth the input (the large integer) and the output (the prime factors),\nconsist of classical information. And hence, the interface of such a\nmodule can be strictly classical.\nMore generally, we can conceive of quantum software modules\nthat have all classical inputs and outputs (like the above example),\nall quantum inputs and outputs, or a mix of both. A quantum soft-\nware design must address, for each individual interface element,\nwhether it is classical input/output, or if it is quantum. In short,\nwhether a module communicates classically or via quantum infor-\nmation, and whether its internal implementation requires quantum\nhardware are important considerations that need to be captured in\na design document.\nThe importance of such labelling should be clear. Quantum data\ncan only be stored and transmitted with special hardware designed\nto do so. More importantly, from an abstract, device-independent,\nstrictly software perspective: quantum and classical information\nare not interchangeable. Classical information is clone-able and\nadmits fanout operations, while quantum information (in general)\ndoes not. On the other hand, quantum information has a much\nlarger state-space.\nFinally, it is true that quantum information is strictly a super-set\nof classical information\u2014and hence a quantum module can commu-\nnicate any classical information it desires using a quantum interface\nelement. We argue, however, that using a quantum interface ele-\nment and messaging when classical would suffice is bad quantum\nsoftware design, for the reasons stated above.\nIn summary, the guiding principles behind any quantum software\nmodeling language must include the following:\n(1) (Quantum Classes): Whenever a software module makes\nuse of quantum information, either as part of its internal\nstate/implementation, or as part of its interface, this must be\nclearly established in a design document.\n(2) (Quantum Elements): Each module interface element (e.g.\npublic functions/methods, public variables) and internal state\nvariables can be either classical or quantum, and must be\nlabelled accordingly.\n(a) (Quantum Variables): Each variable should be labelled\nas classical or quantum. If the model represents data types,\nthe variables should also specify the classical (e.g. integer,\nstring) or quantum (e.g. qubit, qubit array, quantum graph\nstate) data type,\n(b) (Quantum Operations): For each operation, both the in-\nput and output should be clearly labelled as either classical\nor quantum. Whether the operation internally operates\nquantumly should also be labelled.\n(3) (Quantum Supremacy): A module that has at least one\nquantum element is to be considered a quantum software\nmodule, otherwise it is a classical module. Quantum and\nclassical modules should be clearly labelled as such.\n(4) (Quantum Aggregation): Any module that is composed of\none or more quantum modules will itself be considered a\nquantum module, and must be labelled as such.\n(5) (Quantum Communication): Quantum and classical mod-\nules can communicate with each other as long as their inter-\nfaces are compatible, i.e. the quantum module has classical\ninputs and/or outputs that can interface with the classical\nmodule.\nWe will argue in Sec. 2.3 how these extensions are not only nec-\nessary, but also sufficient in order to design and represent quantum\nsoftware. First, in the following two sections we put these principles\ninto practice as a set of concrete extensions to UML.\n2.1\nClass Diagram Extensions\nUML is a very graphical language, meant to convey a lot of meaning\nin a very small amount of space. As such, it makes sense to use a\ngraphical way to represent quantum software elements. We chose to\ndo this by use of bold text to denote quantum elements, and double\nlines to denote a quantum relationship or quantum communication.\nFigure 1: Q-UML class diagram of Shor\u2019s Algorithm. Quan-\ntum classes and interface elements are presented in bold\ntext, and quantum relationships use double-lines.\nFor attributes, the name will be bold if it is represented using\nquantum information. For methods, we use the following conven-\ntion. If any of the inputs are quantum, these are bold. If the output\nor datatype of the method is quantum, then the datatype should also\nbe bold. For backwards compatibility with regular UML, whenever\nthe input or output datatypes of a method are omitted, these will be\nassumed to be classical in nature. If a class/object has any quantum\nattributes or methods then it itself is considered quantum, and its\nname shall also be bold.\nRelationships between classes will use double-lines whenever the\nrelationship is quantum in nature. For inheritance, if the superclass\nis quantum then the subclass, and the inheritance relationship, will\nalso be quantum. (the converse is not necessarily true however).\nIn the case of aggregation and composition, if a class/object being\naggregated/composed is quantum, then the class/object to which\nit is aggregated/composed into, as well as that relationship will\n443\nalso be quantum. Association relationships do not have any special\nrules, beyond the need of a quantum class/object to have a classical\ninterface if it is to associate with classical classes/objects.\nFig. 1 showcases a Q-UML diagram that exemplifies the above\nrules.\n2.2\nSequence Diagram Extensions\nSequence diagrams in UML allow us to portray the dynamic rela-\ntionship between modules in a software program. As we did before\nfor static relationships, we extend the existing language in order to\nallow us to differentiate between classical and quantum messages.\nAs previously discussed, this is essential information. Quantum\ninformation behaves differently from classical information; it can\nstore/portray different data; it admits different operations; and, it\nrequires different hardware to store, send, and receive.\nFigure 2: Q-UML sequence diagram of Shor\u2019s Algorithm.\nQuantum classes are presented in bold text, and quantum\nmessages use double-lines.\nLike before, we make use of bold text to markup quantum mod-\nules, and double lines to portray quantum messages. Fig. 2 shows a\nQ-UML sequence diagram. Note how even though the relationship\nbetween Shorfactor and ShorOrder is quantum, the messaging\nbetween them is not. This illustrates an important point. A module\nis marked as quantum if it uses quantum resources in any form,\neither directly as part of its internal implementation or as part of\nan aggregated module. If a sub-module (in UML a composed class\nor object) is quantum, then the encompassing module must also be\nmarked as quantum. In a static (e.g. class) diagram, the quantum\ncomposition relationships inform us\u2014especially in the case of a\nseemingly classical module that does not in itself use quantum\nresources\u2014which composed modules are using quantum resources.\nAlso, note the communication between the objects ShorOrder\nand QFT_n. The module QFT_n operates on a quantum state.\nHence, both \u2018set\u2019 messages are quantum. Likewise, the return mes-\nsages \u03c1 and \u03c1\u2032 are quantum states. However, the request to perform\na quantum Fourier transform (QFT) or a QFT inverse operation\ncan (and therefore should) be communicated classically. This dia-\ngram showcases the level of granularity available to us using these\ndiagrams with the proposed extensions.\n2.3\nDiscussion\nWe have proposed a minimal series of extensions to existing soft-\nware modeling languages. We exemplify our additions in UML,\nbut these extensions are easily applicable to any other modeling\nlanguage, or be used as the basis for a new modeling language.\nWe\u2019ve argued the necessity of each of the extensions in previous\nsections. We can argue as well, that these extensions are not only\nnecessary, but also sufficient to fully model quantum software.\nTo make this argument, we appeal to the fact that all quantum\ncomputation is simulable using classical computation albeit with\nan efficiency loss. Other than their use of quantum information and\nalgorithms, quantum computers are indistinct from classical ones.\nHence, from a high-level design perspective, the only information\nelement that needs to be considered when developing quantum\nsoftware is when quantum (rather than classical) information is\nbeing used.\nThe one remaining information element we have not discussed\nis algorithm efficiency. If quantum computation is to be used, it\nwill most likely be due to the efficient algorithms at its disposal.\nThat said, algorithm efficiency is not a solely quantum consider-\nation. UML itself does not inherently have language elements for\nalgorithm efficiency (beyond user-defined notes). It does, however,\nhave several extensions used and proposed for this purpose(see\ne.g.[4]). Other modeling languages may also have definite algorithm\nefficiency elements. We argue that it is best to use existing language\nelements when they are available.\nACKNOWLEDGMENTS\nCP-D would like to acknowledge funding through the EPSRC Quan-\ntum Communications Hub (EP/T001011/1). The authors would also\nlike to thank Joanna I. Ziembicka for useful comments during the\npreparation on this manuscript.\nREFERENCES\n[1] Frank Arute et. al. 2019. Quantum supremacy using a programmable supercon-\nducting processor. Nature 574, 7779 (2019), 505\u2013510.\nhttps://doi.org/10.1038/\ns41586-019-1666-5\n[2] Charles H Bennett and Gilles Brassard. 2014. Quantum cryptography: public key\ndistribution and coin tossing. Theor. Comput. Sci. 560, 12 (2014), 7\u201311.\n[3] Grady Booch, James Rumbaugh, and Ivar Jacobson. 2005. Unified Modeling Lan-\nguage User Guide, The (2nd Edition) (Addison-Wesley Object Technology Series).\nAddison-Wesley Professional.\n[4] C. Canevet, S. Gilmore, J. Hillston, M. Prowse, and P. Stevens. 2003. Performance\nmodelling with the Unified Modelling Language and stochastic process algebras.\nIEE Proceedings - Computers and Digital Techniques 150, 2 (March 2003), 107\u2013120.\nhttps://doi.org/10.1049/ip-cdt:20030084\n[5] Lov K. Grover. 1996.\nA Fast Quantum Mechanical Algorithm for Database\nSearch. In Proceedings of the Twenty-eighth Annual ACM Symposium on The-\nory of Computing (STOC \u201996). ACM, New York, NY, USA, 212\u2013219.\nhttps:\n//doi.org/10.1145/237814.237866\n[6] Carlos A. P\u00e9rez-Delgado and Donny Cheung. 2007. Local unitary quantum cellular\nautomata. Phys. Rev. A 76 (Sep 2007), 032320. Issue 3. https://doi.org/10.1103/\nPhysRevA.76.032320\n[7] Peter W Shor. 1994. Algorithms for quantum computation: Discrete logarithms\nand factoring. In Proceedings 35th annual symposium on foundations of computer\nscience. Ieee, 124\u2013134.\n[8] Liming Zhao, Carlos A. P\u00e9rez-Delgado, and Joseph F. Fitzsimons. 2016. Fast graph\noperations in quantum computation. Phys. Rev. A 93 (Mar 2016), 032314. Issue 3.\nhttps://doi.org/10.1103/PhysRevA.93.032314\n444\n",
    "pdf_url": "/media/Article_05_WYdCkkr.pdf",
    "references": [
      "[1] Frank Arute et. al. 2019. Quantum supremacy using a programmable supercon-",
      "ducting processor. Nature 574, 7779 (2019), 505\u2013510.",
      "https://doi.org/10.1038/",
      "s41586-019-1666-5",
      "[2] Charles H Bennett and Gilles Brassard. 2014. Quantum cryptography: public key",
      "distribution and coin tossing. Theor. Comput. Sci. 560, 12 (2014), 7\u201311.",
      "[3] Grady Booch, James Rumbaugh, and Ivar Jacobson. 2005. Unified Modeling Lan-"
    ],
    "publication_date": "2023-11-07T00:00:00",
    "corrected": 0
  },
  {
    "titre": "A Prototype Implementation of an Orthographic Software Modeling Environment",
    "resume": "Orthographic Software Modeling (OSM) is a view-centricsoftware engineering approach that aims to leverage the or-thographic projection metaphor used in the visualization ofphysical objects to visualize software systems. Although thegeneral concept of OSM does not prescribe specic sets ofviews, a concrete OSM environment has to be specic aboutthe particular views to be used in a particular project. Atthe University of Mannheim we are developing a prototype OSM environment, nAOMi, that supports the views denedby the KobrA 2.0 method, a version of KobrA adapted forOSM. In this paper we provide an overview of the KobrA 2.0metamodel underpinning nAOMi and give a small exampleof its use to model a software system.",
    "auteurs": [
      "Colin Atkinson",
      "Dietmar Stoll",
      "Jacques Robin",
      "Recife",
      "Brasil",
      "D.2.2"
    ],
    "institutions": [
      "Dietmar Stoll University of Mannheim, TunjicUniversity of Mannheim,",
      "Colin Atkinson University of Mannheim,",
      "Orthographic Software Modeling (OSM) is a view-centricsoftware engineering approach that aims to leverage the or-thographic projection metaphor used in the visualization ofphysical objects to visualize software systems. Although thegeneral concept of OSM does not prescribe specic sets ofviews, a concrete OSM environment has to be specic aboutthe particular views to be used in a particular project. Atthe University of Mannheim we are developing a prototype OSM environment, nAOMi, that supports the views denedby the KobrA 2.0 method, a version of KobrA adapted forOSM. In this paper we provide an overview of the KobrA 2.0metamodel underpinning nAOMi and give a small exampleof its use to model a software system."
    ],
    "mots_cles": [
      " Orthographic Software Modeling",
      " View-based Modeling "
    ],
    "texte_integral": "A Prototype Implementation of an Orthographic Software\nModeling Environment\nColin Atkinson\nUniversity of Mannheim,\nGermany\natkinson@informatik.uni-\nmannheim.de\nDietmar Stoll\nUniversity of Mannheim,\nGermany\nstoll@informatik.uni-\nmannheim.de\nChristian Tunjic\nUniversity of Mannheim,\nGermany\ntunjic@informatik.uni-\nmannheim.de\nJacques Robin\nUniversidade Federal de\nPernambuco, Recife, Brasil\njr@cin.ufpe.br\nABSTRACT\nOrthographic Software Modeling (OSM) is a view-centric\nsoftware engineering approach that aims to leverage the or-\nthographic projection metaphor used in the visualization of\nphysical objects to visualize software systems. Although the\ngeneral concept of OSM does not prescribe speci\ufb01c sets of\nviews, a concrete OSM environment has to be speci\ufb01c about\nthe particular views to be used in a particular project. At\nthe University of Mannheim we are developing a prototype\nOSM environment, nAOMi, that supports the views de\ufb01ned\nby the KobrA 2.0 method, a version of KobrA adapted for\nOSM. In this paper we provide an overview of the KobrA 2.0\nmetamodel underpinning nAOMi and give a small example\nof its use to model a software system.\nCategories and Subject Descriptors\nD.1.7 [Programming Techniques]: Visual Programming;\nD.2.2 [Design Tools and Techniques]: Computer-aided\nsoftware engineering (CASE); D.2.6 [Software Engineer-\ning]: Programming Environments\u2014Graphical environments\nKeywords\nOrthographic Software Modeling, View-based Modeling\n1.\nINTRODUCTION\nOrthographic Software Modeling (OSM) is based on three\nfundamental hypotheses \u2014 (a) that it is feasible to inte-\ngrate the many di\ufb00erent kinds of artifacts used in contempo-\nrary software engineering methods within a single coherent\nmethodology in which they are treated as views, (b) that it\nPermission to make digital or hard copies of all or part of this work for\npersonal or classroom use is granted without fee provided that copies are\nnot made or distributed for pro\ufb01t or commercial advantage and that copies\nbear this notice and the full citation on the \ufb01rst page. To copy otherwise, to\nrepublish, to post on servers or to redistribute to lists, requires prior speci\ufb01c\npermission and/or a fee.\nVAO \u201913, July 2, 2013, Montpellier, France\nCopyright 2013 ACM 978-1-4503-2041-2 ...$15.00.\nis feasible to create an e\ufb03cient and scalable way of support-\ning these views by generating them dynamically, on-the-\ufb02y,\nfrom a Single Underlying Model (SUM) using model-based\ntransformations and (c) that it is feasible to provide an in-\ntuitive metaphor for navigating around these many views\nby adapting the orthographic projection technique under-\npinning the CAD tools used in other engineering disciplines.\nFigure 1: Orthographic Projection.\nAs shown in Figure 1, the main advantages of using the\nidea of orthographic projection to de\ufb01ne the views used\nto visualize and described a system are that they (a) can\nbe organized according to a simple and easy-to-understand\nmetaphor and (b) collectively represent all the properties of\na system with minimal overlap and redundancy. In practice\nthis translates into a set of \u201cdimensions\u201d, each containing\nwell de\ufb01ned choices (or so called \u201cdimension elements\u201d) that\ncan be used to select individuals views.\nAs shown in Figure 2, the main advantage of making the\nartifacts used to describe a software system views of a SUM\nis that the number of pairwise coherence relationships that\nhave to be maintained is reduced and new views can be in-\ntroduced by simply de\ufb01ning their relationship to the SUM.\nMoreover, the importance of this advantage grows quickly\nas the size of the system and the complexity of the deployed\ndevelopment methodology increase. Another important ad-\nvantage is that the dominance of one particular kind of view\nover the development process (e.g. code) at the expense of\nother kinds of views (e.g. graphical models) is reduced so\nthat any appropriate type of views can be used to enrich\nthe underlying description of the system, depending on the\nneeds and skills of the stakeholder involved. This makes it\npossible to subsume all view types under the same, overarch-\nSUM\nSUM / View Centric Environment\nArtifact / Tools Centric Environment\nFigure 2: Consistency Dependencies in Artifact-oriented versus View-oriented Environments.\ning development process and methodology (e.g. agile-driven,\nfocusing on small development cycles, or model-driven de-\nvelopment, based on transformations between abstraction\nlevels). Although the details of how the views are created\nfrom the SUM and how the SUM is updated from the views\nare not central to the approach, a natural implementation\nis to use the visualization and transformation technologies\no\ufb00ered by model driven software engineering (MDSE).\nTo explore the validity of these hypotheses at the Uni-\nversity of Mannheim we have been developing a prototype\nOSM modeling environment based on an enhanced version\nof the KobrA method for model-driven, component-oriented\ndevelopment, KobrA 2.0 [1]. This was chosen as a basis for\nthe prototype, known as the Open, Adaptable, Orthographic\nModeling Environment (nAOMi) [13] because its views were\ndesigned with the precise goals of being (a) genuine pro-\njections of a subject containing carefully selected subsets\nof information about that subject, (b) minimalistic in the\nsense that they should overlap to the smallest extent possible\nand contain the minimum necessary models elements, and\n(c) selectable via a set of independent \u201cdimensions\u201d which\nre\ufb02ect di\ufb00erent fundamental concerns of development (i.e.\nabstraction levels, composition or variants). In other words,\nKobrA already provided one of the \u201cmost orthogonal\u201d sets\nof views for visualizing software systems of any contempo-\nrary method. More details about the actual views and di-\nmensions de\ufb01ned in KobrA are presented in the following\nsections. More information on OSM can be found in [2] and\n[3].\nnAOMi is implemented as an Eclipse plugin using the\nEclipse Modeling Framework (EMF) as the underlying mod-\neling platform and UML 2.0 tools [4] to generate and edit\nviews.\nThe KobrA 2.0 metamodel on which the current\nversion of nAOMi is based is a specialization of the UML\nmetamodel composed of three separate packages \u2014 one for\nthe SUM, one for the views and one for the transformations\n(Figure 3). The UML was chosen as the base language be-\ncause of its maturity and widespread acceptance, making the\nenvironment usable to the largest possible body of develop-\ners. UML elements not needed in KobrA 2.0 are excluded\nusing OCL constraints while new elements or properties are\nKobrA2\nTransformation\nSUM\nViews\nFigure 3: KobrA 2.0 Top Level Packages.\nintroduced by specializing existing elements.\nThe unique contribution of this paper is to elaborate on\nthe structure of the KobrA 2.0 metamodel and how it is used\nto drive nAOMi. The three following sections each focus on\none of the three main components of the metamodel \u2014 the\nSUM, the views and the transformations . This is followed\nby a brief overview of the OSM navigation paradigm in Sec-\ntion 5 before a small example of the approach is presented in\nSection 6. Section 7 then concludes the paper with related\nand future work.\n2.\nSUM PACKAGE\nFigure 4 depicts the internal structure of the SUM pack-\nage which is based on the UML metamodel. There are three\nmain subpackages, two containing the structural and behav-\nioral constructs respectively, and one containing the con-\nstraints that ensure that the metaclasses are used according\nto the KobrA conventions and rules.\nThe Classes subpackage of the Structure package contains\nsome of the most fundamental elements of the KobrA meta-\nmodel, such as Class and ComponentClass.\nThe internal\nstructure of this package is illustrated in Figure 5. Com-\nponentClass represents objects with complex and reusable\nbehaviors, while Class captures simple \u201cdata type\u201d objects\nthat have only very simple or non-reusable behaviors. The\nmodeler has to decide whether it is necessary to model a\nspeci\ufb01c part of the system as a ComponentClass and include\nstate charts and activity diagrams, or whether it is su\ufb03cient\nto use a Class (which is limited to using OCL constraints).\nComponentClass inherits (indirectly via Class) from Com-\nmunications so it also has the isActive attribute. This makes\nKobrA2::SUM::Constraint::Behavioral\nKobrA2::SUM::Constraint::Structural\nKobrA2::SUM::Constraint\nKobrA2::SUM::Constraint::Common\nKobrA2::SUM::Behavior::ProtocolStateMachines\nKobrA2::SUM::Behavior::Common\nKobrA2::SUM::Behavior::Activities\nKobrA2::SUM::Behavior::Actions\nKobrA2::SUM::Behavior\nKobrA2::SUM::Structure::Classes\nKobrA2::SUM::Structure::Types\nKobrA2::SUM::Structure::Instances\nKobrA2::SUM::Structure::Elements\nKobrA2::SUM::Structure\nKobrA2::SUM::Constraint::OclExpressions\n<<merge>>\n<<merge>>\n<<merge>>\n<<merge>>\n<<merge>>\n<<merge>>\n<<merge>>\n<<merge>>\n<<merge>>\n<<merge>>\n<<merge>>\n<<merge>>\nFigure 4: KobrA 2.0 SUM Package.\nit possible to model whether its instances are active or pas-\nsive. Active objects, which can be used to model threads and\nprocesses ([8] p. 438), start to execute their behavior as soon\nas they are created and perform operations spontaneously.\nA ComponentClass may exhibit complex behavior. In Ko-\nbrA, this behavior may be speci\ufb01ed in the form of\nUML\nState Diagrams (de\ufb01ning acceptable operation invocation\nsequences), and in the form of Activities (de\ufb01ning algorithms\nof operations). UML Interaction elements (in sequence dia-\ngrams) can be derived from the activity elements and thus\nare not included in the SUM. As KobrA aims to facilitate\nautomatic checking of allowed sequences of operation calls,\nProtocol State Machines are supported instead of general\nstate machines. Since the latter include a large variety of\nelements not needed for specifying acceptable operation se-\nquences or automatic checking, OCL constraints are used to\nprohibit the use of unwanted features.\ncontext\nComponentClass\n-- only\nallow\nActivity\nelements\nor\nProtocolStateMachines\ninv: ownedBehavior ->forAll( oclIsKindOf( Actitivity) or\noclIsKindOf ( ProtocolStateMachine ))\nFor example, since KobrA has no concept of roles for com-\nponents, the use of role also needs to be prohibited. The part\nassociation refers to owned properties of components whose\nattribute isComposite is true. As KobrA uses associations\nlike nests and creates for components, part, required and\nprovided are not needed. Connectors (i.e. delegation and\nassembly) are not used in KobrA either so ownedConnector\nis excluded.\nClass\nKobrA2::SUM::Structure::Classes\nGeneralizationSet\nAssociationClass\nComponentClass\nProperty\nUsage\nAssociation\nOperation\nPackageable\nElement\nParameter\nAcquires\nCreates\nNests\nUML::Component::PackagingComponents::Component\nUML::CommonBehaviors::Communications::Class\n+ownedOperation\n*\n+class\n0..1\n+supplier\n1..*\n{subsets supplierDependency}\n+supplierUsage\n*\n+client\n1..*\n{subsets clientDependency}\n+clientUsage\n*\n+ownedAttribute\n*\n+class\n0..1\n+powertype\n0..1\n+powertypeExtent\n*\n+packagedElement\n*\n{subsets component}\n+componentClass\n0..1\n+/superClass\nFigure 5: KobrA 2.0 Classes Package.\ncontext\nComponentClass\ninv: role ->union(part)->union( ownedConnector )\n->union( collaborationUse )-> union( representation )\n->union( realization)->union(required)\n->union(provided)->isEmpty ()\n3.\nVIEWS PACKAGE\nThe structure of the Views package is illustrated in Figure\n6. Again, since most of the views de\ufb01ned in KobrA 2.0 are\nbased on UML diagrams, the view metamodels have similar\nelements to the SUM metamodel. The big di\ufb00erence to the\nSUM is that there are no restrictions on the use of the view\nmetamodel elements.\nFor instance, views for a particular\npurpose such as supporting model checkers can be supported\nby adding elements unrelated to the UML.\nThe substructure of the Views package re\ufb02ects the types\nand organization of the KobrA views according to the view\n\u201cdimensions\u201d supported in nAOMi (cf. example in Section\n6). At the top level, the Views package is thus decomposed\ninto the Speci\ufb01cation and Realization options of the encap-\nsulation dimension.\nThese, in turn are both decomposed\ninto the Structural, Behavioral and Operational options of\nthe Projection dimension.\nFinally, with the exception of\nthe behavioral option, these are also all subdivided into the\nService and Type options of the granularity dimension. This\ndimension, with its two options, is an addition to the original\nversion of KobrA.\nThe Service view shows the direct, publicly visible rela-\ntionships of the subject ComponentClass to other Compo-\nnentClasses, while the Type view shows the publicly visi-\nble relationships of the subject to simple Classes. As with\nthe SUM, constraints have been de\ufb01ned to control what can\ngo into each view and when they are well formed. For ev-\nery view, a constraint enumerates all allowed elements (not\nshown in this paper).\nIn the following, some of the other constraints for the\nService view are elaborated. Since this view is a black-box\nview, the internals of ComponentClasses (nestedClassi\ufb01er)\nare not shown.\ncontext\nComponentClass\n-- no nested\nclassifiers , no\nprotocol\ninv: nestedClassifier ->union(protocol)->isEmpty ()\nClasses are only allowed if they are generalizations of Com-\nponentClasses, (or any of its superclasses, since a Compo-\nnentClass may inherit from a class as shown in the con-\nstraints with context Class. The following invariants ensure\nthat only publicly visible attributes and operations are in\nthis view, for both classes and ComponentClasses (which\ninherit from Class).\nClass\nService\nType\nInstance\nService\nType\nStructural\nSpecification\nOperational\nService\nType\nProtocol\nBehavioral\nKobrA2::Views::Derived\nComponentClassDependencies\nOperationDependencies\nInstance\nService\nType\nClass\nService\nType\nStructural\nRealization\nOperational\nService\nType\nBehavioral\nAlgorithm\nViews\nConcreteSyntax\nSubject\n<<import>>\n<<merge>>\n<<merge>>\n<<import>>\n<<merge>>\n<<import>>\nFigure 6: KobrA 2.0 Views package nesting.\ncontext\nClass\n-- only\nallow\nclasses\nthat\nare\ndirect or\nindirect\ngeneralizations\nof\nComponentClasses\nin this\nview\ndef: ccGeneralization : generalization .specific ->\nexists( oclIsKindOf ( ComponentClass ))\ninv:\ngeneralization .specific ->select( oclIsTypeOf (\nClass))->exists(s|s. ccGeneralization )\nor\nccGeneralization\n-- only\npublic\nattributes\nin this\nview\ninv: ownedAttribute ->forAll(visibility =# public)\n-- only\npublic\nOperations\nare\nallowed\nin the\nspecification\ninv: ownedOperation ->forAll(visibility =# public)\nOnly operation signatures are shown in this view, so pre-,\npost- and bodyconditions, as well as activities are omitted,\nwhich is re\ufb02ected in the last constraint.\ncontext\nOperation\n-- only\nthe\nsignature\nof the\nOperation\nis shown , not\nits\nbehavior (role\nname \"method\" refers to the\nActivities\nof the\noperation), or\ndependencies\ninv: method ->union( precondition )->union(body)->union(\npostcondition )->isEmpty ()\n4.\nTRANSFORMATIONS PACKAGE\nThe package AllViews provides the foundation for speci-\nfying the transformations between the SUM and the views\nin both directions. Part of the package\u2019s contents are shown\nin Figure 7.\nThe Abstraction concept (which is in fact a\nKobrA2::Transformation::Common::AllViews\nAbstraction\nTransformationExpression\nViewElement\nSumElement\nView\nKobrA2::SUM::Structure::Elements::Element\nKobrA2::Views::ConcreteSyntax::Element\nKobrA2::SUM::Constraint::Behavioral::Exp\nressionInOcl\nKobrA2::Views::Subject::View\n{subsets mapping}\n0..1\n0..1\n{subsets clientDependency}\n+abstraction 1\n{subsets client}\n+ve 1\n1..*\n1\n{subsets supplier}\n+se 1\n{subsets supplierDependency}\n+abstraction 1..*\nFigure 7: Transformation abstractions.\ndependency reused from the UML but with additional con-\nstraints) plays the key role in relating elements from the\nSUM to elements of a view. Abstraction is actually mapped\nto ExpressionInOcl.\nWhen appearing in transformations,\nthe equals sign links elements in the SUM to the respective\nelements in the view, and vice versa. For instance, equal-\nity of the general meta-association of a Generalization in\na transformation invariant means that, when following gen-\neral, there must be an element in the SUM and in the view\nfor which similar transformation expressions are speci\ufb01ed.\nIn the case of KobrA 2.0, which has many projections that\njust select a subset of elements using one-to-one abstrac-\ntions, this allows concise declarative TransformationExpres-\nsions. Together with the view constraints, a CASE tool can\nbe implemented which uses a transformation language of the\nimplementor\u2019s choice, for instance the Atlas Transformation\nLanguage (ATL) [11] or QVT [9]. The role names se and ve\nare short for SumElement and ViewElement, respectively.\nThese roles subset the client and supplier roles from the\nUML.\nSUM elements are translated into UML elements with\nstereotypes, so that the views are easy to manage for de-\nvelopers familiar with the UML. The bidirectional mappings\nbetween stereotyped view elements and non-stereotyped SUM\nelements are expressed in the constraints of the Association-\nAbstraction, a subclass of the Abstraction from the AllViews\npackage. This is also an example of a transformation which\nis reused in other views.\ncontext\nAssociationAbstraction\ninv: ve.memberEnd = se.memberEnd\ninv: ve.ownedEnd = se.ownedEnd\nivn: ve. navigableOwnedEnd = se. navigableOwnedEnd\ninv: se. oclIsKindOf(Acquires) implies ve.\nhasStereotype (\u2019acquires \u2019)\ninv: ve. hasStereotype (\u2019acquires \u2019)\nimplies\nse.\noclIsKindOf (Aquires)\ninv: se. oclIsKindOf(Nests) implies\nve. hasStereotype (\u2019\nnests \u2019)\ninv: ve. hasStereotype (\u2019nests \u2019)\nimplies se. oclIsKindOf\n(Nests)\ninv: se. oclIsKindOf (Creates) implies\nve. hasStereotype\n(\u2019creates \u2019)\ninv: ve. hasStereotype (\u2019creates \u2019)\nimplies se.\noclIsKindOf (Creates)\nFigure 8 shows the main elements involved in the trans-\nformation of the black box structural view for Component-\nClasses. The \ufb01rst transformation constraint is on the view\nand declares the starting point for the transformation. It\nstates that the subject ComponentClass and its generaliza-\ntions (using a SUM utility function, superClosure) are in the\nview.\nThe following transformation rules illustrate how to create\nthe output (i.e. view) elements from the input (i.e. SUM) el-\nements, such as the publicly visible attributes and operations\nof the ComponentClass and the acquired ComponentClasses.\nThe \ufb01rst constraint for ComponentClassAbstraction states\nthat references to potential general classes (and Component-\nClasses) of ComponentClasses are mirrored in the view. In\naddition, ComponentClasses will be shown with the corre-\nsponding stereotypes.\nThe ComponentClass owns various\ntypes of associations, so in this view only the acquires asso-\nciations are selected (whose transformation rules are cov-\nered in the common transformation packages).For classes\nand ComponentClasses, only publicly visible attributes and\noperations appear in the view.\nClass invariants are also\ncopied. Classes that may appear in this view (e.g. as gener-\nalizations of ComponentClasses) may have a powertype (role\nname powertypeExtent) which will be displayed.\nThe last transformation statement copies the class refer-\nences of operations. As with all views, the transformation\nrules, the common transformation statements (which also\ncover operations) and the view constraints serve as a speci-\n\ufb01cation for the implementation of a view. Individual CASE\ntools can use di\ufb00erent implementation techniques as long as\nthey conform to the semantics of these rules and constraints.\nKobrA2::Transformation::Specification::Structural::Class::Service\nComponentClassAbstraction\nKobrA2::Transformation::Common::Feature::OperationAbstraction\nKobrA2::Transformation::Common::AllViews::Abstraction\nKobrA2::SUM::Structure::Classes::ComponentClass\nKobrA2::SUM::Structure::Classes::Operation\nKobrA2::SUM::Structure::Classes::Class\nOperationAbstraction\nClassAbstraction\n+se\n1\n1..*\n+se\n1\n1..*\n+se\n1\n1..*\nFigure 8: Transformation to the Speci\ufb01cation Structural Service View.\ncontext\nKobrA2 :: Views :: Subject ::\nSpecificationStructuralClassService\ninv: ownedMember ->select( oclIsKindOf(Class)) =\nsubject.superClosure ->union(subject.acquires.\nsuperClosure )\ncontext\nComponentClassAbstraction\ninv: ve.superClass = se. superClass\ninv: ve. hasStereotype (\u2019ComponentClass \u2019)\ninv: se.isSubject\nimplies (ve. hasStereotype (\u2019subject\n\u2019) and ve.ownedMember ->select( oclIsKindOf (\nAssociation )) = se.ownedMember ->select(\noclIsKindOf (Acquires)))\ncontext\nClassAbstraction\ninv: ve. ownedAttribute = se.ownedAttribute ->select(\nvisibility =# public)\ninv: ve. ownedOperation = se.ownedOperation ->select(\nvisibility =# public)\ninv: ve.\u2018inv \u2019 = se.\u2018inv \u2019\n-- copy\npowertypeExtent\nthat is only\nallowed\nfor\nclass\ninv: ve. powertypeExtent = se. powertypeExtent\ncontext\nOperationAbstraction\ninv: ve.class = se.class\nFor the black box type view, only publicly visible at-\ntributes and operations of classes (as opposed to Compo-\nnentClasses) used by the subject can be seen. This is spec-\ni\ufb01ed in the \ufb01rst rule which de\ufb01nes owned members of the\nview and thus serves as the starting point of the transfor-\nmation. cbbTypes is a utility function de\ufb01ned in the SUM\nwhich computes the black box types by selecting the types\nof the subject\u2019s public attributes and parameter types of its\npublic operations.\nClass invariants and potential powertypes and connections\nto the classes in this view are shown as well. There may\nalso be Enumerations, for which the EnumerationLiterals\nare displayed.\nThe transformation rules for this view are almost the same\nas the realization transformation constraints from the pack-\nage Transformation::Realization::Structural::Class::Type. The\ndi\ufb00erences are the select(visibility=#public) statements for\noperations and attributes.\ncontext\nKobrA2 :: Views :: Subject ::\nSpecificationStructuralClassType\ninv: ownedMember ->select( oclIsKindOf(Class) or\noclIsKindOf(\u2018Enumeration \u2019) or\noclIsKindOf (\nAssociation)) = subject ->union(subject.cbbTypes)\ncontext\nComponentClassAbstraction\ninv: se.isSubject\nimplies\nve. hasStereotype (\u2019subject \u2019)\ncontext\nClassAbstraction\ninv: not se.oclIsKindOf ( ComponentClass ) implies (\nve. ownedAttribute = se.ownedAttribute ->select(\nvisibility =# public)\nve. ownedOperation = se.ownedOperation ->select(\nvisibility =# public))\ninv: ve. powertypeExtent = se. powertypeExtent\ninv: ve. superClass = se.superClass\ninv: \u2018ve.inv \u2019 = \u2018se.inv \u2019\ncontext\nComponentClassAbstraction\ninv: se.isSubject\nimplies\nve. hasStereotype (\u2019subject \u2019)\ncontext\nEnumerationAbstraction\ninv: ve. ownedLiteral = se. ownedLiteral\ncontext\nEnumerationLiteralAbstraction\ninv: ve. specification = se. specification .\nstringInSignature\n5.\nNAVIGATION\nMost of today\u2019s tools use some combination of trees to\norganize the content of models as well as the views used to\nvisualize a software system or component. In an any envi-\nronment incorporating a number of di\ufb00erent tools there is\ninvariably a large number of di\ufb00erent trees storing a het-\nerogeneous mix of artifacts including model elements (e.g.\nclasses, instances, associations), diagrams (e.g.\nclass dia-\ngrams, state diagrams) and other artifact types (source code,\nXML \ufb01les, con\ufb01guration \ufb01les ). To work with all the views in\na traditional development environment, therefore, engineers\ntypically have to learn about the organization structures of\nall the incorporated tools.\nIn contrast to conventional paradigms for organizing and\nnavigating the many views used to visualize a system, OSM\nemploys the metaphor of a multi-dimensional cube. More\nspeci\ufb01cally, as illustrated in Figure 9, OSM regards dimen-\nsion of the underlying methodology as representing a di\ufb00er-\nent dimension of the cube, and each independently variable\naspect of that dimension is a selectable dimension element.\nSelecting a view thus simply corresponds to selecting a single\ncell within the cube. In general, three types of dimensions\nare supported: static dimensions in which the number of\nFigure 9: Dimension-based navigation.\nselectable elements (i.e. coordinates) is \ufb01xed, dynamic di-\nmensions in which the number of elements is dynamic (i.e.\nderived from the SUM), and mixed dimensions which have\nboth static and dynamic elements.\nTo support the OSM dimension based navigation metaphor\nfor KobrA, we de\ufb01ned the seven dimensions indicated on the\nleft hand side of Figure 10 which is a sceenshot of nAOMI.\nThe Abstraction dimension (not expanded here), which has\nthree static dimension elements, PIM (platform independent\nmodel), PSM (platform speci\ufb01c model) and Code, captures\nthe model-driven development concern of KobrA. The ver-\nsion dimension captures the state of the modeled system at\nspeci\ufb01c points in time. The Component dimension, which\nhas dynamic dimension elements de\ufb01ned by instances of the\nclass ComponentClass in the SUM, captures the component-\nbased development concern of KobrA.\nThe Encapsulation dimension, which has two \ufb01xed ele-\nments, supports the distinction between Speci\ufb01cation (black\nbox) and Realization (white box) views of components, while\nthe Projection dimension with the \ufb01xed elements Structural,\nOperational and Behavioral covers the di\ufb00erent information\ntypes. The Granularity dimension provides a \ufb01ner grained\ndistinction between views describing the types used by com-\nponents (Type granularity) and views describing the required\nand provided interfaces (Service granularity). The Opera-\ntion dimension allows a selection of individual operations.\nIn the ideal case, when all views are truly orthogonal, the\nchoices that can be made in each dimensions are completely\nindependent.\nHowever, this is very di\ufb03cult to achieve in\nsoftware engineering. The approach still works if the views\nare not completely orthogonal, but dependencies then occur\nbetween di\ufb00erent choices in di\ufb00erent dimensions, so that the\ndecisions made in one dimensions may a\ufb00ect choices possi-\nble in another dimension. This is best handled by giving\ndimensions a precedence ranking determined by the order\nin which they appear (the top being the highest). When an\nelement in a dimension is selected, the tool automatically\nmakes default selections for dimensions of lower precedence\n(i.e.\ndimensions lower down) and disables selections that\nwould navigate to cells (i.e. views) which are not (yet) de-\n\ufb01ned by the method at hand.\n6.\nSHOPPING CART EXAMPLE\nTo show how a software system can be speci\ufb01ed using\nnAOMi, this section presents a case study based on a shop-\nping cart system. A ShoppingCart component collects and\nFigure 10: Speci\ufb01cation Structural View.\nmanages the products selected by users and supports pay-\nment via a credit card.\nFigure 10 illustrates a structural\nview of the component.\nIn the dimension navigator on the left hand side, PIM\nwas chosen for the \u201cAbstraction Level\u201d (not expanded in the\nscreenshot). The second dimension is the state of the soft-\nware system at a certain point in time. The picture shows\nthat the latest available version was chosen. As with every\nchoice in a dimension, it may in\ufb02uence the options in lower\nranked dimensions. The component under consideration is\nthe ShoppingCart, for which a black box view is selected\nin the next dimension. After the user selects the structural\nprojection option and the service level granularity, the tool\nautomatically chooses the option for all operations in the\nlast dimension, as there is no editor registered for the other\noptions.\nThe component under development is presented with the\nstereotype subject and its relationship to other components\nand classes is shown in the view, which corresponds to a cell\nof the multi-dimensional navigation cube, and is generated\non-the-\ufb02y from the SUM when it is selected. The classes\nProduct and CreditCard can be used as data types in the\noperations of the component.\nFigure 11 illustrates the operational view in which an\noperation can be formalized using pre- and postconditions.\nThe precondition corresponds to the assumes clause in and\nthe postcondition corresponds to the result clause. As in the\nUML, the precondition of an operation must be true when\nthe operation is invoked and the postcondition must be true\nwhen the operation is \ufb01nished. The operation addProduct\nin Figure 11 must be in state CollectingProducts or Empty\nwhen invoked. This is also visible in the behavioral view,\nFigure 11: addProduct() Operation Speci\ufb01cation.\nsince there are only two transitions with the operation ad-\ndProduct. Both leads to the state CollectingProducts which\nis also a postcondition of the operation. The second post-\ncondition is that the cost attribute of the component must\nbe increased by the price of the added product. The pre- and\npostcondition can be expressed using the OCL. The proper-\nties of the component, states and operation parameters can\nbe used to formalise the constraints like as in this example.\nFigure 12 shows the publicly visible behaviour of the Shop-\npingCart component with states and transitions. The condi-\ntional transitions map to operations of the component. Like\nevery view, this view is also synchronized with the SUM so\nthat it is guaranteed that its operations, states and proper-\nties are consistent with those in the structural view.\nFigure 12: Speci\ufb01cation Behavioral Model.\nAlthough the operational view seems to be similar to the\nbehavioral view because of the overlapping information within\nthem, there are signi\ufb01cant di\ufb00erences. The focus of the op-\nerational view is on a precise formal de\ufb01nition of an opera-\ntion of a component. The operations can be enriched by pre-\nand postconditions which can be de\ufb01ned using complex OCL\nstatements, that formalize the complete behavior of an op-\neration. The additional information in the OCL statements\ncan be used for code generation and documentation.\n7.\nCONCLUSION\nAt the beginning of the paper we identi\ufb01ed three funda-\nmental hypothesis upon which the notion of OSM is based\n\u2014 (a) that it is feasible to integrate the many di\ufb00erent kinds\nof artifacts used in contemporary software engineering meth-\nods within a single coherent methodology in which they are\ntreated as views, (b) that it is feasible to create an e\ufb03-\ncient and scalable way of supporting these views by gener-\nating them dynamically, on-the-\ufb02y, from a Single Underly-\ning Model (SUM) using model-based transformations and\n(c) that it is feasible to provide an intuitive metaphor for\nnavigating around these many views by adapting the ortho-\ngraphic projection technique underpinning the CAD tools\nused in other engineering disciplines.\nThe prototype tool, nAOMi, described in this paper rep-\nresents the \ufb01rst step towards demonstrating the validity of\nthese hypotheses and showing that OSM is a viable approach\nto software engineering. Of the three hypotheses, (a) and (c)\nare most convincingly demonstrated by the prototype, since\nit shows that it is indeed possible to support all the views\nof the KobrA method within a single navigation metaphor.\nThe prototype tool does not demonstrate the validity of hy-\npothesis (b) to the same extent as the others due to its\nsmall size. Although it demonstrates the feasibility of gen-\nerating views from the SUM and vice-versa, the question of\nwhether such an approach scales up to large environments\nis still open.\nAlthough nOAMi is the only tool developed with the spe-\nci\ufb01c aim of supporting KobrA-based OSM, several other\ntools and methods have similar properties or aims.\nFor\nexample, Glinz et al.\n[10] describe a tool with a \ufb01sheye\nzooming algorithm which lets the user view a model with\nvarying amounts of detail depending on the context. It has\nto be investigated whether it is possible to combine the \ufb01sh-\neye zooming concept with the dimension-based navigation\nparadigm. While the KobrA 2.0 implementation of nAOMi\nheavily uses UML diagrams for developers, Glinz et al. use\ncustom diagram types, e.g.\nfor structural and behavioral\nviews.\nAn approach which also emphasizes the description of for-\nmal consistency rules (correspondences) between views is\nRM-ODP [5][6].\nHowever, this approach does not explic-\nitly mention the notion of a SUM and thus implies that\nconsistency rules should be de\ufb01ned in a pairwise fashion be-\ntween individual pairs of views. ArchiMate [7], which com-\nplements TOGAF [12], is an enterprise architecture mod-\neling language which o\ufb00ers two orthogonal \u201ddimensions\u201d for\nmodeling, (business, architecture, and technology) layers and\n(informational, behavioral and structural) aspects and also\nsuggests two more dimensions, purpose and abstraction level.\nHowever, as many of these views span multiple choices of a\nsingle\u201cdimension\u201d, the intuitive dimension-based navigation\nmetaphor of OSM can not be easily applied. There are also\nmore general approaches for view-based modeling but they\nare less speci\ufb01c in terms of consistency rules between views\nand provide little guidance on how to manage and navigate\nviews, for example the Zachman Framework [14].\nRegarding the practical use of OSM environments in the\nfuture, the biggest challenge is developing appropriate SUM\nmetamodels which can accommodate all the types of views\nand services that software engineers are accustomed to to-\nday. For this \ufb01rst prototypical SUM-based environment sup-\nporting the OSM approach we had a method at our disposal\n(KobrA) that already de\ufb01ned a full set of orthogonal UML-\nbased views. This allowed us to model the required SUM\nand view metamodels by simply adapting the UML meta-\nmodels, removing and adding model elements as needed.\nIn doing so we were able to manually ensure that the meta-\nmodels ful\ufb01lled the two core requirements of SUM-based en-\nvironments \u2014 (1) being minimalistic and (2) redundancy\nfree. If SUM-based software engineering environments are\nto take o\ufb00, and to be introduced into existing, heteroge-\nneous environments, more sophisticated ways of integrating\nexisting metamodels into a single uni\ufb01ed metamodel will be\nrequired.\n8.\nREFERENCES\n[1] C. Atkinson, J. Bayer, C. Bunse, E. Kamsties,\nO. Laitenberger, R. Laqua, D. Muthig, B. Paech,\nJ. W\u00a8ust, and J. Zettel. Component-Based Product Line\nEngineering with UML. Addison Wesley, Reading,\nMassachusetts, USA, 1st edition, November 2001.\n[2] C. Atkinson, D. Stoll, and P. Bostan. Orthographic\nSoftware Modeling: A Practical Approach to\nView-Based Development. In Evaluation of Novel\nApproaches to Software Engineering, volume 69 of\nCommunications in Computer and Information\nScience, pages 206\u2013219. Springer Berlin Heidelberg,\n2010.\n[3] C. Atkinson, D. Stoll, and C. Tunjic. Orthographic\nService Modeling. In Proceedings of 15th IEEE EDOC\nConference Workshops (EDOCW), Helsinki, Finland,\n2011.\n[4] Eclipse Foundation. UML2Tools.\nhttp://wiki.eclipse.org/MDT-UML2Tools, 2013.\n[5] ISO/IEC and ITU-T. The Reference Model of Open\nDistributed Processing. RM-ODP, ITU-T Rec.\nX.901-X.904 / ISO/IEC 10746.\nhttp://standards.iso.org/\nittf/PubliclyAvailableStandards/index.html,\n1998.\n[6] J. I. J. Jose Raul Romero and A. Vallecillo. Realizing\nCorrespondences in MultiViewpoint Speci\ufb01cations. In\nProceedings of the Thirteenth IEEE International\nEDOC Conference, 1 - 4 September 2009, Auckland,\nNew Zealand, September 2009.\n[7] M. Lankhorst. Enterprise Architecture at Work.\nSpringer Berlin Heidelberg, 2009.\n[8] Object Management Group (OMG). OMG Uni\ufb01ed\nModeling Language (OMG UML), Superstructure,\nV2.1.2.\nhttp://www.omg.org/cgi-bin/doc?formal/07-11-02,\nNovember 2007.\n[9] Object Management Group (OMG). Meta Object\nFacility (MOF) 2.0 Query/View/Transformation, v1.0.\nhttp://www.omg.org/spec/QVT/1.0/PDF/, April 2008.\n[10] C. Seybold, M. Glinz, S. Meier, and N. Merlo-Schett.\nAn e\ufb00ective layout adaptation technique for a\ngraphical modeling tool. In Proceedings of the 2003\nInternational Conference on Software Engineering,\nPortland, 2003.\n[11] The Atlas Transformation Language (ATL). O\ufb03cial\nWebsite. http://www.eclipse.org/atl/, 2013.\n[12] The Open Group. TOGAF Version 9 - The Open\nGroup Architecture Framework.\nhttp://www.opengroup.org/architecture/\ntogaf9-doc/arch/index.html, Feb 2009.\n[13] University of Mannheim - Software Engineering\nGroup. nAOMi - opeN, Adaptable, Orthographic\nModeling EnvIronment.\nhttp://eclipselabs.org/p/naomi.\n[14] J. A. Zachman. The Zachman Framework: A Primer\nfor Enterprise Engineering and Manufacturing.\nhttp://www.zachmaninternational.com, 2009.\n",
    "pdf_url": "/media/Article_06_DaXD1Sf.pdf",
    "references": [
      "[1] C. Atkinson, J. Bayer, C. Bunse, E. Kamsties,",
      "O. Laitenberger, R. Laqua, D. Muthig, B. Paech,",
      "J. W\u00a8ust, and J. Zettel. Component-Based Product Line",
      "Engineering with UML. Addison Wesley, Reading,",
      "Massachusetts, USA, 1st edition, November 2001.",
      "[2] C. Atkinson, D. Stoll, and P. Bostan. Orthographic",
      "Software Modeling: A Practical Approach to",
      "View-Based Development. In Evaluation of Novel",
      "Approaches to Software Engineering, volume 69 of",
      "Communications in Computer and Information",
      "Science, pages 206\u2013219. Springer Berlin Heidelberg,",
      "2010.",
      "[3] C. Atkinson, D. Stoll, and C. Tunjic. Orthographic"
    ],
    "publication_date": "2023-11-07T00:00:00",
    "corrected": 0
  },
  {
    "titre": "Framing the News:From Human Perception to Large Language Model Inferences",
    "resume": "Identifying the frames of news is important to understand the arti-cles vision, intention, message to be conveyed, and which aspectsof the news are emphasized. Framing is a widely studied conceptin journalism, and has emerged as a new topic in computing, withthe potential to automate processes and facilitate the work of jour-nalism professionals. In this paper, we study this issue with articlesrelated to the Covid-19 anti-vaccine movement. First, to under-stand the perspectives used to treat this theme, we developed aprotocol for human labeling of frames for 1786 headlines of No-Vax movement articles of European newspapers from 5 countries.Headlines are key units in the written press, and worth of analysisas many people only read headlines (or use them to guide theirdecision for further reading.) Second, considering advances in Nat-ural Language Processing (NLP) with large language models, weinvestigated two approaches for frame inference of news headlines:first with a GPT-3.5 fine-tuning approach, and second with GPT-3.5 prompt-engineering. Our work contributes to the study andanalysis of the performance that these models have to facilitatejournalistic tasks like classification of frames, while understandingwhether the models are able to replicate human perception in theidentification of these frames.",
    "auteurs": [
      "David Alonso",
      "del Barrio",
      "David Alonso",
      "del Barrio",
      "Daniel Gatica-Perez"
    ],
    "institutions": [
      "Daniel  Idiap Research Institute and EPFLSwitzerland",
      "David Alonso del  Idiap Research InstituteSwitzerland"
    ],
    "mots_cles": [
      " Covid-19 no-vax",
      " news framing",
      " GPT-3",
      " prompt-engineering",
      " trans- formers",
      " large language models "
    ],
    "texte_integral": "Framing the News:\nFrom Human Perception to Large Language Model Inferences\nDavid Alonso del Barrio\nddbarrio@idiap.ch\nIdiap Research Institute\nSwitzerland\nDaniel Gatica-Perez\ngatica@idiap.ch\nIdiap Research Institute and EPFL\nSwitzerland\nABSTRACT\nIdentifying the frames of news is important to understand the arti-\ncles\u2019 vision, intention, message to be conveyed, and which aspects\nof the news are emphasized. Framing is a widely studied concept\nin journalism, and has emerged as a new topic in computing, with\nthe potential to automate processes and facilitate the work of jour-\nnalism professionals. In this paper, we study this issue with articles\nrelated to the Covid-19 anti-vaccine movement. First, to under-\nstand the perspectives used to treat this theme, we developed a\nprotocol for human labeling of frames for 1786 headlines of No-\nVax movement articles of European newspapers from 5 countries.\nHeadlines are key units in the written press, and worth of analysis\nas many people only read headlines (or use them to guide their\ndecision for further reading.) Second, considering advances in Nat-\nural Language Processing (NLP) with large language models, we\ninvestigated two approaches for frame inference of news headlines:\nfirst with a GPT-3.5 fine-tuning approach, and second with GPT-\n3.5 prompt-engineering. Our work contributes to the study and\nanalysis of the performance that these models have to facilitate\njournalistic tasks like classification of frames, while understanding\nwhether the models are able to replicate human perception in the\nidentification of these frames.\nCCS CONCEPTS\n\u2022 Computing methodologies \u2192 Information extraction; \u2022\nHuman-centered computing \u2192 Text input.\nKEYWORDS\nCovid-19 no-vax, news framing, GPT-3, prompt-engineering, trans-\nformers, large language models\nACM Reference Format:\nDavid Alonso del Barrio and Daniel Gatica-Perez. 2023. Framing the News:\nFrom Human Perception to Large Language Model Inferences . In Inter-\nnational Conference on Multimedia Retrieval (ICMR \u201923), June 12\u201315, 2023,\nThessaloniki, Greece. ACM, New York, NY, USA, 9 pages. https://doi.org/10.\n1145/3591106.3592278\nPermission to make digital or hard copies of all or part of this work for personal or\nclassroom use is granted without fee provided that copies are not made or distributed\nfor profit or commercial advantage and that copies bear this notice and the full citation\non the first page. Copyrights for components of this work owned by others than the\nauthor(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or\nrepublish, to post on servers or to redistribute to lists, requires prior specific permission\nand/or a fee. Request permissions from permissions@acm.org.\nICMR \u201923, June 12\u201315, 2023, Thessaloniki, Greece\n\u00a9 2023 Copyright held by the owner/author(s). Publication rights licensed to ACM.\nACM ISBN 979-8-4007-0178-8/23/06...$15.00\nhttps://doi.org/10.1145/3591106.3592278\n1\nINTRODUCTION\nIn recent years, there has been a proliferation in the use of concepts\nsuch as data journalism, computational journalism, and computer-\nassisted reporting [15] [29], which all share the vision of bridging\njournalism and technology. The progress made in NLP has been\ngradually integrated into the journalistic field [5][8][54]. More\nspecifically, machine learning models based on transformers have\nbeen integrated in the media sector in different tasks [41] such as\nthe creation of headlines with generative languages models [17],\nsummarization of news articles [28][27], false news detection [49],\nand topic modeling and sentiment analysis [25]. The development of\nlarge language models such as GPT-3 [9], BLOOM [51] or ChatGPT\nshow a clear trend towards human-machine interaction becoming\neasier and more intuitive, opening up a wide range of research\npossibilities. At the same time, the use of these models is also\nassociated with a lack of transparency regarding how these models\nwork, but efforts are being made to bring some transparency to\nthese models, and to analyze use cases where they can be useful and\nwhere they cannot [35]. Based on the premises that these models\nopen up a wide range of research directions [7], and that at the same\ntime (and needless to say) they are not the solution to all problems,\nwe are interested in identifying use cases and tasks where they\ncan be potentially useful, while acknowledging and systematically\ndocumenting their limitations [56]. More specifically, the aim of\nthis work is to analyze the performance of GPT-3.5 for a specific\nuse case, namely the analysis of frames in news, from an empirical\npoint of view, with the objective of shedding light on a potential\nuse of generative models in journalistic tasks.\nFrame analysis is a concept from journalism, which consists of\nstudying the way in which news stories are presented on an issue,\nand what aspects are emphasized: Is a merely informative vision\ngiven in an article? Or is it intended to leave a moral lesson? Is\na news article being presented from an economic point of view?\nOr from a more human, emotional angle? The examples above\ncorrespond to different frames with which an article can be written.\nThe concept of news framing has been studied in computing as\na step beyond topic modeling and sentiment analysis, and for this\npurpose, in recent years, pre-trained language models have been\nused for fine-tuning the classification process of these frames [60]\n[10], but the emergence of generative models opens the possibility\nof doing prompt-engineering of these classification tasks, instead\nof the fine-tuning approach investigated so far.\nOur work aims to address this research gap by posing the fol-\nlowing research questions:\nRQ1: What are the main frames in the news headlines about\nthe anti-vaccine movement, as reported in newspapers across 5\nEuropean countries?\n627\nICMR \u201923, June 12\u201315, 2023, Thessaloniki, Greece\nDavid Alonso del Barrio and Daniel Gatica-Perez\nRQ2: Can prompt engineering be used for classification of head-\nlines according to frames?\nBy addressing the above research questions, our work makes the\nfollowing contributions:\nContribution 1. We implemented a process to do human an-\nnotation of the main frame of 1786 headlines of articles about the\nCovid-19 no-vax movement, as reported in 19 newspapers from 5\nEuropean countries (France, Italy, Spain, Switzerland and United\nKingdom.) At the headline level, we found that the predominant\nframe was human interest, where this frame corresponds to a per-\nsonification of an event, either through a statement by a person,\nor the explanation of a specific event that happened to a person.\nFurthermore, we found a large number of headlines annotated as\ncontaining no frame, as they simply present information without\nentering into evaluations. We also found that for all the countries\ninvolved, the distribution of frame types was very similar, i.e., hu-\nman interest and no frame are the two predominant frames. Finally,\nthe generated annotations allowed to subsequently study the per-\nformance of a large language model.\nContribution 2. We studied the performance of GPT-3.5 on\nthe task of frame classification of headlines. In addition to using\nthe fine-tuning approach from previous literature, we propose an\nalternative approach for frame classification that requires no labeled\ndata for training, namely prompt-engineering using GPT-3.5. The\nresults show that fine-tuning with GPT-3.5 produces 72% accuracy\n(slightly higher than other smaller models), and that the prompt-\nengineering approach results in lower performance (49% accuracy.)\nOur analysis also shows that the subjectivity of the human labeling\ntask has an effect on the obtained accufracy.\nThe paper is organized as follows. In Section 2, we discuss related\nwork. In Section 3, we describe the news dataset. In Section 4, we\ndescribe the methodology for both human labeling and machine\nclassification of news frames. We present and discuss results for\nRQ1 and RQ2 in Sections 5 and 6, respectively. Finally, we provide\nconclusions in Section 7.\n2\nRELATED WORK\nFraming has been a concept widely studied in journalism, with a\ndefinition that is rooted in the study of this domain [23]: \u201cTo frame\nis to select some aspects of a perceived reality and make them more\nsalient in a communicating text, in such a way as to promote a par-\nticular problem definition, causal interpretation, moral evaluation,\nand/or treatment recommendation for the item described.\u201d\nFor frame recognition, there are two main approaches: the induc-\ntive approach [16], where one can extract the frames after reading\nthe article, and the deductive approach [38], where a predefined\nlist of frames exists and the goal is to interpret if any of them ap-\npears in the article. In the deductive case, there are generic frames\nand subject-specific frames, and the way to detect them typically\ninvolves reading and identifying one frame at a time, or through\nanswers to yes/no questions that represent the frames. Semetko et\nal. [52] used 5 types of generic frames (attribution of responsibility,\nhuman interest, conflict, morality, and economic consequences)\nbased on previous literature, and they defined a list of 20 yes/no\nquestions to detect frames in articles. For instance, the questions\nabout morality are the following: \"Does the story contain any moral\nmessage? Does the story make reference to morality, God, and other\nreligious tenets? Does the story offer specific social prescriptions\nabout how to behave?\", and so on for each of the frame types. This\ncategorization of frames has been used in various topics such as\nclimate change [18] [19], vaccine hesitance [13], or immigration\n[34].\nWe now compare the two approaches on a common topic, such\nas Covid-19. Ebrahim et al. [21] followed an inductive approach\nin which the frames were not predefined but emerged from the\ntext (e.g., deadly spread, stay home, what if, the cost of Covid-19)\nusing headlines as the unit of analysis. In contrast, the deductive\napproach has studied very different labels. El-Behary et al. [22]\nfollowed the method of yes/no questions, but in addition to the\n5 generic frames presented before, they also used blame frame\nand fear frame. Adiprasetio et al. [1] and Rodelo [50] used the 5\ngeneric frames with yes/no questions, while Catal\u00e1n-Matamoros et\nal. [14] used the 5 frames and read the headline and subheadline\nto decide the main frame. Table 1 summarizes some of the the\nexisting approaches. This previous work showed how frame labels\ncan be different, and also that frame analysis has been done at both\nheadline and article levels. These two approaches (inductive and\ndeductive) that originated in journalism have since been replicated\nin the computing literature.\nWe decided to follow the deductive approach because a prede-\nfined list of frames allows to compare among topics, countries,\nprevious literature, and also because they represent a fixed list of\nlabels for machine classification models. Furthermore, the induc-\ntive approach tends to be more specific to a topic, and from the\ncomputing viewpoint, past work has tried to justify topic modeling\nas a technique to extract frames from articles.\nYl\u00e4-Antitila et al. [60] proposed topic modeling as a frame ex-\ntraction technique. They argued that topics can be interpreted as\nframes if three requirements are met: frames are operationalized as\nconnections between concepts; subject-specific data is selected; and\ntopics are adequately validated as frames, for which they suggested\na practical procedure. This approach was based on the choice of a\nspecific topic (e.g., climate change) and the use of Latent Dirichlet\nAllocation (LDA) as a technique to extract a number of subtopics.\nIn a second phase, a qualitative study of the top 10 words of each\nsubtopic was performed, and the different subtopics were elimi-\nnated or grouped, reducing the number and establishing a tentative\ndescription. In a third phase, the top 10 articles belonging to that\nframe/topic were taken, and if the description of the topic fitted\nat least 8 of the 10 articles, that topic/frame remained. The frames\nfound in this article were: green growth, emission cuts, negotiations\nand treaties, environmental risk, cost of carbon emissions, Chinese\nemissions, economics of energy production, climate change, en-\nvironmental activism, North-South burden sharing, state leaders\nnegotiating, and citizen participation.\nFrom Entman\u2019s definition of frame [23], it seems that the deduc-\ntive approach is more refined than the inductive approach (which\nseems to resemble the detection of sub-themes.) For example, with\nregard to climate change, there are stories on how people have been\naffected by climate change from an emotional point of view, thus\npersonalizing the problem. In this case, we could categorize the\ncorresponding frame as human interest, as the writer of the article\nis selecting \"some aspects of a perceived reality and make them\n628\nFraming the News:\nFrom Human Perception to Large Language Model Inferences\nICMR \u201923, June 12\u201315, 2023, Thessaloniki, Greece\nmore salient\". The language subtleties with which news articles are\npresented cannot be captured with basic topic modeling.\nIsoaho et al.[30] held the position that while the benefits of\nscale and scope in topic modeling were clear, there were also a\nnumber of problems, namely that topic outputs do not correspond\nto the methodological definition of frames, and thus topic modeling\nremained an incomplete method for frame analysis. Topic modeling,\nin the practice of journalistic research, is a useful technique to deal\nwith the large datasets that are available, yet is often not enough to\ndo more thorough analyses [31]. In our work, we clearly notice that\nframe analysis is not topic modeling. For example, two documents\ncould be about the same topic, say Covid-19 vaccination, but one\narticle could emphasize the number of deaths after vaccination,\nwhile the other emphasized the role of the vaccine as a solution to\nthe epidemic.\nWe also consider that the larger the number of possible frame\ntypes, the more likely it is to end up doing topic modeling instead of\nframe analysis. Using a deductive approach, Dallas et al. [12] created\na dataset with articles about polemic topics such as immigration,\nsame sex marriage, or smoking, and they defined 15 types of frames:\n\"economic, capacity and resources, morality, fairness and equality,\nlegality, constitutionality and jurisprudence, policy prescription and\nevaluation, crime and punishment, security and defense, health and\nsafety, quality of life, cultural identity, political, external regulation\nand reputation, other\". In this case, they authors did not use a list\nof questions. Instead, for each article, annotators were asked to\nidentify any of the 15 framing dimensions present in the article\nand to label text blurbs that cued them (based on the definitions of\neach of the frame dimensions) and decide the main frame of each\narticle. In our case, we followed the idea of detecting the main frame\nby reading the text instead of answering questions, but instead of\nusing the 15 frames proposed in [12] , we used the 5 generic frames\nproposed in [52].\nA final decision in our work was the type of text to analyze,\nwhether headlines or whole article. For this decision, the chosen\nclassification method was also going to be important. For example,\nKhanehzar et al. [33] used traditional approaches such as SVMs as\nbaseline, and demonstrated the improvement in frame classifica-\ntion with the use of pre-trained languages models such as BERT,\nRoBERTa and XLNet, following a fine-tuning approach, setting\nas input text a maximum of 256 tokens (although the maximum\nnumber of input tokens in these models is 512 tokens.) Liu et al.\n[37] classified news headlines about the gun problem in the United\nStates, arguing for the choice of headlines as a unit of analysis\nbased on previous journalism literature [6], [44], that advocated\nfor the importance and influence of headlines on readers and the\nsubsequent perception of articles. From a computational viewpoint,\nusing headlines is also an advantage, since you avoid the 512 token\nlimitation in BERT-based models. Therefore, we decided to work\nwith headlines about a controversial issue, namely the Covid-19\nno-vax movement.\nContinuing with the question of the methods used for classi-\nfication, much work has been developed in prompt engineering,\nespecially since the release of GPT-3. Liu et al.[36] presented a good\noverview of the work done on this new NLP paradigm, not only\nexplaining the concept of prompt engineering, but also the differ-\nent strategies that can be followed both in the design of prompts,\nTable 1: Summary of deductive approaches for frame analysis\nRef\nFrames\nGoal\nTechnique\nNumber\nof\nsamples\n[12] 15 generic frames: \"Economic\", \"Capac-\nity and resources\", \"Morality\", \"Fair-\nness and equality\", \"Legality, constitu-\ntionality and jurisprudence\", \"Policy\nprescription and evaluation\", \"Crime\nand punishment\", \"Security and de-\nfense\", \"Health and safety\", \"Quality of\nlife\", \"Cultural identity\", \"Public opin-\nion\", \"Political\", \"External regulation\nand reputation\", \"Other\".\nTo label frames of full\narticles\nReading\nthe\nfull\narticle,\nthe annotator\ndefines\nthe\nmain frame\n20000 articles\n[33] 15 generic frames\nClassification\nBERT\nbased\nmodels\n12000 articles\n[52] 5 generic frames: \"human interest\",\n\"conflict\", \"morality\", \"attribution of\nresponsibility\", and \"economic conse-\nquences\".\nTo label frames of full\narticles\nYes/No\nques-\ntions.\n2600\narticles\nand\n1522\ntv\nnews stories\n[37] 9 specific frames:\u201cPolitics\u201d, \u201cPublic\nopinion\u201d,\n\u201cSociety/Culture\u201d,\nand\n\u201cEconomic\nconsequences\u201d\n,\n\u201c2nd\nAmendment\u201d (Gun Rights), \u201cGun\ncontrol/regulation\u201d, \u201cMental health\u201d,\n\u201cSchool/Public space safety\u201d, and\n\u201cRace/Ethnicity\u201d.\nTo label frames of full\narticles/ Classification\nReading\nthe\nfull\narticle,\nthe annotator\ndefines\nthe\nmain\nframe.\nBERT\nbased\nmodels\n2990 headlines\n[22] 5 generic frames + blame frame and\nfear frame\nTo label frames of full\narticles\nYes/No\nques-\ntions.\n1170 articles\n[1]\n5 generic frames\nTo label frames of full\narticles\nReading\nthe\nfull\narticle,\nthe annotator\ndefines\nthe\nmain frame.\n6713 articles\n[50] 5 generic frames + pandemic frames\nTo label frames of full\narticles\nYes/No\nques-\ntions.\n2742 articles\n[14] 5 generic frames, journalistic role and\npandemic frames\nTo label frames of full\narticles\nReading\nthe\nheadline\nand\nsubheadline,\nthe annotator\ndefines\nthe\nmain frame.\n131 headlines +\nsubheadlines\nthe potential applications, and the challenges to face when using\nthis approach. Prompt engineering applications include knowledge\nprobing [46], information extraction [53], NLP reasoning [57], ques-\ntion answering [32], text generation [20], multi-modal learning [58],\nand text classification [24], the latter being the prompt-engineering\nuse case in our work. Puri et al.[45] presented a very interesting\nidea that we apply to our classification task. This consists of pro-\nviding the language model with natural language descriptions of\nclassification tasks as input, and training it to generate the correct\nanswer in natural language via a language modeling objective. It is\na zero-shot learning approach, in which no examples are used to\nexplain the task to the model. Radford et al. [48] demonstrated that\nlanguage models can learn tasks without any explicit supervision.\nWe have followed this approach to find an alternative way to do\nframe analysis.\nAs mentioned before, the emergence of giant models like GPT-3,\nBLOOM, and ChatGPT are a very active research topic. To the best\nof our knowledge, on one hand our work extends the computational\nanalysis of news related to the covid-19 no-vax movement, which\nillustrates the influence of the press on the ways societies think\nabout relevant issues [40], [59], and on the other hand it adds to\nthe literature of human-machine interaction, regarding the design\nof GPT-3 prompts for classification tasks [39], [2].\n3\nDATA: EUROPEAN COVID-19 NEWS\nDATASET\nWe used part of the European Covid-19 News dataset collected in\nour recent work [3]. This dataset contains 51320 articles on Covid-\n19 vaccination from 19 newspapers from 5 different countries: Italy,\n629\nICMR \u201923, June 12\u201315, 2023, Thessaloniki, Greece\nDavid Alonso del Barrio and Daniel Gatica-Perez\nFrance, Spain, Switzerland and UK. The articles cover a time period\nof 22 months, from January 2020 to October 2021. All content was\ntranslated into English to be able to work in a common language.\nThe dataset was used for various analyses, such as name entity\nrecognition, sentiment analysis, and subtopic modeling, to under-\nstand how Covid-19 vaccination was reported in Europe through\nthe print media (in digital format.) The subtopic modeling analysis\nrevealed a subsample of articles on the no-vax movement, which is\nthe one we have used in this paper. We took the headlines of the\narticles associated with the no-vax movement, selecting all articles\ncontaining any of the keywords in Table 2 in the headline or in the\nmain text. This corresponds to a total of 1786 headlines.\nTable 2: Keywords used to identify no-vax articles\nKeywords\nNO VAX TOPIC\n\"anti-vaxxers\", \"anti-vaccine\", \"anti-vaxx\", \"anti-corona\", \"no-vax\", \"no vax\",\"anti-vaccin\"\nIn Table 3, we show the number of headlines per country and\nnewspaper. France is the country with the most no-vax articles in\nthe corpus, with 523 articles, followed by Italy with 508. However,\nnote that there are 6 newspapers from France, while only 2 from\nItaly. Corriere della Sera is the newspaper that dealt most frequently\nwith the subject (429 articles), while The Telegraph is the second\none (206 articles). The total number of articles normalized by the\nnumber of newspapers per country is also shown in the last column\nof the Table. Using these normalized values, the ranking is Italy,\nUK, France, Switzerland, and Spain.\nTable 3: Number of headlines by newspaper and country\nCOUNTRY\nNEWSPAPER\nHEADLINES\nTOTAL (NORM. TOTAL)\nFRANCE\nLa Croix\n94\n523 (87.1)\nLe Monde\n125\nLes Echos\n49\nLiberation\n97\nLyon Capitale\n8\nOuest France\n150\nITALY\nCorriere della Sera\n429\n508 (254.0)\nIl Sole 24 Ore\n79\nSPAIN\n20 minutos\n27\n303 (50.5)\nABC\n50\nEl Diario\n32\nEl Mundo\n77\nEl Espa\u00f1ol\n22\nLa Vanguardia\n95\nSWITZERLAND\n24 heures\n97\n230 (76.6)\nLa Libert\u00e9\n22\nLe Temps\n111\nUNITED KINGDOM\nThe Irish News\n16\n222 (111.0)\nThe Telegraph\n206\n1786\n4\nMETHODOLOGY\n4.1\nHuman labeling of news frames\nTo carry out the labeling of the frames in our corpus of headlines, we\nfirst designed a codebook, which contained the definitions of each\nof the frame types and a couple of examples of each type, as well\nas a definition of the corpus subject matter and definitions of the\nconcept of frame analysis, so that the annotators could understand\nthe task to be performed. The codebook follows the proposed by\n[52] with 5 generic frames (attribution of responsibility, human\ninterest, conflict, morality, and economic consequences) plus one\nadditional \u2019no-frame\u2019 category. Two researchers were engaged to\nannotate a sample of the collected newspaper articles following a\nthree-phase training procedure.\nIn the first phase, annotators had to read the codebook and get\nfamiliar with the task. In the second phase, they were asked to\nidentify the main frame in the same subset of 50 headlines. At the\nend of the second phase, the intercoder reliability (ICR) was 0.58\nbetween the 2 annotators. We analyzed those cases where there\nwere discrepancies, and observed that in some cases, there was not a\nunique main frame, because both annotators had valid arguments to\nselect one of the frames. In other cases, the discrepancies were due\nto slight misunderstanding of the definitions. In the third phase, the\nannotators coded again 50 headlines, and the ICR increased to was\n0.66. We realized that the possibility of having two frames remained.\nThey discussed the cases in which they had disagreed, and if the\nother person\u2019s arguments were considered valid, it could be said that\nthere were two frames. After this three-phase training procedure,\nannotators were ready to annotate the dataset independently. We\ndivided the dataset into two equal parts, and each person annotated\n893 headlines.\n4.2\nFine-tuning GPT-3.5 and BERT-based\nmodels\nWith the annotated dataset, we investigated two NLP approaches:\nthe first one involves fine-tuning a pre-trained model; the second\none is prompt engineering. Pre-trained language models have been\nFigure 1: Pre-train, fine-tune, prompt\ntrained with large text strings based on two unsupervised tasks,\nnext sentence prediction and masked language model. Figure 1\nsummarizes these techniques.\nIn the first approach, a model with a fixed architecture is pre-\ntrained as a language model (LM), predicting the likelihood of the\nobserved textual data. This can be done due to the availability of\nlarge, raw text data needed to train LMs. This learning process can\nproduce general purpose features of the modeled language. The\nlearning process produces robust, general-purpose features of the\nlanguage being modeled. The above pre-trained LM is then adapted\nto different downstream tasks, by introducing additional parameters\nand adjusting them using task-specific objective functions. In this\napproach, the focus was primarily on goal engineering, designing\nthe training targets used in both the pre-training and the fine-tuning\nstages [36].\n630\nFraming the News:\nFrom Human Perception to Large Language Model Inferences\nICMR \u201923, June 12\u201315, 2023, Thessaloniki, Greece\nWe present an example to illustrate the idea. Imagine that the\ntask is sentiment analysis, and we have a dataset with sentences\nand their associated sentiment, and a pre-trained model, which is a\nsaved neural network trained with a much larger dataset. For that\npre-trained model to address the target task, we unfreeze a few of\nthe top layers of the saved model base and jointly train both the\nnewly-added classifier layers and the last layers of the base model.\nThis allows to \"fine-tune\" the higher-order feature representations\nin the base model to make them more relevant for the sentiment\nanalysis task. In this way, instead of having to obtain a very large\ndataset with target labels to train a model, we can reuse the pre-\ntrained model and use a much smaller train dataset. We use a part\nof our dataset as examples for the model to learn the task, while\nthe other part of the dataset is used to evaluate model performance.\nPrevious works related to frame classification in the computing\nliterature have used fine-tuning, BERT-based models. In our work,\nwe have done the same as a baseline, but we aimed to go one step\nfurther and also produce results using fine-tuning of GPT-3.5.\n4.3\nPrompt-engineering with GPT-3.5\nModel fine-tuning has been widely used, but with the emergence\nof generative models such as GPT-3, another way to approach\nclassification tasks has appeared. The idea is to use the pre-trained\nmodel directly and convert the task to be performed into a format\nas close as possible to the tasks for which it has been pre-trained.\nThat is, if the model has been pre-trained from next word prediction\nas in the case of GPT-3, classification can be done by defining a\nprompt, where the input to the model is an incomplete sentence,\nand the model must complete it with a word or several words, just\nas it has been trained. This avoids having to use part of the already\nlabeled dataset to teach the task to be performed to the model, and\na previous labeling is not needed [36].\nIn this approach, instead of adapting pre-trained LMs to down-\nstream tasks via objective engineering, downstream tasks are re-\nformulated to look more like those solved during the original LM\ntraining with the help of a textual prompt. For example, when recog-\nnizing the emotion of a social media post, \u201cI missed the bus today.\u201d,\nwe may continue with a prompt \u201cI felt so _\u201d, and ask the LM to\nfill the blank with an emotion-bearing word. Or if we choose the\nprompt \u201cEnglish: I missed the bus today. French: _\u201d), an LM may\nbe able to fill in the blank with a French translation. In this way,\nby selecting the appropriate prompts, we can influence the model\nbehavior so that the pre-trained LM itself can be used to predict the\ndesired output, even without any additional task-specific training\n[36].\nWe use this emerging NLP approach to classify frames at headline\nlevel. We are not aware of previous uses of this strategy to classify\nframes as we propose here. The idea is the following. Prompt engi-\nneering consists of giving a prompt to the model, and understands\nthat prompt as an incomplete sentence. To do prompt engineer-\ning with our dataset, we needed to define an appropriate prompt\nthat would produce the headline frames as output. We defined sev-\neral experiments with the Playground of GPT-3, in order to find\nthe best prompt for our task. In our initial experiments, we fol-\nlowed existing approaches in prompt engineering to do sentiment\nanalysis, where the individual answer was an adjective, and this\nadjective was matched with a sentiment. In a similar fashion, we\ndecided to build a thesaurus of adjectives that define each of the\nframes. For instance, the human interest frame could be \u2019interest-\ning\u2019, \u2019emotional\u2019, \u2019personal\u2019, \u2019human\u2019. The conflict frame could be:\n\u2019conflictive\u2019, \u2019bellicose\u2019, \u2019troublesome\u2019, \u2019rowdy\u2019, \u2019quarrelsome\u2019, \u2019trou-\nblemaker\u2019, \u2019agitator\u2019, etc. After the list of adjectives was defined,\nwe needed to define the prompt in order to get, as an answer, one\nof the adjectives in our thesaurus to match them with the frame.\nWe used the GPT-3 playground using the headline as input and\nasking for the frame as output, but the strategy did not work. In\nour final experiment, instead of giving the headline as input, we\ngave the definitions of each type of frame plus the headline, and we\nasked the model to choose between the different types of frames\nas output. In this way, the output of the model was directly one of\nthe frames, and we avoided the step of matching adjectives with\nframes. An example is shown in Figure 2.\nFigure 2: GPT-3.5 for frame inference: input and output\nFor the GPT-3 configuration 1, there are 3 main concepts:\n\u2022 TEMPERATURE [0-1]. This parameter controls randomness,\nlowering it results in less random completions.\n\u2022 TOP_P [0-1]. This parameter controls diversity via nucleus\nsampling.\n\u2022 MAX_TOKENS[1-4000]. This parameter indicates the maxi-\nmum number of tokens to generate,\n\u2022 MODEL. GPT-3 offer four main models with different levels\nof power, suitable for different tasks. Davinci is the most\ncapable model, and Ada is the fastest.\nAfter testing with the GPT-3 playground and varying different\nhyper-parameters to assess performance, we set the temperature to\n0, since the higher the temperature the more random the response.\nFurthermore, the Top-p parameter was set to 1, as it would likely\nget a set of the most likely words for the model to choose from. The\nmaximum number of tokens was set to 2; in this way, the model\nis asked to choose between one of the responses. As a model, we\nused the one with the best performance at the time of experimental\ndesign, which was TEXT-DAVINCI-003, recognized as GPT 3.5.\n5\nRESULTS: HUMAN LABELING OF FRAMES\nIN NO-VAX NEWS HEADLINES (RQ1)\nIn this section, we present and discuss the results of the analysis\nrelated to our first RQ.\nFigure 3 shows the distribution of frames per country at headline\nlevel, with human interest and no-frame being the predominant\n1https://beta.openai.com/docs/introduction\n631\nICMR \u201923, June 12\u201315, 2023, Thessaloniki, Greece\nDavid Alonso del Barrio and Daniel Gatica-Perez\nones. Attribution of responsibility is the third one except in Switzer-\nland, where the corresponding frame is conflict. Finally, morality\nand economic are the least represented in the dataset for every\ncountry.\nFigure 3: Non-normalized distribution of frames per country\nThe monthly distribution of frames aggregated for all countries\nis shown in Fig. 4. We can see two big peaks, the first one in January\n2021 and the second one in August 2021. In all countries, the vac-\ncination process started at the end of December 2020, so it makes\nsense that the no-vax movement started to be more predominant in\nthe news in January 2021. Human interest is the most predominant\nframe. Manual inspection shows that this is because the headlines\nare about personal cases of people who are pro- or anti- vaccine.\nAttribution of responsibility is also present. Manual inspection in-\ndicates that local politicians and health authorities had to make\ndecisions about who could be vaccinated at the beginning of the\nprocess. The second peak at the end of summer 2021 coincided\nwith the health pass (also called Covid passport in some countries),\nand we can observe a peak in the curve corresponding to the con-\nflict frame, reflecting the demonstrations against the measure of\nmandatory health passes taken by country governments.\nIn Figure 5, we compare the sentiment per frame and per country,\nto understand if there were any major differences. The sentiment\nanalysis labels were obtained using BERT-sent from the Hugging\nFace package [47], used in our previous work (please refer to our\noriginal analysis in [3] for details.) We normalized the results be-\ntween 0 and 1 to compare frames between countries. We see that the\nsentiment is predominantly neutral (in blue). Examining in more\nFigure 4: Non-normalized monthly distribution of frames.\ndetail the negative and positive sentiment of each frame category,\nwe observed a few trends:\n\u2022 Attribution of responsibility: Negative sentiment represents\n30-40% of the cases, while positive tone is only found in\nresidual form in Italy, Switzerland, and the United Kingdom.\n\u2022 Conflict: Negative sentiment represents 20-35% of the cases.\n\u2022 Economic: Predominantly neutral, with only negative tone\nin Italy and UK (in the latter case, all headlines with this\nframe were considered negative.)\n\u2022 Human interest: Negative sentiment represents 30-40% of\nthe cases, while positive tone is only found in residual form\nin Italy, Spain, and Switzerland.\n\u2022 Morality: Predominantly neutral, with negative tone in Italy,\nSwitzerland, and the United Kingdom,\n\u2022 No frame: 20-30% of negative content.\nFigure 5: Sentiment of headline by frame and by country\n632\nFraming the News:\nFrom Human Perception to Large Language Model Inferences\nICMR \u201923, June 12\u201315, 2023, Thessaloniki, Greece\nRegarding the results of the annotation process, the fact that the\ndistribution of the 6 frame types is relatively similar between coun-\ntries suggests that the anti-vaccine movement issue was treated\nin a similar way in these countries. The fact that human interest\nis the most dominant frame indicates that this issue was treated\nfrom a more human and emotional approach, with headlines about\npersonal experiences, celebrities giving their opinion about vacci-\nnation, and politicians defending vaccine policies. Moreover, the\nreason for many headlines being classified as no-frame is partly\ndue to how data was selected. We chose articles that contained\nwords related to no-vax, either in the headline or in the article. This\nresulted in many headlines not containing anything specific related\nto no-vax, while the no-vax content was actually included in the\nmain text of the corresponding articles.\nIt is worth mentioning that prior to obtaining the results, we had\nexpected that attribution of responsibility would be among the most\nprominent frames, since governments took many measures such as\nmandatory health pass requirements to access certain sites; we had\nalso expected that the conflict frame would be prominent, since\nthere were many demonstrations in Europe. In reality, however,\nthese frames categories were not reflected as frequently at the\nheadline level.\nRegarding the analysis at the temporal level, it is clear that certain\nevents were captured by the press, such as the start of vaccination\nor the mandatory vaccination passport.\nFinally, the sentiment analysis of the different frames shows that\nthe predominant tone in all of them is neutral or negative, with very\nsimilar trends between countries. This association between senti-\nment analysis and frames has been discussed in previous literature\n[11] [43].\n6\nRESULTS: GPT-3.5 FOR FRAME\nCLASSIFICATION OF HEADLINES (RQ2)\nHere, we present and discuss the results related to our second RQ.\n6.1\nFine-tuning GPT-3.5\nTable 4 shows the results of the 6-class classification task using\n5-cross validation. Three models were used: GPT-3.5 and two BERT-\nbased models. We observe that, on average, GPT-3.5 performs better\nthan the BERT-based models. This is somehow expected as GPT-\n3.5 is a much larger model. Overall, in the case of fine-tuning, the\nbest performance for the six-class frame classification task is 72%\naccuracy, which is promising, with an improvement over previous\nmodels based on BERT. Yet, it should be noted that the performance\ndifferences are modest (2% improvement between GPT-3.5 and\nRoBERTa).\nTable 4: Classification results for six-class frame classifica-\ntion and 5-fold cross validation\nACCURACY\n0\n1\n2\n3\n4\nAVERAGE\nBERT\n0.68\n0.69\n0.72\n0.64\n0.70\n0.67\nRoBERTa\n0.70\n0.72\n0.72\n0.67\n0.71\n0.70\nGPT3\n0.75\n0.70\n0.72\n0.71\n0.71\n0.72\nOn the other hand, BERT is open-source, while GPT-3 has an\neconomic cost as the use of the model is not free, which monetarily\nlimits the number of experiments that can be performed with it,\nas well as the different configurations one can explore to improve\nperformance. This is important because much of the improvement\nin performance requires empirical explorations of model parameters\nMore specifically, the cost of an experiment for each of the folds has\na cost of 4 dollars (at the time of writing this paper.) This represents\na limitation in practice.\nFurthermore, GPT-3 has a significant carbon footprint. Similarly,\nfor prompt engineering (discussed in the next subsection), choosing\nthe right prompt (i.e., the words that best define the task so that the\nmodel is able to perform adequately) is also based on trial and error.\nThis also has an impact on carbon footprint. In connection with\nthis topic, Strubell et al.[55] argue that improvements in the accu-\nracy of models depend on the availability of large computational\nresources, which involve large economic and environmental costs.\nA criticism has been made as \u2019the rich get richer\u2019, in the sense that\nnot all research groups have sufficient infrastructure resources and\naccess to funding needed to use these models and improve their\nperformance. Also in relation to this analysis, the work of Bender\net al. [4] evaluates the costs and risks of the use of large language\nmodels, stating that researchers should be aware of the impact that\nthese models have on the environment, and assess whether the\nbenefits outweigh the risks. The work in [4] provides a very telling\nexample, where people living in the Maldives or Sudan are affected\nby floods and pay the environmental price of training English LLMs,\nwhen similar models have not been produced for languages like\nDhivehi or Sudanese Arab. In short, there is a need to establish\nways to use this technological development responsibly, and it all\nstarts with being aware of the risks it presents.\n6.2\nPrompt-engineering with GPT-3.5\nFor each headline, we got the frame that the model considered the\nmost likely, and we compared these GPT-3.5 inferences with the\nframes labeled by the annotators. The agreement between model\nand annotator was of 49%. Analyzing the results, and specifically\nlooking at the cases where the annotator and GPT-3.5 disagreed,\nwe discovered that according to the frame definitions, the model\nin some cases proposed a frame that indeed made sense. This ob-\nservation, together with our previous experience in the annotation\nprocess, where headlines could have more than one valid frame,\nled us to design a second post-hoc experiment. We took all the\nheadlines where each of the two annotators had disagreed with\nGPT-3.5, and we asked the annotators to state whether they would\nagree (or not) with each GPT-inferred label for a given headline.\nIt is important to emphasize that the annotators did not know the\norigin of that label, i.e., they did not know if it was the label they\nhad originally assigned, or if it was a random one. In this way, we\ncould quantify how GPT-3.5 worked according to valid arguments\nprovided by the annotators. In this post-hoc experiment, the model\nagreed in 76% of cases with the annotators.\nLooking at the results of the classification models, the 49% accu-\nracy of the prompt-engineering approach can be considered low,\nyet we consider that it is a valid avenue for further investigation,\nas in the second post-hoc analysis, we found that the model agrees\n633\nICMR \u201923, June 12\u201315, 2023, Thessaloniki, Greece\nDavid Alonso del Barrio and Daniel Gatica-Perez\nwith human annotators in 76% of the cases. Clearly, framing in-\nvolves aspects of subjectivity [42]. Much of what we do as people\nhas a subjective component, influenced by how we feel or how we\nexpress opinions.\nNews reading is never fully objective, and the annotators en-\ngaged in the frame classification task, influenced by their personal\nstate of mind, experience, and culture, may perceive information\ndifferently. Monarch affirms that \"for simple tasks, like binary labels\non objective tasks, the statistics are fairly straightforward to decide\nwhich is the \u2018correct\u2019 label when different annotators disagree. But\nfor subjective tasks, or even objective tasks with continuous data,\nthere are no simple heuristics for deciding what the correct label\nshould be\" [42].\nSubjectivity is involved in both the generation and perception\nof information: the assumption that there is only one frame is com-\nplicated by the point of view of the reader. In the case of news, the\ninformation sender (the journalist) has an intention, but the receiver\n(the reader) plays a role and is influenced by it. In psychology, this\nis known as the lens model of interpersonal communication, where\nthe sender has certain objectives, but the receiver can interpret\nor re-interpret what the sender wants to say, with more or less\naccuracy [26].\nFollowing this discussion on subjectivity, the question arose as to\nwhat would happen if, instead of headlines, we used the complete\narticle as a source of analysis. We wondered if longer text could\nmake the frame labeling task clearer than when using headlines.\nYet another possible hypothesis is that having to read longer texts\ncould lead to the same subject being presented from different angles.\nPlease recall that in the existing literature discussed in Section 2,\nboth headlines and full articles have been used from frame analysis\n(see Table 1.) This remains as an issue for future work.\n7\nCONCLUSIONS\nIn this paper, we first presented an analysis of human-generated\nnews frames on the covid-19 no-vax movement in Europe, and\nthen studied different approaches using large language models for\nautomatic inference of frames. We conclude by answering the two\nresearch questions we posed:\nRQ1: What are the main frames in the news headlines about the\ncovid-19 anti-vaccine movement in 5 European countries? After\nannotating the headlines, we found that of the 1786 headlines,\nthe predominant frame is human interest (45.3% of cases), which\npresents a news item with an emotional angle, putting a face to a\nproblem or situation. We also found that a substantial proportion\nof headlines were annotated as not presenting any frame (40.2% of\ncases). Finally, the other frame types are found more infrequently.\nRQ2: Can prompt engineering be used for classification of head-\nlines according to frames? We first used fine-tuning of a number of\nlanguage models, and found that GPT-3.5 produced classification ac-\ncuracy of 72% on a six-frame classification task. This represented a\nmodest 2% improvement over BERT-based models, at a significantly\nlarger environmental cost. We then presented a new way of classi-\nfying frames using prompts. At the headline level, inferences made\nwith GPT-3.5 reached 49% of agreement with human-generated\nframe labels. In many cases, the GPT-3.5 model inferred frame\ntypes that were considered as valid choices by human annotators,\nand in an post-doc experiment, the human-machine agreement\nreached 76%. These results have opened several new directions for\nfuture work.\nACKNOWLEDGMENTS\nThis work was supported by the AI4Media project, funded by the\nEuropean Commission (Grant 951911) under the H2020 Programme\nICT-48-2020. We also thank the newspapers for sharing their online\narticles. Finally, we thank our colleagues Haeeun Kim and Emma\nBouton-Bessac for their support with annotations, and Victor Bros\nand Oleksii Polegkyi for discussions.\nREFERENCES\n[1] Justito Adiprasetio and Annissa Winda Larasati. 2020. Pandemic crisis in online\nmedia: Quantitative framing analysis on Detik. com\u2019s coverage of Covid-19.\nJurnal Ilmu Sosial Dan Ilmu Politik 24, 2 (2020), 153\u2013170.\n[2] Neel Alex, Eli Lifland, Lewis Tunstall, Abhishek Thakur, Pegah Maham, C Jess\nRiedel, Emmie Hine, Carolyn Ashurst, Paul Sedille, Alexis Carlier, et al. 2021.\nRAFT: A real-world few-shot text classification benchmark.\narXiv preprint\narXiv:2109.14076 (2021).\n[3] David Alonso del Barrio and Daniel Gatica-Perez. 2022. How Did Europe\u2019s Press\nCover Covid-19 Vaccination News? A Five-Country Analysis. (2022), 35\u201343.\nhttps://doi.org/10.1145/3512732.3533588\n[4] Emily M Bender, Timnit Gebru, Angelina McMillan-Major, and Shmargaret\nShmitchell. 2021. On the Dangers of Stochastic Parrots: Can Language Models\nBe Too Big? (2021), 610\u2013623.\n[5] Santosh Kumar Biswal and Nikhil Kumar Gouda. 2020. Artificial intelligence in\njournalism: A boon or bane? In Optimization in machine learning and applications.\nSpringer, 155\u2013167.\n[6] Erik Bleich, Hannah Stonebraker, Hasher Nisar, and Rana Abdelhamid. 2015.\nMedia portrayals of minorities: Muslims in British newspaper headlines, 2001\u2013\n2012. Journal of Ethnic and Migration Studies 41, 6 (2015), 942\u2013962.\n[7] Michael Bommarito and Daniel Martin Katz. 2022. GPT Takes the Bar Exam.\nhttps://doi.org/10.48550/ARXIV.2212.14402\n[8] Meredith Broussard, Nicholas Diakopoulos, Andrea L Guzman, Rediet Abebe,\nMichel Dupagne, and Ching-Hua Chuan. 2019. Artificial intelligence and jour-\nnalism. Journalism & Mass Communication Quarterly 96, 3 (2019), 673\u2013695.\n[9] Tom Brown, Benjamin Mann, Nick Ryder, Melanie Subbiah, Jared D Kaplan,\nPrafulla Dhariwal, Arvind Neelakantan, Pranav Shyam, Girish Sastry, Amanda\nAskell, et al. 2020. Language models are few-shot learners. Advances in neural\ninformation processing systems 33 (2020), 1877\u20131901.\n[10] Bj\u00f6rn Burscher, Daan Odijk, Rens Vliegenthart, Maarten De Rijke, and Claes H\nDe Vreese. 2014. Teaching the computer to code frames in news: Comparing\ntwo supervised machine learning approaches to frame analysis. Communication\nMethods and Measures 8, 3 (2014), 190\u2013206.\n[11] Bjorn Burscher, Rens Vliegenthart, and Claes H de Vreese. 2016. Frames beyond\nwords: Applying cluster and sentiment analysis to news coverage of the nuclear\npower issue. Social Science Computer Review 34, 5 (2016), 530\u2013545.\n[12] Dallas Card, Amber Boydstun, Justin Gross, Philip Resnik, and Noah Smith. 2015.\nThe Media Frames Corpus: Annotations of Frames Across Issues. 2 (01 2015),\n438\u2013444. https://doi.org/10.3115/v1/P15-2072\n[13] Daniel Catalan-Matamoros and Carlos El\u00edas. 2020. Vaccine hesitancy in the age\nof coronavirus and fake news: analysis of journalistic sources in the Spanish\nquality press. International Journal of Environmental Research and Public Health\n17, 21 (2020), 8136.\n[14] Daniel Catal\u00e1n-Matamoros and Carmen Pe\u00f1afiel-Saiz. 2019. Media and mistrust\nof vaccines: a content analysis of press headlines. Revista latina de comunicaci\u00f3n\nsocial 74 (2019), 786\u2013802.\n[15] Mark Coddington. 2015. Clarifying journalism\u2019s quantitative turn: A typology\nfor evaluating data journalism, computational journalism, and computer-assisted\nreporting. Digital journalism 3, 3 (2015), 331\u2013348.\n[16] Stephen D Cooper. 2010. The oppositional framing of bloggers. In Doing News\nFraming Analysis. Routledge, 151\u2013172.\n[17] Robert Dale. 2021. GPT-3: What\u2019s it good for? Natural Language Engineering 27,\n1 (2021), 113\u2013118.\n[18] Astrid Dirikx and Dave Gelders. 2010.\nTo frame is to explain: A de-\nductive frame-analysis of Dutch and French climate change coverage dur-\ning the annual UN Conferences of the Parties.\nPublic Understanding of\nScience 19, 6 (2010), 732\u2013742.\nhttps://doi.org/10.1177/0963662509352044\narXiv:https://doi.org/10.1177/0963662509352044 PMID: 21560546.\n[19] Astrid Dirikx and Dave Gelders. 2010. To frame is to explain: A deductive frame-\nanalysis of Dutch and French climate change coverage during the annual UN\nConferences of the Parties. Public understanding of science 19, 6 (2010), 732\u2013742.\n634\nFraming the News:\nFrom Human Perception to Large Language Model Inferences\nICMR \u201923, June 12\u201315, 2023, Thessaloniki, Greece\n[20] Zi-Yi Dou, Pengfei Liu, Hiroaki Hayashi, Zhengbao Jiang, and Graham Neubig.\n2020. Gsum: A general framework for guided neural abstractive summarization.\narXiv preprint arXiv:2010.08014 (2020).\n[21] Sumayya Ebrahim. 2022. The corona chronicles: Framing analysis of online news\nheadlines of the COVID-19 pandemic in Italy, USA and South Africa. Health SA\nGesondheid (Online) 27 (2022), 1\u20138.\n[22] Hend Abdelgaber Ahmed El-Behary. 2021. A Feverish Spring: A Comparative\nAnalysis of COVID-19 News Framing in Sweden, the UK, and Egypt. (2021).\n[23] Robert M Entman. 1993. Framing: Towards clarification of a fractured paradigm.\nMcQuail\u2019s reader in mass communication theory 390 (1993), 397.\n[24] Tianyu Gao, Adam Fisch, and Danqi Chen. 2020. Making pre-trained language\nmodels better few-shot learners. arXiv preprint arXiv:2012.15723 (2020).\n[25] Piyush Ghasiya and Koji Okamura. 2021. Investigating COVID-19 news across\nfour nations: a topic modeling and sentiment analysis approach. Ieee Access 9\n(2021), 36645\u201336656.\n[26] Robert Gifford. 1994. A Lens-Mapping Framework for Understanding the En-\ncoding and Decoding of Interpersonal Dispositions in Nonverbal Behavior.\nJournal of Personality and Social Psychology 66 (02 1994), 398\u2013412.\nhttps:\n//doi.org/10.1037//0022-3514.66.2.398\n[27] Quentin Grail, Julien Perez, and Eric Gaussier. 2021. Globalizing BERT-based\ntransformer architectures for long document summarization. In Proceedings of\nthe 16th Conference of the European Chapter of the Association for Computational\nLinguistics: Main Volume. 1792\u20131810.\n[28] Anushka Gupta, Diksha Chugh, Rahul Katarya, et al. 2022. Automated news\nsummarization using transformers. In Sustainable Advanced Computing. Springer,\n249\u2013259.\n[29] Alfred Hermida and Mary Lynn Young. 2017. Finding the data unicorn: A hierar-\nchy of hybridity in data and computational journalism. Digital Journalism 5, 2\n(2017), 159\u2013176.\n[30] Karoliina Isoaho, Daria Gritsenko, and Eetu M\u00e4kel\u00e4. 2021. Topic modeling and\ntext analysis for qualitative policy research. Policy Studies Journal 49, 1 (2021),\n300\u2013324.\n[31] Carina Jacobi, Wouter Van Atteveldt, and Kasper Welbers. 2016. Quantitative\nanalysis of large amounts of journalistic texts using topic modelling. Digital\njournalism 4, 1 (2016), 89\u2013106.\n[32] Zhengbao Jiang, Frank F Xu, Jun Araki, and Graham Neubig. 2020. How can we\nknow what language models know? Transactions of the Association for Computa-\ntional Linguistics 8 (2020), 423\u2013438.\n[33] Shima Khanehzar, Andrew Turpin, and Gosia Miko\u0142ajczak. 2019. Modeling\nPolitical Framing Across Policy Issues and Contexts. In ALTA.\n[34] Jeesun Kim and Wayne Wanta. 2018. News framing of the US immigration debate\nduring election years: Focus on generic frames. The Communication Review 21, 2\n(2018), 89\u2013115.\n[35] Percy Liang, Rishi Bommasani, Tony Lee, Dimitris Tsipras, Dilara Soylu, Michi-\nhiro Yasunaga, Yian Zhang, Deepak Narayanan, Yuhuai Wu, Ananya Kumar, et al.\n2022. Holistic evaluation of language models. arXiv preprint arXiv:2211.09110\n(2022).\n[36] Pengfei Liu, Weizhe Yuan, Jinlan Fu, Zhengbao Jiang, Hiroaki Hayashi, and\nGraham Neubig. 2021. Pre-train, prompt, and predict: A systematic survey of\nprompting methods in natural language processing. (2021). https://doi.org/10.\n48550/ARXIV.2107.13586\n[37] Siyi Liu, Lei Guo, Kate Mays, Margrit Betke, and Derry Tanti Wijaya. 2019.\nDetecting frames in news headlines and its application to analyzing news framing\ntrends surrounding US gun violence. In Proceedings of the 23rd conference on\ncomputational natural language learning (CoNLL).\n[38] J\u00f6rg Matthes and Matthias Kohring. 2008. The Content Analysis of Media Frames:\nToward Improving Reliability and Validity. Journal of Communication 58 (06\n2008). https://doi.org/10.1111/j.1460-2466.2008.00384.x\n[39] Selina Meyer, David Elsweiler, Bernd Ludwig, Marcos Fernandez-Pichel, and\nDavid E Losada. 2022. Do We Still Need Human Assessors? Prompt-Based GPT-3\nUser Simulation in Conversational AI. In Proceedings of the 4th Conference on\nConversational User Interfaces. 1\u20136.\n[40] Stuart E Middleton, Symeon Papadopoulos, and Yiannis Kompatsiaris. 2018. Social\ncomputing for verifying social media content in breaking news. IEEE Internet\nComputing 22, 2 (2018), 83\u201389.\n[41] Marko Milosavljevi\u0107 and Igor Vobi\u010d. 2021. \u2018Our task is to demystify fears\u2019:\nAnalysing newsroom management of automation in journalism. Journalism 22,\n9 (2021), 2203\u20132221.\n[42] R. Monarch. 2021. Human-in-the-Loop Machine Learning: Active Learning and\nAnnotation for Human-centered AI. Manning. https://books.google.ch/books?\nid=LCh0zQEACAAJ\n[43] Tom Nicholls and Pepper D Culpepper. 2021. Computational identification of\nmedia frames: Strengths, weaknesses, and opportunities. Political Communication\n38, 1-2 (2021), 159\u2013181.\n[44] Zhongdang Pan and Gerald M Kosicki. 1993. Framing analysis: An approach to\nnews discourse. Political communication 10, 1 (1993), 55\u201375.\n[45] Raul Puri and Bryan Catanzaro. 2019. Zero-shot text classification with generative\nlanguage models. arXiv preprint arXiv:1912.10165 (2019).\n[46] Guanghui Qin and Jason Eisner. 2021. Learning how to ask: Querying lms with\nmixtures of soft prompts. arXiv preprint arXiv:2104.06599 (2021).\n[47] Rabindra Lamsal. 2021. Sentiment Analysis of English Tweets with BERTsent.\nhttps://huggingface.co/rabindralamsal/finetuned-bertweet-sentiment-analysis.\n[48] Alec Radford, Jeffrey Wu, Rewon Child, David Luan, Dario Amodei, Ilya Sutskever,\net al. 2019. Language models are unsupervised multitask learners. OpenAI blog\n1, 8 (2019), 9.\n[49] Nishant Rai, Deepika Kumar, Naman Kaushik, Chandan Raj, and Ahad Ali. 2022.\nFake News Classification using transformer based enhanced LSTM and BERT.\nInternational Journal of Cognitive Computing in Engineering 3 (2022), 98\u2013105.\nhttps://doi.org/10.1016/j.ijcce.2022.03.003\n[50] Frida V Rodelo. 2021. Framing of the Covid-19 pandemic and its organizational\npredictors. Cuadernos. info 50 (2021), 91\u2013112.\n[51] Teven Le Scao, Angela Fan, Christopher Akiki, Ellie Pavlick, Suzana Ili\u0107, Daniel\nHesslow, Roman Castagn\u00e9, Alexandra Sasha Luccioni, Fran\u00e7ois Yvon, Matthias\nGall\u00e9, et al. 2022. Bloom: A 176b-parameter open-access multilingual language\nmodel. arXiv preprint arXiv:2211.05100 (2022).\n[52] Holli Semetko and Patti Valkenburg. 2000. Framing European Politics: A Content\nAnalysis of Press and Television News. Journal of Communication 50 (06 2000),\n93 \u2013 109. https://doi.org/10.1111/j.1460-2466.2000.tb02843.x\n[53] Richard Shin, Christopher H Lin, Sam Thomson, Charles Chen, Subhro Roy, Em-\nmanouil Antonios Platanios, Adam Pauls, Dan Klein, Jason Eisner, and Benjamin\nVan Durme. 2021. Constrained language models yield few-shot semantic parsers.\narXiv preprint arXiv:2104.08768 (2021).\n[54] Efstathios Sidiropoulos and Andreas Veglis. 2017. Computer Supported Collab-\norative Work trends on Media Organizations: Mixing Qualitative and Quan-\ntitative Approaches.\nStudies in Media and Communication 5 (04 2017), 63.\nhttps://doi.org/10.11114/smc.v5i1.2279\n[55] Emma Strubell, Ananya Ganesh, and Andrew McCallum. 2019. Energy and policy\nconsiderations for deep learning in NLP. arXiv preprint arXiv:1906.02243 (2019).\n[56] Alex Tamkin, Miles Brundage, Jack Clark, and Deep Ganguli. 2021. Understanding\nthe capabilities, limitations, and societal impact of large language models. arXiv\npreprint arXiv:2102.02503 (2021).\n[57] Trieu H Trinh and Quoc V Le. 2018. A simple method for commonsense reasoning.\narXiv preprint arXiv:1806.02847 (2018).\n[58] Maria Tsimpoukelli, Jacob L Menick, Serkan Cabi, SM Eslami, Oriol Vinyals, and\nFelix Hill. 2021. Multimodal few-shot learning with frozen language models.\nAdvances in Neural Information Processing Systems 34 (2021), 200\u2013212.\n[59] Sandra A Vannoy and Prashant Palvia. 2010. The social influence model of\ntechnology adoption. Commun. ACM 53, 6 (2010), 149\u2013153.\n[60] Tuukka Yl\u00e4-Anttila, Veikko Eranti, and Anna Kukkonen. 2022. Topic modeling\nfor frame analysis: A study of media debates on climate change in India and USA.\nGlobal Media and Communication 18, 1 (2022), 91\u2013112.\n635\n",
    "pdf_url": "/media/Article_08_Osnhwqj.pdf",
    "references": [
      "[1] Justito Adiprasetio and Annissa Winda Larasati. 2020. Pandemic crisis in online",
      "media: Quantitative framing analysis on Detik. com\u2019s coverage of Covid-19.",
      "Jurnal Ilmu Sosial Dan Ilmu Politik 24, 2 (2020), 153\u2013170.",
      "[2] Neel Alex, Eli Lifland, Lewis Tunstall, Abhishek Thakur, Pegah Maham, C Jess",
      "Riedel, Emmie Hine, Carolyn Ashurst, Paul Sedille, Alexis Carlier, et al. 2021.",
      "RAFT: A real-world few-shot text classification benchmark.",
      "arXiv preprint",
      "arXiv:2109.14076 (2021).",
      "[3] David Alonso del Barrio and Daniel Gatica-Perez. 2022. How Did Europe\u2019s Press"
    ],
    "publication_date": "2023-11-07T00:00:00",
    "corrected": 0
  }
]