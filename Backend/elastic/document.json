[
  {
    "titre": "AI Modell for Computer games based on Case Based Reasoning and AI Planning",
    "resume": "Making efficient AI models for games with imperfect information can be a particular challenge. Considering the large number of possible moves and the incorporated uncertainties building game trees for these games becomes very difficult due to the exponential growth of the number of nodes at each level. This effort is focused on presenting a method of combined Case Based Reasoning (CBR) with AI Planning which drastically reduces the size of game trees. Instead of looking at all possible combinations we can focus only on the moves that lead us to specific strategies in effect discarding meaningless moves. These strategies are selected by finding similarities to cases in the CBR database. The strategies are formed by a set of desired goals. The AI planning is responsible for creating a plan to reach these goals. The plan is basically a set of moves that brings the player to this goal. By following these steps and not regarding the vast number of other possible moves the model develops Game Trees which grows slower so they can be built with more feature moves restricted by the same amount of memory.",
    "auteurs": [
      "Case Based \nReasoning",
      "Vlado Menkovski",
      "Case Based \nReasoning",
      "Game Trees",
      "Game Trees and Minimax",
      "Game Trees"
    ],
    "institutions": [
      "Dimitrios Metafas Athens Information Technology ",
      "Vlado Menkovski Athens Information Technology "
    ],
    "mots_cles": [
      " Game AI",
      " Case Based Reasoning",
      " AI Planning",
      " Game Trees  "
    ],
    "texte_integral": "AI Model for Computer games based on Case Based \nReasoning and AI Planning  \nVlado Menkovski \nAthens Information Technology \n0.8km Markopoulou Ave. \nPeania, 19002, Greece \nvmen@ait.edu.gr \nDimitrios Metafas \nAthens Information Technology \n0.8km Markopoulou Ave. \nPeania, 19002, Greece \ndmeta@ait.edu.gr \nAbstract\nMaking efficient AI models for games with imperfect \ninformation can be a particular challenge. Considering the large \nnumber of possible moves and the incorporated uncertainties \nbuilding game trees for these games becomes very difficult due to \nthe exponential growth of the number of nodes at each level. This \neffort is focused on presenting a method of combined Case Based \nReasoning (CBR) with AI Planning which drastically reduces the \nsize of game trees. Instead of looking at all possible combinations \nwe can focus only on the moves that lead us to specific strategies \nin effect discarding meaningless moves. These strategies are \nselected by finding similarities to cases in the CBR database. The \nstrategies are formed by a set of desired goals. The AI planning is \nresponsible for creating a plan to reach these goals. The plan is \nbasically a set of moves that brings the player to this goal. By \nfollowing these steps and not regarding the vast number of other \npossible moves the model develops Game Trees which grows \nslower so they can be built with more feature moves restricted by \nthe same amount of memory.  \nCategories and Subject Descriptors \nI.2.1 [Applications and Expert Systems]: Games\nGeneral Terms\nAlgorithms, Performance. \nKeywords\nGame AI, Case Based Reasoning, AI Planning, Game Trees \n1. Introduction \nThe goal of this effort is to explore a model for design and \nimplementation of an AI agent for turn based games. This model \nprovides for building more capable computer opponents that rely \non strategies that closely resemble human approach in solving \nproblems opposed to classical computational centric heuristics in \ngame AI. In this manner the computational resources can be \nfocused on more sensible strategies for the game play.  \nWith the advancement in computer hardware increasingly \nmore computing power is left for executing AI algorithms in \ngames. In the past AI in games was mainly a cheating set of \ninstructions that simulated the increasing difficulty in the game \nenvironment so that the player had the illusion of real counterpart. \nImprovement in available memory and processing power allows \nimplementation of more intelligent algorithms for building the \ngame environment as well as direct interaction with the human \nplayers.   \nIn this particular research the emphasis is put on the \ninteraction between the AI agent and a computer player in the \nrealm of the game rules. It is particularly focused on turn based \ngames that have the elements of uncertainty like dice or concealed \ninformation. At the beginning a description of Game AI \nalgorithms are given; such as Game Trees and Minimax. The \nfollowing section describes an approach of using AI Planning to \nimprove building Game Trees in games with imperfect \ninformation where Game Trees tend to be very large with high \ngrowth ratio. Section 4 discusses another approach that provides a \nsignificant reduction to the number of considered moves in order \nto find the favorable strategy of the AI player. This approach uses \nAI Planning techniques and Case Base Reasoning (CBR) to plan \nfor different scenarios in predetermined strategies which would be \nanalogous to human player experience in the particular game. The \nCBR database illustrates a set of past experiences for the AI \nproblem and the AI Planning illustrates the procedure to deal with \nthe given situation in the game. In the next two sections \nimplementations and evaluations of both approaches are given. \nThe AI Planning approach is implemented with the Tic-tac-toe \ngame and the combined AI Planning and CBR approach is \nimplemented with a model for the Monopoly game. The last part \ncontains conclusions and future work ideas.  \n2. Game Trees and Minimax \nGame Trees are common model for evaluating how different \ncombinations of moves from the player and his opponents will \naffect the future position of the player and eventually the end \nresult of the game. An algorithm that decides on the next move by \nevaluating the results from the built Game Tree is minimax [1]. \nMinimax assumes that the player at hand will always choose the \nbest possible move for him, in other words the player will try to \nselect the move that maximizes the result of the evaluation \nfunction over the game state. So basically the player at hand needs \nto choose the best move overall while taking into account that the \nnext player(s) will try to do the same thing. Minimax tries to \nmaximize the minimum gain. Minimax can be applied to multiple \nPermission to make digital or hard copies of all or part of this work for \npersonal or classroom use is granted without fee provided that copies are \nnot made or distributed for profit or commercial advantage and that \ncopies bear this notice and the full citation on the first page. To copy \notherwise, or republish, to post on servers or to redistribute to lists, \nrequires prior specific permission and/or a fee. \nDIMEA\u201908, September 10\u201312, 2008, Athens, Greece. \nCopyright 2008 ACM 978-1-60558-248-1/08/09... $5.00 \nInteractive and Adaptable Media\n295\n3rd International Conference on Digital Interactive Media in Entertainment and Arts\nlevels of nodes on the game tree, where the leaves bring the final \nknown (or considered) game state.  \nThe minimax theorem states: \nFor every two-person, zero-sum game there is a mixed strategy \nfor each player, such that the expected payoff for both is the same \nvalue V when the players use these strategies. Furthermore, V is \nthe best payoff each can expect to receive from a play of the \ngame; that is, these mixed strategies are the optimal strategies for \nthe two players. \nThis theorem was established by John von Neumann, who is \nquoted as saying \"As far as I can see, there could be no theory of \ngames \u2026 without that theorem \u2026 I thought there was nothing \nworth publishing until the Minimax Theorem was proved\" [2]. \nA simple example of minimax can be observed by building a \ngame tree of the tic-tac-toe game. The tic-tac-toe game is a simple \ngame which can end by the first player wining, the second player \nwining or a tie. There are nine positions for each of the players in \nwhich at each turn the player puts X or O sign. If the player has \nthree adjacent signs in a row, column or the two diagonals he or \nshe wins. This game has limited number of position and it is well \nsuited for building the whole game tree. The leaves of this tree \nwill be final positions in the game. A heuristics evaluation \nfunction will also need to be written to evaluate the value of each \nnode along the way. \n3. AI Planning for building Game Trees \n3.1.1 AI Planning \nAI Planning also referred as Automated Planning and \nScheduling is a branch of Artificial Intelligence that focuses on \nfinding strategies or sequences of actions that reach a predefined \ngoal [3]. Typical execution of AI Planning algorithms is by \nintelligent agents, autonomous robots and unmanned vehicles. \nOpposed to classical control or classification AI Planning results \nwith complex solutions that are derived from multidimensional \nspace. \n AI Planning algorithms are also common in the video game \ndevelopment. They solve broad range of problems from path \nfinding to action planning. A typical planner takes three inputs: a \ndescription of the initial state of the world, a description of the \ndesired goal, and a set of possible actions. Some efforts for \nincorporating planning techniques for building game trees have \nalso shown up, similar to the approach explored in this effort. In \naddition Cased Based Reasoning [4] techniques are also gathering \npopularity in developing strategies based in prior knowledge \nabout the problems in the games. One of the benefits from \nHierarchical Task Network (HTN) [5] planning is the possibility \nto build Game Trees based on HTN plans; this method is \ndescribed in the following section. \n3.2 Game Trees with AI Planning \nAn adaptation of the HTN planning can be used to build \nmuch smaller and more efficient game trees. This idea has already \nbeen implemented in the Bridge Baron a computer program for \nthe game of Contact Bridge [6]. \nComputer programs based on Game Tree search techniques \nare now as good as or better than humans in many games like \nChess [7] and checkers [8], but there are some difficulties in \nbuilding a game tree for games that have imperfect information \nand added uncertainty like card or games with dice. The main \nproblem is the enormous number of possibilities that the player \ncan choose from in making his move. In addition some of the \nmoves are accompanied with probabilities based on the random \nelements in the games. The number of possible moves \nexponentially grows with each move so the depth of the search \nhas to be very limited to accommodate for the memory \nlimitations.  \nThe basic idea behind using HTN for building game trees is \nthat the HTN provides the means of expressing high level goals \nand describing strategies how to reach those goals. These goals \nmay be decomposed in goals at lower level called sub-goals. This \napproach closely resembles the way a human player usually \naddresses a complex problem. It is also good for domains where \nclassical search for solution is not feasible due to the vastness of \nthe problem domain or uncertainties. \n3.2.1 Hierarchical Task Networks \nThe Hierarchical Task Network, or HTN, is an approach to \nautomated planning in which the dependency among actions can \nbe given in the form of networks [9] [Figure 1]. \nA simple task network (or just a task network for short) is an \nacyclic digraph \ufffd \ufffd \ufffd\ufffd\ufffd \ufffd\ufffd in which U is the node set, E is the \nedge set, and each node \ufffd \ufffd \ufffd contains a task \ufffd\ufffd. The edges of \ufffd\ndefine a partial ordering of U. If the partial ordering is total, then \nwe say that \ufffd is totally ordered, in which case \ufffd can be written as \na sequence of tasks \ufffd \ufffd \ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd \ufffd \ufffd \ufffd\ufffd\ufffd.\nFigure 1: Simple Hierarchical Task Network \nA Simple Task Network (STN) method is a 4-tuple of its name, \ntask, precondition and a task network. The name of the method \nlets us refer unambiguously to substitution instances of the \nmethod, without having to write the preconditions and effects \nexplicitly. The task tells what kind of task can be applied if the \npreconditions are met. The preconditions specify the conditions \nthat the current state needs to satisfy in order for the method to be \napplied. And the network defines the specific subtasks to \naccomplish in order to accomplish the task. \nA method is relevant for a task if the current state satisfies the \npreconditions of a method that implements that task. This task can \nbe then substituted with the instance of the method. The \nsubstitution is basically giving the method network as a solution \nfor the task. \nIf there is a task \u201cGo home\u201d and the distance to home is 3km \n[Figure 2] and there exists a method walk-to and this method has a \nprecondition that the distance is less than 5km, then a substation \nto the task \u201cGo home\u201d can be made with this method instance.  \nFigure 2: HTN Method \nBuy milk\nGo to (shop)\nPurchase \nGo to (home)\nGo-to (from, to)\nWalk (to)\nIf (to \u2013 from) < 5km \n296\nDIMEA 2008\n3rd International Conference on Digital Interactive Media in Entertainment and Arts\nIf the distance is larger than 5km another meth\nto be substituted [Figure 3]. \nFigure 3: HTN Method 2 \nAn STN planning domain is a set of operatio\nmethods M. A STN planning problem is a 4-tu\nstate S0, the task network w called initial task\nSTN domain. A plan \ufffd \ufffd \ufffd\ufffd\ufffd\ufffd \ufffd \ufffd \ufffd\ufffd\ufffd is a soluti\nproblem if there is a way to decompose w into \u03c0\nand each decomposition is applicable in the ap\nthe world. The algorithm that is capable to \nnetworks into plans is called Total-forward-deco\n[9] or Partial-forward-decomposition (PFD). H\ncases where one does not want to use a forwa\nprocedure. HTN planning is generalization of S\ngives the planning procedure more freedom\nconstruct the task networks.  \nIn order to provide this freedom, a bookke\nis needed to represent constraints that the plann\nnot yet enforced. The bookkeeping is done by\nunenforced constraints explicitly in the task netw\nThe HTN generalizes the definition of a\nSTN. A task network is the pair \ufffd \ufffd \ufffd\ufffd\ufffd \ufffd\ufffd w\ntask nodes and C is a set of constraints. Eac\nspecifies a requirement that must be satisfied by\na solution to a planning problem.  \nThe definition of a method in HTN also\ndefinition used in STN planning. A HTN pla\nname, task, subtasks, and constraints. The s\nconstraints form the task network. The HTN plan\nidentical to STN planning domains except they u\ninstead of STN methods. \nCompared to classical planners the prim\nHTN planners is their sophisticated knowledge r\nreasoning capabilities. They can represent and \nnon-classical planning problems; with a good\nguide them, they can solve classical planning p\nmagnitude more quickly than classical or neoc\nThe primary disadvantage of HTN is the nee\nauthor to write not only a set of planning opera\nof methods. \n3.2.2 HTN Planning in building Game \nFor a HTN planning algorithm to be adap\ntrees we need to define the domain (set of H\noperators) which is the domain of the game. Thi\na knowledge representation of the rules of the\nenvironments and possible strategies of game pla\nIn this domain the game rules as well as kn\ntackle specific task are defined.   The implem\nTree building with HTN is called Tign\nimplementation \nuses \na \nprocedure \nsimila\ndecomposition, but adapted to build up a game \nDrive(to\nIf(t\nGo-to (from, to) \nIf(to \u2013 from) < 5km \nWalk (to) \nhod instance needs \nons O and a set of \nuple of the initial \nk network and the \nion for a planning \n\u03c0 if \u03c0 is executable \nppropriate state of \ndecompose these \nomposition (TFD) \nHowever there are \nard-decomposition \nSTN planning that \nm about how to \neeping mechanism \nning algorithm has \ny representing the \nwork. \na task network in \nwhere \ufffd is a set of \nh constraint in C \ny every plan that is \no generalizes the \nan is a 4-tuple of \nsubtasks and the \nnning domains are \nuse HTN methods \nmary advantage of \nrepresentation and \nsolve a variety of \nd set of HTNs to \nproblems orders of \nclassical planners. \ned of the domain \nators but also a set \nTrees\nted to build game \nHTN methods and \nis is in some sense \ne game, the game \nay.\nnown strategies to \nmentation of Game \nnum2 [9]. This \nar \nto \nforward-\ntree rather than a \nplan. The branches of the game tree rep\nthe methods. Tignum2 applies all met\nstate of the world to produce new\ncontinues recursively until there are n\nhave not already been applied to th\nworld.  \nIn the task network generated by Tignu\nactions will occur is determined by th\nBy listing the actions in the order \nnetwork can be \u201cserialized\u201d into a gam\n4. Case Based Reasoning in\n4.1 Case Based Reasoning\nCase-based reasoning (CBR) is a \nArtificial Intelligence (AI), both as \nproblems and as a basis for standalone \nCase-based reasoning is a paradigm\nsolving and learning that has became \napplied subfield of AI of recent yea\nintuition that problems tend to recur. I\nare often similar to previously en\ntherefore, that past solutions may be of\n[10].  \nCBR is particularly applicable to probl\navailable, even when the domain is n\nfor a deep domain model. Helpdesks,\nsystems have been the most successfu\nto determine a fault or diagnostic \nattributes, or to determine whether or\nrepair is necessary given a set of past s\nFigure 5: Game Tree built fr\nFigure 4: HTN to Game Tr\n)\nto \u2013 from) < 200km \npresent moves generated by \nthods applicable to a given \nw states of the world and \nno applicable methods that \nhe appropriate state of the \num2, the order in which the \ne total-ordering constraints. \nthey will occur, the task \nme tree [Figure 4] [Figure 5]. \nn Game Strategies\nwell established subfield of \na mean for addressing AI \nAI technology.\nm for combining problem-\none of the most successful \nars. CBR is based on the \nIt means that new problems \nncountered problems and, \nf use in the current situation \nlems where earlier cases are \nnot understood well enough \n, diagnosis or classification \nul areas of application, e.g., \nan illness from observed \nr not a certain treatment or \nolved cases [11]. \nrom HTN\nree Algorithm\nInteractive and Adaptable Media\n297\n3rd International Conference on Digital Interactive Media in Entertainment and Arts\nCentral tasks that all CBR methods have to deal with are [12]: \"to \nidentify the current problem situation, find a past case similar to \nthe new one, use that case to suggest a solution to the current \nproblem, evaluate the proposed solution, and update the system by \nlearning from this experience. How this is done, what part of the \nprocess that is focused, what type of problems that drives the \nmethods, etc. varies considerably, however\".  \nWhile the underlying ideas of CBR can be applied \nconsistently \nacross \napplication \ndomains, \nthe \nspecific \nimplementation of the CBR methods \u2013in particular retrieval and \nsimilarity functions\u2013 is highly customized to the application at \nhand. \n4.2 CBR and Games \nMany different implementations of CBR exist in games. \nCBR technology is nicely suited for recognizing complex \nsituations much easier and more elegant than traditional parameter \ncomparison or function evaluation. There are especially evident \ncases in real time strategies where different attack and defense of \nglobal strategies are nicely defined by CBR datasets and later used \nin the running games. Also intelligent bots behavior is also \nanother typical example. Depending on the number of enemy bots \nthe layout of the terrain and position of human players the CBR \nsystem finds the closest CBR case and employs that strategy \nagainst the human players which in prior evaluation was proved to \nbe highly efficient. \n5. Game Trees with AI Planning \u2013 Tic-tac-toe \nIn order to show the expressive power of AI Planning in \ndefining strategies for games, and the use of these plans to build \nGame Trees I implemented an algorithm that builds Game Trees \nfor the Tic-Tac-Toe game. \nThe game tree of Tic-Tac-Toe shows 255,168 possible \ngames of which 131,184 are won by X (the first player), 77904 \nare won by O and the rest 46,080 are draw [13]. All these games \ncan be derived from building a complete Game Tree.  \nEven though it is possible to build a complete game tree of \nTic-tac-toe it is definitely not an optimal solution. Many of the \nmoves in this tree would be symmetrical and also there are a many \nmoves that would be illogical or at least a bad strategy to even \nconsider.  \nSo what strategy should X (the first player) choose in order \nto win the game? \nThere are few positions that lead to certain victory. These \npositions involve simultaneous attack on two positions so the \nother player could not defend, basically the only trick in Tic-Tac-\nToe. \nFigure 6: Tic-tac-toe winning strategy positions \nPosition 1 leads to victory if the two of the three fields: top \nmiddle, bottom left corner and bottom right corner are free \n[Figure 6]. \nPosition 2 lead to victory if two of the three fields: top right \ncorner, bottom right corner and bottom middle are free [Figure ]. \nAnd in the third position if the two of center, middle top and \nmiddle left are available the position is a certain victory. \nThere are many different arrangements of the player\u2019s tokens \nthat give equivalent positions as these three positions. By using \nplanning we do not need to consider all possible layouts but just \nconsider these three similar to what a human would consider. \n The game starts from an empty table. \nThe two relevant strategies that would lead to these positions \nare to take one corner or to take the center [Figure 7]. \nFigure 7: Tic-tac-toe Two starting moves \nThe center position as we can see in the simulation results \nlead to a bigger number of victorious endings but it is also a \nstraight forward strategy with obvious defense strategy. \nAt this point we need to consider the moves of the opponent. \nIf we take the left branch the opponent moves can be a center, a \ncorner or a middle field. We also need to differentiate with a \nmove to a corner adjacent with our like top left or bottom right or \nacross the center to bottom right [Figure 8]. \nFigure 8: Tic-tac-toe opponent response to corner move \nIn cases one and two, we have a clear path to executing \nstrategy 3 so we need to capture the diagonally opposite field. \nAnd as for the third case the best way to go is to capture the center \nand go for strategy 1 or 2 depending of the opponent\u2019s next move.  \nFigure 9: Tic-tac-toe move 2 after corner opening \nThe first move leads to certain victory, O will have to go to \nthe center and X will achieve strategy 3 [Figure 9]. The second \nmove is a possible way to strategy 3 if O makes a mistake in the \nnext loop, so X goes to the opposite corner. For the third case \nsince O is playing a valid strategy the only move that leaves a \npossible mistake from O would be to take the center and wait for \nO to go to the middle and then achieve strategy 1 or 3 which will \nbe a symmetric situation to the one that we will find if we \nbranched with the center. \nFigure 10: Tic-tac-toe opponent response to center move \nIf we go back to the second branch [Figure 10], a possible \nway for the second player to engage is corner or middle. The first \n298\nDIMEA 2008\n3rd International Conference on Digital Interactive Media in Entertainment and Arts\nmove is a valid strategy for O and can be mee\ncorner move from X to try a mistake from O in \nthe same as in the third case above from the pre\nanother move would be go to the middle wh\nachieves strategy 1 or 2.  \nFigure 11: Tic-tac-toe Move 2 after cent\nThe fist move will lead to win if O moves \ndraw if it goes for the corners [Figure 11]. In t\nhas to block the lower left corner which leave\nmiddle left or corner left which are strategy 1 and\nTo sum the strategies for the planning, first \ncorner strategy for the beginning. Then for the ce\nthe corners with the particularly the one oppo\nholds. If the center is empty for the second strate\nwe go for the opposite corner. After this point w\nopponent or try to implement strategies 1, 2 or\nvictory.  \nPlan 1: Take center  \nPreconditions: Center empty \nPlan 2: Take corner  \nPreconditions: All corners empty \nPlan 3: Take corner after center \nPreconditions: We have center take corner oppos\nopponent has \nPlan 4: Take diagonal corner \nPreconditions: We have a corner, the opponent ha\n the corner opposite to the one we have is free. \nPlan 5: Block \nPrecondition: The opponent has tree tokens in a r\nagonal \nPlan 6: Win \nPreconditions: We have two tokens in a row, colu\nnd the third place is free \nPlan 7: Tie \nPreconditions: If all places are taken, it\u2019s a tie. \n5.1 Hierarchical Task Network \nTop level task is Play [Figure 12]. This is a \ncan be derived into: Win, Block, Tie or Sear\nSearch for plan is derived to both Plan 1 and Pla\nPlan 4, which later leads to a call for the oppon\nrecursive call to Play. \nFigure 12: Tic-tac-toe HT\net with a opposite \nthe future exactly \nevious branch, and \nhere X eventually \nter opening\nto the middle or a \nthe second case O \nes X to go for the \nd 2.\nwe have center or \nenter we try to get \nosite to the one O \negy we go for it or \nwe either block the \nr 3 which lead to \nsite to the  one the \nas the ce\u2212nter and\nrow, colu\u2212mn or di\nmn or dia\u2212gonal a\na complex task and \nrch for Plan. The \nan 2 or Plan 3 and \nnent\u2019s move and a \nTN\nThis HTN when executed will re\ngame scenarios. By creating nodes from\nthem with branches with the move of t\ntree for the Tic-tac-toe game over whi\nalgorithm. \nThis set up with 7 plans with 3 ta\nfor Tic-tac-toe which considers all pos\nplayer with only 457 games, 281 of w\nand 0 where the second opponent w\nreduction over the 255, 168 possible g\ntree. These reductions can be very use\ncomputing capabilities but also we pr\nthat planning can be very efficient if d\ntrees by applying reasoning very \nreasoning. \nFurther improvements to the gam\nthe opponents moves are also planned\nall the meaningless and symmetrical m\n6. Game AI in Monopoly \n6.1 Overview of the AI Imp\nThe AI agent is responsible for \nplayers in the game. The core principle\na Game Tree with all the sensible move\nmake from the current point of time\nminimax algorithm the agent selects t\nwould bring the computer player mo\nwith the highest probability. Building \nthat would be big enough to consider \nis obstructed by the vastness of poss\nwith all the possible random landings \nnodes of the game tree exponentially\ntackle this problem the AI agents \ndiscussed technologies: Case Based Re\nThe technologies are employed \nFirst the agent searches the CBR datab\nlargest similarity with the current state\nassociated with a playing strategy. Th\nthat the planner needs to build plans f\nconsecutive player moves that bring th\nway only moves that are part of that str\nbeing a small fraction of the overall po\nedges of the game tree at each level dec\nAt each level of the game tree the\nof a single player. After the strateg\nconsidered the response to those strate\nby the opponent(s). The move of the \nprobability distribution of the dice as \nplayer. A more general strategy needs\nopponent\u2019s (human player) moves sin\nthe expertise of the opponent. This ge\nmore plausible moves than the focused\nAfter covering all opponents t\ndeducting a feature move of the com\nCBR selected plan strategy. After \nstrategies and reaching a reasonable s\ninto account the memory limits an\nprobabilities that the move is possible\nthe dice the building of the Game Tre\nalgorithm searches the Game Tree \nfavorable move for the AI player usi\nThe process is repeated each time the A\nesult with plans for possible \nm each position and linking \nthe player we create a game \nich we can run the minimax \narget strategies creates a tree \nssible moves for the second \nwhich X wins 176 are draw \nwins. This is a significant \names with a complete game \neful for devices with limited \nrove a very important point \ndesigning meaningful game \nsimilar to human player \nme tree are also possible if \nd, in other words if we drop \nmoves of the opponent. \nplementation\nthe moves of the artificial \ne of the AI agent is building \nes that all the players would \ne forward. Then using the \nthe move that in the future \nost favorable game position \na Game Tree in this game \nsufficient number of moves \nsible moves in combination \nof the dice. The number of \ny grows at each level. To \nincorporates two already \neasoning and AI Planning. \nin the following manner. \nbase to find the case with the \ne of the board. This case is \nhe strategy consists of goal \nfor, and the plans consist of \nhe player to that goal. This \nrategy are considered, those \nossible moves the number of \ncreases immensely. \ne model considers the moves \ngies of the AI player are \negies needs to be considered \nopponent(s) depends of the \nwell as the strategy of the \ns to be implemented for the \nnce we cannot be aware of \neneral strategy would bring \nd strategy of the AI player.  \nthe agent comes back to \nmputer player by using the \ncreating several loops of \nsize of a Game Tree taking \nnd the rapidly decreasing \ne due to the distribution of \nee stops. Then the minimax \nand decides on the most \ning the minimax algorithm. \nAI player is up. \nInteractive and Adaptable Media\n299\n3rd International Conference on Digital Interactive Media in Entertainment and Arts\nBuying, auctioning and trading game moves are always \naccompanied by return of investment calculations in making the \nplans. These calculations represent adaptation of the more general \nplanning associated with the cases in the CBR database. These \nadaptations are necessary due to the fact that the cases do not \nidentically correspond to the situation on the table. In addition \ncalculating the game position value of each node of the game tree \nis done by heuristic functions that incorporate economic \ncalculations of net present value, cash, and strategic layout and so \non. For example railroads in monopoly are known to be \nstrategically effective because they bring constant income even \nthough the income can be smaller than building on other \nproperties.  \n6.2 Details on the CBR Implementation \nThe implementation of the CBR is by using the JColibri2 \nplatform.  JColibri2 is an object-oriented framework in Java for \nbuilding CBR systems that is an evolution of previous work on \nknowledge intensive CBR [14].  \nFor this implementation we need to look into three particular \nclasses of the JColibri2 platform. The StandardCBRApplication, \nConnector, CBRQuery. For a JColibri2 implementation the \nStandardCBRApplication interface needs to be implemented.  \nThe CBR cycle executed accepts an instance of CBRQuery. \nThis class represents a CBR query to the CBR database. The \ndescription component (instance of CaseComponent) represents \nthe description of the case that will be looked up in the database. \nAll \ncases \nand \ncase \nsolutions \nare \nimplementing \nthe \nCaseComponent interface. \nThe JColibri2 platform connects to the CBR database via a \nConnector class. Each connector implements all the necessary \nmethods for accessing the database, retrieval of cases, storing and \ndeletion of cases. This implementation uses a custom XML \nstructure for holding the CBR cases. Since the game will not \nupdate the CBR database only read it, a XML solution satisfies \nthe needs. The XML file to a certain extent is similar to the XML \nrepresentation of the board. We are interested in finding one \nCBRCase that is the most similar case to the situation in the game \nat the time of the search. This procedure is done in the cycle \nmethod of the CBRApplication. The JColibri2 CBR comparison is \ndone by Nearest Neighbor (NN) search method.  \nJColibri2 offers implementations for NN search algorithms \nof simple attributes. These implementations are called local \nsimilarities. For complex attributes like in our case global \ncustomized similarity mechanisms need to be implemented. \nThe MonopolyDescription class [Figure 13] is basically a \nserialization of the GameState. It holds all the information about \nthe state of the board, the players, their amount of cash etc.  \nFigure 13: Class diagram of the Monopoly Case component \nmodels \nOn the other hand the MonopolySolution class holds the \nthree particular attributes that are needed for the planning, the \nplanning Domain, State and TaskList. \nThe game is implemented by using the Model-View-\nController software development pattern. The controller is \nresponsible for implementing the game rules and handling all of \nthe events in the game like roll of dice, input commands for \ntrading, auctioning and etc from the players. The View layer is \nresponsible for displaying the board and all of the input widgets \non to the game screen, and the models are data structures \nrepresenting the game state [Figure 14]. \nFigure 14: Class diagram of the Monopoly models \n6.2.1 Complex Similarity representation in CBR \nThe similarity measurement part of the Nearest Neighbor \nalgorithm JColibri2 is implemented by implementing the \nLocalSimiralrityFunction \nand \nthe \nGlobalSimiralityFunction \ninterface. A local similarity function is applied to simple attributes \nby the NN algorithm, and a global similarity function is applied to \ncompound attributes. In the case of our implementation the \nattributes of the MonopolyDescription are compound attributes \ndescribing the state of the board, number of players, amount of \ncash for every player and etc. Since MonopolyDescription is a \ncustom CaseComponent a global similarity function needs to be \nimplemented to accurately find the distance between different \nCBR cases. \nThe similarity mechanism is inseparable core element of the \nCBR system. This mechanism represents how the CBR decides \nwhich strategy is best suited for the particular situation by \n300\nDIMEA 2008\n3rd International Conference on Digital Interactive Media in Entertainment and Arts\ncalculating the distance or similarity to other cases in the \ndatabase.  \nFor the monopoly implementation we need to consider \nseveral basic strategies. Monopoly is based on investing in \nproperties and receiving revenues from those investments. One of \nthe basic strategies of the game is to build a set of properties that \nwill bring constant income larger than the one of the opponents. \nSo in time the opponents will have to declare bankruptcy. But on \nthe other hand over investment can lead to too stretched resources \nwith low income that will eventually drove the player to \nbankruptcy. To decide on these two we need a clear separation \ninto two groups of cases in the CBR database. The first group of \ncases will represent a situation on the board where the player has \nsignificant income per loop formed of one or more color group \nproperties, maybe railroads, some buildings on them and so on. It \nis important to note that in this case the player is better situated \nthan his opponents so he only needs to survive long enough to win \nthe game. In the other group of cases either the opponent is not \nwell positioned on the board or its opponents are better situated. \nIn this case further investments are necessary to improve the \nsituation so the player can have a chance of winning in the long \nrun.  \nThese metrics can be owning color groups, valuing groups of \nrailroads, evaluating the other opponents as well, and considering \nthe amount of cash. As it is obvious in monopoly the number of \nstreets is not as nearly as important as the combination of streets \nthe player owns. It is also important to note that one CBR case \ndoes not hold only a single strategy in place, but its solution can \nhave multiple different strategic goals. For example one CBR case \nmight simultaneously say buy this land to form a color group but \nalso trade some other unimportant property to increase cash \namount.  \nThe cases do not represent all possible combinations of board \npositions. They are only representation of typical game scenarios. \nThe CBR Case solutions do not give exact instructions in general \nbut rather strategic goals. For example one CBR Solution might \nsay trade the streets that you only have one of each for the ones \nthat you have two of that color already. Then the planner based on \nthe situation on the board needs to decompose this high level task \nto a low level operations. Like offer \"Mediterranean Avenue\" for \n\"Reading Railroad\" and offer $50. The exact amounts and actual \nstreets are left to the planer to evaluate.  \nThe monopoly CBR database is currently in development on \na monopoly clone game called Spaceopoly. The cases are \narchitected based on human player experience and knowledge. \nThere is a plan of making a number of slightly different strategies \nthat differ on the style of playing and then running simulation \ntests that would determine the particular validity of each database \nas well as validity of certain segments of the strategy or even \nparticular cases in the database.  \nThe actual execution of the strategies will not differ from \nstrategy to strategy since the plan execution is more related to the \nstructure and rules of the game than to the actual playing strategy. \n6.3 Details on the Planning Implementation \nFor the purpose of planning this implementation uses a \nmodification of the JSHOP2 planner. The Java Simple \nHierarchical Ordered Planner 2 is a domain independent HTN \nplanning system [15].  \nJSHOP2 uses ordered task decomposition in reducing the \nHTN to list of primitive tasks which form the plans. An ordered \ntask decomposition planner is an HTN planner that plans for tasks \nin the same order that they will be executed. This reduces the \ncomplexity of reasoning by removing a great deal of uncertainty \nabout the world, which makes it easy to incorporate substantial \nexpressive power into the planning algorithm. In addition to the \nusual HTN methods and operators, the planners can make use of \naxioms, can do mixed symbolic/numeric conditions, and can do \nexternal function calls. \n In order for the JSHOP2 planer to generate plans it needs \ntree crucial components: Domain, State and Tasks. The Domain \ndefines all the functionalities that the particular domain offers. \nThese are simple and complex tasks. The complex tasks also \ncalled methods create the hierarchy with the fact that they can be \nevaluated by simple tasks of other complex tasks. This is how a \nhierarchical structure of tasks is formed. The problem reduction is \ndone by reducing the high level complex tasks to simpler until all \nthe tasks are primitive. The list of primitive tasks forms the plan. \nThe State represents the state of the system. It is a simple \ndatabase of facts that represent the state of the system. The State \nis necessary to determine the way the problems or tasks are \nreduced to their primitive level. The reduction is done by \nsatisfying different prerequisites set in the methods; these \nprerequisites are defined in the state. The Tasks are high level \ntasks or methods defined in the Domain. The planner based on the \nState and the goals selects one or more high level tasks that need \nto be reduced to plans [Figure  15]. \nFigure 15: Diagram of a Planner \nThe plans then generate the game moves. The number of \nmoves generated by the plans is just a fraction of the possible \nmoves at that point. This reduces the game tree providing the \nopportunity to generate smaller and deeper game trees and making \nmore efficient decisions in general.  \n7. Conclusion \nEven though the results from the CBR database are not \ncomplete at this time partial strategies are implemented as cases \nand recognized during game play by the CBR system. These \nsmaller local strategies coupled with more global higher level \nstrategies that are particularly important at the beginning of the \ngame would form a complete CBR database and represent a \nknowledge engineered style of playing of the AI player.  \nThe AI Planning approach is a proven method by the tic-tac-\ntoe experiment and is suitable for implementing the strategies \nassociated with the CBR cases. \nThis approach in general benefits from both technologies, \nCBR as well as AI Planning and comprises an elegant solution. \nEven though AI Planning can be enough as a single technology \nfor some simpler problems like tic-tac-toe the complexity of \nMonopoly would mean that the Planner would have to incorporate \nCore Planner \nTasks\nPlan\nState\nInteractive and Adaptable Media\n301\n3rd International Conference on Digital Interactive Media in Entertainment and Arts\nlarge and complex domain and a very big state model. The CBR \napplication helps reduce this complexity by focusing the planning \non smaller domain of the game. Basically the CBR reduces the \noverall goal of the play (wining the game) to smaller more \nconcrete goals suitable to the particular state of the game, thus \nreducing the need for global planning strategies and complex \nplanning domain.  \nFurthermore this symbiosis of technologies gives way for \nmore precise and finely tuned strategies which can be difficult to \ninclude into global plan for the whole game. One simple example \nfor the Monopoly game would be this: Sometimes it\u2019s better to \nstay in jail because rolling double increases the probability of \nlanding on some field (two, four, six, eight, ten or twelve steps \nfrom the jail) that can be of great importance to the rest of the \ngame. These and similar small local strategies can be easily \nrecognized by similar cases in the CBR database.  \nIn other words the system is flexible enough so that new \nstrategies can be incorporated easily missing strategies can be also \nrecognized by the distance metrics as well as wrong assumptions \nin the strategies can be easily recognized. \nOne other important property of the system is that is highly \nconfigurable. The game its self can be diversely different \ndepending on the configuration of the board. Even though the \nplatform is restricted to Monopoly type of games, changing the \nlayout and values of the fields effectively brings completely \ndifferent properties of the game. In addition the CBR database \nrepresents the entire experience of the AI Player. It can be filled \nwith rich set of strategies or even configured with different flavors \nof difficulties of play, this of course coupled with the domain of \nthe planner which can differ from a case to a case as well.  \n8. Future Work \nFurther exploration of this technology would go towards \ncomplete implementation of an AI aware agent for monopoly. \nInitial results from the local cases with more specific strategies \nshow CBR as a capable tool for representing expertise in playing \nthe game. Completing the more general strategies and coupling \nthem with the planning domain will give precise results on the \nbenefits from this architecture. \nThere is also need for exploring the planning of strategies of \nopponents. This task is to some extent different because we \ncannot always expect the opponent to select the best move we \nthink. In the Tic-tac-toe example all possible moves of the \nopponent were taken into consideration, if we used the same \nplanner for the opponent only tie games would result from the \ngame tree. In other words mistakes of the players also need to be \nconsidered.  \nThe CBR Platform brings other functionalities well worth of \nexploring as well. The revision stage of the JColibri2 platform is \nbasically capable of fine tuning strategies or even developing new \nstrategies for the games. A well written underlying AI planning \nmodel with a capable feedback of the game tree evaluation back \nto the CBR revision capability can be an interesting concept in \nautomatic experience acquisition for the AI model. \nThere are also many other fields were combined CBR and \nplanning approach can be incorporated into a problem solution. \nThis combination is analogous in a big extent to a human way of \nreasoning. People in addition to logic of reasoning in situations \nwith lack of information rely to planning strategies and prior \nexperience, exactly the intuition behind CBR \u2013 AI Planning \narchitecture.  \n9. ACKNOWLEDGMENTS \nWe would like to thank Prof. Sofia Tsekeridou for her \ninvolvement in the valuable discussions we had on the topic of \nCBR. \n10. REFERENCES \n[1]\nMinimax. Wikipedia. [Online] [Cited: April 23, 2008.] \nhttp://en.wikipedia.org/wiki/Minimax. \n[2]\nVon Neumann, J: Zur theorie der gesellschaftsspiele Math. \nAnnalen. 100 (1928) 295-320 \n[3]\nAutomated Planning. Wikipedia. [Online] [Cited: April 23, \n2008.] http://en.wikipedia.org/wiki/Automated_planning. \n[4]\nSanchez-Ruiz, Antonio, et al. Game AI for a Turn-based \nStrategy Game with Plan Adaptation and Ontology-based \nretrieval.\n[5]\nK. Erol, J. Hendler, and D. Nau (1994). Semantics for \nhierarchical task-network planning. Technical Report TR-94-\n31, UMIACS. \n[6]\nSmith, S. J. J. and Dana S. Nau, T. A. Throp. A Planning \napproach decrarer play in contract bridge. Computational \nIntelligence. 1996, Vol. 12, 1. \n[7]\nOne Jump Ahead: Challenging Human Supremacy in \nCheckers. J.Schaeffer. s.l. : Springer-Verlag, 1997. \n[8]\nIBM. How Deep Blue works. [Online] 1997. [Cited: April \n23, 2008.] \nhttp://www.research.ibm.com/deepblue/meet/html/d.3.2.html\n[9]\nGhallab, Malik, Nau, Dana and Traverso, Paolo.\nAutomated Planning theory and practice. s.l. : Morgan \nKaufmann Publishers, May 2004. ISBN 1-55860-856-7. \n[10] Case Based Reasoning. Experiences, Lessons and Future. \nLeake, David. s.l. : AAAI Press. MIT Press., 1997. \n[11] Applying case-based reasoning: techniques for enterprise \nsystems. Watson, I. San Francisco, CA, USA : Morgan \nKaufmann Publishers Inc., 1998. \n[12] Plaza, A. Aamodt and E. Case-based reasoning: \nFoundational issues, methodological. AI Communications. \n1994, 7(i). \n[13] Tic-tac-toe. Wikipedia. [Online] [Cited: April 23, 2008.] \nhttp://en.wikipedia.org/wiki/Tic-tac-toe. \n[14] D\u00edaz-Agudo, B. and Gonz\u00e1lez-Calero, P. A. An \narchitecture for knowledge intensive CBR systems. Advances \nin Case-Based Reasoning \u2013 (EWCBR\u201900). New York : \nSpringer-Verlag, Berlin Heidelberg, 2000. \n[15] Ilghami, Okhtay and Nau, Dana S. A General Approach to \nSynthesize Problem-Specific Planners. 2003. \n302\nDIMEA 2008\n3rd International Conference on Digital Interactive Media in Entertainment and Arts\n",
    "pdf_url": "/media/Article_01_579dcff397154b40a71fa3f5d8df29b7.pdf",
    "references": [
      "[1]",
      "Minimax. Wikipedia. [Online] [Cited: April 23, 2008.] ",
      "http://en.wikipedia.org/wiki/Minimax. ",
      "[2]",
      "Von Neumann, J: Zur theorie der gesellschaftsspiele Math. ",
      "Annalen. 100 (1928) 295-320 ",
      "[3]"
    ],
    "publication_date": "2023-11-05T00:00:00",
    "corrected": 0,
    "_id": "lvpca40B7ffmqzjIiYmw"
  },
  {
    "titre": "Semantic Analysis and Classification of Emails through Informative Selection of Features and Ensemble AI Model",
    "resume": "The emergence of novel types of communication, such as email, hasbeen brought on by the development of the internet, which radicallyconcentrated the way in that individuals communicate socially andwith one another. It is now establishing itself as a crucial aspect ofthe communication network which has been adopted by a varietyof commercial enterprises such as retail outlets. So in this researchpaper, we have built a unique spam-detection methodology basedon email-body sentiment analysis. The proposed hybrid model isput into practice and preprocessing the data, extracting the proper-ties, and categorizing data are all steps in the process. To examinethe emotive and sequential aspects of texts, we use word embed-ding and a bi-directional LSTM network. this model frequentlyshortens the training period, then utilizes the Convolution Layer toextract text features at a higher level for the Bi LSTM network. Ourmodel performs better than previous versions, with an accuracyrate of 9798%. In addition, we show that our model beats not justsome well-known machine learning classifiers but also cutting-edgemethods for identifying spam communications, demonstrating itssuperiority on its own. Suggested Ensemble models results areexamined in terms of recall, accuracy, and precision",
    "auteurs": [
      "Khushbu Doulani",
      "GRU",
      "Shivangi Sachan",
      "Khushbu Doulani",
      "Mainak Adhikari",
      "Noida",
      "Decision Trees",
      "Bi-LSTM",
      "GRU",
      "BiLSTM+GRU"
    ],
    "institutions": [
      "Department of CSEIIIT Lucknow Lucknow, UP, ",
      "Mainak Adhikari Department of CSEIIIT LucknowUP, "
    ],
    "mots_cles": [
      " Dataset",
      " KNN",
      " Gaussian Naive Bayes",
      " LSTM",
      " SVM",
      " Bidirectional "
    ],
    "texte_integral": "Semantic Analysis and Classification of Emails through\nInformative Selection of Features and Ensemble AI Model\nShivangi Sachan\u2217\nDepartment of CSE\nIIIT Lucknow\nLucknow, UP, India\nmcs21025@iiitl.ac.in\nKhushbu Doulani\nVardhaman College of Engineering\nHyderabad, India\nkhushidoulani@gmail.com\nMainak Adhikari\nDepartment of CSE\nIIIT Lucknow\nUP, India\nmainak.ism@gmail.com\nABSTRACT\nThe emergence of novel types of communication, such as email, has\nbeen brought on by the development of the internet, which radically\nconcentrated the way in that individuals communicate socially and\nwith one another. It is now establishing itself as a crucial aspect of\nthe communication network which has been adopted by a variety\nof commercial enterprises such as retail outlets. So in this research\npaper, we have built a unique spam-detection methodology based\non email-body sentiment analysis. The proposed hybrid model is\nput into practice and preprocessing the data, extracting the proper-\nties, and categorizing data are all steps in the process. To examine\nthe emotive and sequential aspects of texts, we use word embed-\nding and a bi-directional LSTM network. this model frequently\nshortens the training period, then utilizes the Convolution Layer to\nextract text features at a higher level for the BiLSTM network. Our\nmodel performs better than previous versions, with an accuracy\nrate of 97\u201398%. In addition, we show that our model beats not just\nsome well-known machine learning classifiers but also cutting-edge\nmethods for identifying spam communications, demonstrating its\nsuperiority on its own. Suggested Ensemble model\u2019s results are\nexamined in terms of recall, accuracy, and precision\nCCS CONCEPTS\n\u2022 Computer systems organization \u2192 Embedded systems; Re-\ndundancy; Robotics; \u2022 Networks \u2192 Network reliability.\nKEYWORDS\nDataset, KNN, Gaussian Naive Bayes, LSTM, SVM, Bidirectional\nLSTM, GRU, Word-Embeddings, CNN\nACM Reference Format:\nShivangi Sachan, Khushbu Doulani, and Mainak Adhikari. 2023. Semantic\nAnalysis and Classification of Emails through Informative Selection of\nFeatures and Ensemble AI Model. In 2023 Fifteenth International Conference\non Contemporary Computing (IC3-2023) (IC3 2023), August 03\u201305, 2023, Noida,\nIndia. ACM, New York, NY, USA, 7 pages. https://doi.org/10.1145/3607947.\n3607979\n\u2217Both authors contributed equally to this research.\nPermission to make digital or hard copies of all or part of this work for personal or\nclassroom use is granted without fee provided that copies are not made or distributed\nfor profit or commercial advantage and that copies bear this notice and the full citation\non the first page. Copyrights for components of this work owned by others than the\nauthor(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or\nrepublish, to post on servers or to redistribute to lists, requires prior specific permission\nand/or a fee. Request permissions from permissions@acm.org.\nIC3 2023, August 03\u201305, 2023, Noida, India\n\u00a9 2023 Copyright held by the owner/author(s). Publication rights licensed to ACM.\nACM ISBN 979-8-4007-0022-4/23/08...$15.00\nhttps://doi.org/10.1145/3607947.3607979\n1\nINTRODUCTION\nOver the past few years, a clear surge of both the amount of spam-\nmers as well as spam emails. This is likely due to a fact that the\ninvestment necessary for engaging in the spamming industry is\nrelatively low. As a result of this, we currently have a system that\nidentifies every email as suspicious, which has caused major expen-\nditures in the investment of defense systems [12]. Emails are used\nfor online crimes like fraud, hacking, phishing, E-mail bombing, bul-\nlying, and spamming. [16]. Algorithms that are based on machine\nlearning (ML) are now the most effective and often used approach to\nthe recognition of spam. Phishing, which is defined as a fraudulent\nattempt to acquire private information by masquerading as a trust-\nworthy party in electronic communication, has rapidly advanced\npast use of simple techniques and the tactic of casting a wide net;\ninstead, spear phishing uses a variety of sophisticated techniques\nto target a single high-value individual. Other researchers used NB,\nDecision Trees, and SVM to compare the performance of supervised\nML algorithms for spam identification [6]. Spam emails clog up re-\ncipients\u2019 inboxes with unsolicited communications, which frustrate\nthem and push them into the attacker\u2019s planned traps [7]. As a re-\nsult, spam messages unquestionably pose a risk to both email users\nand the Internet community. In addition, Users may occasionally\nread the entire text of an unsolicited message that is delivered to\nthe target users\u2019 inboxes without realizing that the message is junk\nand then choosing to avoid it. Building a framework for email spam\ndetection is the aim of this project. In this approach, we combine the\nWord-Embedding Network with the CNN layer, Bi-LSTM, and GRU\n(BiLSTM+GRU). CNN layers are used to speed up training time\nbefore the Bi-LSTM network, and more advanced textual character-\nistics are extracted with the use of this network in comparison to\nthe straight LSTM network, in less time. Gated recurrent neural net-\nworks (GRUs) are then added because they train more quickly and\nperform better for language modeling. To evaluate and investigate\nvarious machine learning algorithms for predicting email spam,\nand develop a hybrid classification algorithm to filter email spam\nbefore employing an ensemble classification algorithm to forecast\nit. To put an innovative technique into practice and compare it to\nthe current method in terms of various metrics. Ensemble learn-\ning, a successful machine learning paradigm, combines a group of\nlearners rather than a single learner to forecast unknown target\nattributes. Bagging, boosting, voting, and stacking are the four main\ntypes of ensemble learning techniques. To increase performance,\nan integrated method and the combining of two or three algorithms\nare also suggested. Extraction of text-based features takes a long\ntime. Furthermore, it can be challenging to extract all of the crucial\ninformation from a short text. Over the span associated with this\n181\nIC3 2023, August 03\u201305, 2023, Noida, India\nSachan et al.\nresearch, we utilize Bidirectional Large Short-Term Memories (Bi-\nLSTM) in conjunction with Convolutional Neural Networks (CNN)\nto come up with an innovative method to the detection of spam.\nBagging and boosting approaches were widely preferred in this\nstudy. Contribution and paper organization is as follows: section 1.1\ndescribes literature study, section 1.2 describe motivation for this\nresearch work, section 2 sketches procedure of details implemen-\ntation, Section 3 present experimental setup, dataset description\nand evaluation metrics, and section 4 summarizing outcomes of the\nexperiment.\n1.1\nRelated Work\nEmail is indeed the second most frequently utilized Internet appli-\ncation as well as the third most common method of cyberbullying,\nclaims one study. Cybercriminals exploit it in a number of ways,\nincluding as sending obscene or abusive messages, adding viruses\nto emails, snatching the private information of victims, and ex-\nposing it to a broad audience. Spam letters made up 53.95% of all\nemail traffic in March 2020. We examine three main types of un-\nlawful emails in our study. First are fake emails, which are sent\nto manipulate recipients to submit sensitive information. The sec-\nond as being cyberbullying\u2019s use of harassing emails to threaten\nindividuals. Suspicious emails that describe illegal activities belong\nto the third category. Many researchers have earlier contributed\nmassively to this subject. The researcher claims there is some proof\nthat suspicious emails were sent before to the events of 9/11. [14].\nWhen it comes to data labeling, there are also convinced rule-based\napproaches and technologies ( like VADER) that are used, even\nthough their efficiency of the are together is adversely affected. A\nhidden layer, which itself is essential for vectorization, is the top\nlayer of the model. We use oversampling methods for this minority\nclass because of the absence of data. Sampling techniques can help\nwith multicollinearity, but they have an impact on simulation re-\nsults. Oversampling causes data to be randomly repeated, which\naffects test data because dividing data may result in duplicates. Un-\ndersampling may result in the loss of some strong information. In\norder to advance email research, it is crucial to provide datasets on\ncriminal activity. P. Garg et al. (2021) [5], which revealed that spam\nin an email was detected in 70 percent of business emails, spam was\nestablished as an obstacle for email administrators. Recognizing\nspam and getting rid of it were the primary concerns, as spam can\nbe offensive, may lead to other internet sites being tricked, which\ncan offer harmful data, and can feature those who are not particu-\nlar with their content using NLP. To select the best-trained model,\neach mail transmission protocol requires precise and effective email\nclassification, a machine learning comparison is done. Our study\nhas suggested that innovative deep learning outperforms learning\nalgorithms like SVM and RF. Current studies on the classification\nof emails use a variety of machine learning (ML) techniques, with\na few of them focusing on the study of the sentiments consisted of\nwithin email databases. The lack of datasets is a significant obstacle\nto email classification. There are few publicly accessible E-mail\ndatasets, thus researchers must use these datasets to test their hy-\npotheses or gather data on their own. Authors[15] describe supplied\ntwo-phased outlier detection models to enhance the IIOT network\u2019s\ndependability. Artificial Neural Network, SVM, Gaussian NB, and\nRF (random forest) ensemble techniques were performed to forecast\nclass labels, and the outputs were input into a classifying unit to\nincrease accuracy. A method for content-based phishing detection\nwas presented by the authors in [2], to classify phishing emails,\nthey employed RF. They categorize spam and phishing emails. They\nenhanced phishing email classifiers with more accurate predictions\nby extracting features. They showed some effective Machine learn-\ning spam filtering techniques. When the PCA method is used, it will\nlower the number of features in the dataset. The collected features\ngo through the PCA algorithm to reduce the number of features.\nThe PCA method is used to make a straightforward representation\nof the information which illustrates the amount of variability there\nis in the data. The authors of [20] presented the Fuzzy C-means\nmethod for classifying spam email. To stop spam, they implemented\na membership threshold value. A methodology to identify unla-\nbeled data was put forth by the authors of [1] and applied motive\nanalysis to the Enron data collection. They divided the data into\ncategories that were favorable, negative, and neutral. They grouped\nthe data using k-means clustering, an unsupervised ML technique\nand then classified it using the supervised ML techniques SVM and\nNB. Hina, Maryam, and colleagues (2021) implemented Sefaced:\nDeep learning-based semantic analysis and categorization of e-mail\ndata using a forensic technique. For multiclass email classification,\nSeFACED employs a Gated Recurrent Neural Network (GRU) based\non Long Short-Term Memory (LSTM). Different random weight ini-\ntializations affect LSTMs [9]. Zhang, Yan, et al.(2019) Experiments\non three-way game-theoretic rough set (GTRS) email spam filter-\ning show that it is feasible to significantly boost coverage without\ndecreasing accuracy [23]. According to Xia et al. [22], SMS spam\nhas been identified using machine learning model such as naive\nbayes , vector-space modeling, support vector machines (SVM),\nlong selective memory machines (LSTM), and convolutional neural\nnetworks including every instance of a method for categorizing\ndata. Elshoush, Huwaida, et al. (2019) Using adaboost and stochastic\ngradient descent (sgd) algorithms for e-mail filtering with R and\norange software spam [3]. Orange software was used to create the\nclassifications, which included Adaboost and SGD. The majority of\nresearchers focused on text-based email spam classification meth-\nods because image-based spam can be filtered in the early stages\nof pre-processing. There are widely used word bag (BoW) model,\nwhich believes that documents are merely unordered collections\nof words, is the foundation for these techniques. Kumaresan [11]\nexplains SVM with a cuckoo search algorithm was used to extract\ntextual features for spam detection. Renuka and Visalakshi made\nuse of svm [17] spam email identification, followed by selecting\nfeatures using Latent Semantic Indexing (LSI). Here we have used\nlabeled dataset to train the hybrid classifier. We used TF-IDF for\nfeature extraction [20] and Textual features for spam detection\nwere extracted using SVM and a cuckoo search algorithm. [4] for\nfiltering out the spam email. Combining the integrated strategy to\nthe pure SVM and NB methods, overall accuracy is really improved.\nMoreover, accurate detection for spam email has been proposed\nusing the Negative Selection Algorithm (NSA) and Particle Swarm\nOptimization\u2019s (PSO) algorithm. PSO is used in this instance to\nimprove the effectiveness of the classifier.\n182\nSemantic Analysis and Classification of Emails through Informative Selection of Features and Ensemble AI Model\nIC3 2023, August 03\u201305, 2023, Noida, India\n1.2\nMotivation and Novelty\nEmail is most common form of communication between people\nin this digital age. Many users have been victims of spam emails,\nand their personal information has been compromised. The email\nClassification technique is employed to identify and filter junk\nmail, junk, and virus-infected emails prior to reach a user\u2019s inbox.\nExisting email classification methods result in irrelevant emails\nand/or the loss of valuable information. Keeping these constraints\nin mind, the following contributions are made in this paper:\n\u2022 Text-based feature extraction is a lengthy process. Further-\nmore, extracting every important feature from text is difficult.\nIn this paper, we show how to employ GRU with Convo-\nlutional Neural Networks and Bidirectional-LSTM to find\nspam.\n\u2022 Used Word-Embeddings, BiLSTM, and Gated Recurrent Neu-\nral Networks to examine the relationships, sentimental con-\ntent, and sequential way of email contents.\n\u2022 Applied CNN before the Bi-LSTM network, training time can\nbe sped up. This network can also extract more advanced\ntextual features faster than the Bi-LSTM network alone when\ncombined with the GRU network.\n\u2022 We use Enorn Corpora datasets and compute precision, re-\ncall, and f-score to assess how well the suggested technique\nperforms. Our model outperforms several well-known ma-\nchine learning techniques as well as more contemporary\nmethods for spam message detection.\n2\nPROPOSED SYSTEM ARCHITECTURE AND\nMODEL\nE-mail is a valuable tool for communicating with other users. Email\nallows the sender to efficiently forward millions of advertisements\nat no cost. Unfortunately, this scheme is now being used in a variety\nof organizations. As a result, a massive amount of redundant emails\nis known as spam or junk mail, many people are confused about the\nemails in their E- Mailboxes. Each learning sequence is given for-\nward as well as backward to two different LSTM networks that are\nattached to the same outputs layer in order for bidirectional Lstms\nto function. This indicates that the Bi-LSTM has detailed sequential\ninformation about all points before and following each point in a\nspecific sequence. In other words, we concatenate the outputs from\nboth the forward and the backward LSTM at each time step rather\nthan just encoding the sequence in the forward direction. Each\nword\u2019s encoded form now comprehends the words that come before\nand after it. This is a problem for the Internet community. The di-\nagram depicts various stages that aid in the prediction of email spam:\nBecause real-world data is messy and contains unnecessary infor-\nmation and duplication, data preprocessing is critical in natural\nlanguage processing (NLP). The major preprocessing steps are de-\npicted below.\n2.1\nNLP Tokenization\nTokenization of documents into words follows predefined rules.\nThe tokenization step is carried out in Python with spacy library.\n2.2\nStop Words Removal\nStop words appear infrequently or frequently in the document, but\nthey are less significant in terms of importance. As a result, these\nare removed to improve data processing.\n2.3\nText Normalization\nA word\u2019s lexicon form or order may differ. Thus, they must all be\nchanged to their root word to be correctly analyzed. Lemmatization\nand stemming are the two methods that can be used for normal-\nization. When a word\u2019s final few characters are removed to create\na shorter form, even if that form has no meaning, the procedure\nis known as stemming. lemmatization [21] is a mixture of corpus-\nbased an rule-based methods, and it retains the context of a term\nwhile changing it back to its root.\n2.4\nFeature Extraction\nfeature extraction which transforms the initial text into its features\nso that it may be used for modeling after being cleaned up and\nnormalized. Before predicting them, we use a specific way to give\nweights to specific terms in our document. While it is simple for a\ncomputer to process numbers, we choose to represent individual\nwords numerically. In such cases, we choose word embeddings. IDF\nis the count of documents containing the term divided by the total\nnumber of documents, and occurrence is the amount of instances a\nword appears in a document. We derive characteristics based on\nequations. 1,2,3,4,5, and 6. We use equations to derive properties.\n\ud835\udc47 \ud835\udc53 \ud835\udc3c\ud835\udc51\ud835\udc53 = \ud835\udc61\ud835\udc53 \u2217\n\ufffd 1\n\ud835\udc51\ud835\udc53\n\ufffd\n(1)\n\ud835\udc47 \ud835\udc53 \ud835\udc3c\ud835\udc51\ud835\udc53 = \ud835\udc61\ud835\udc53 \u2217 Inverse(\ud835\udc51\ud835\udc53 )\n(2)\n\ud835\udc47 \ud835\udc53 \ud835\udc3c\ud835\udc51\ud835\udc53 (\ud835\udc61,\ud835\udc51, \ud835\udc37) = \ud835\udc47 \ud835\udc53 (\ud835\udc61,\ud835\udc51).\ud835\udc3c\ud835\udc51\ud835\udc53 (\ud835\udc61, \ud835\udc37)\n(3)\n\ud835\udc47\ud835\udc3c\ud835\udc51\ud835\udc53 (\ud835\udc61,\ud835\udc51) = log\n\ud835\udc41\n|\ud835\udc51\ud835\udf16\ud835\udc37\ud835\udc61\ud835\udf16\ud835\udc37|\n(4)\nA word2vec neural network-based approach is the method that is\nutilized for this goal as the tool. The following equation, referred\nto as 5, shows how word2vec handles word context through the\nuse of probability-accurate measurements. Here letter D stands for\nthe paired-wise display of a set of words, while the letters w and c0\nor c1 represent paired word context that originated from a larger\ncollection of set D.\n\ud835\udc43 (\ud835\udc37 = 1 | \ud835\udc64,\ud835\udc5011:\ud835\udc58) =\n1\n1 + \ud835\udc52\u2212(\ud835\udc64\u00b7\ud835\udc5011+\ud835\udc64\u00b7\ud835\udc5012+...+\ud835\udc64\u00b7\ud835\udc501\ud835\udc58)\n(5)\n\ud835\udc43 (\ud835\udc37 = 1 | \ud835\udc64,\ud835\udc501:\ud835\udc58) =\n1\n1 + \ud835\udc52\u2212(\ud835\udc64\u00b7\ud835\udc500)\n(6)\n183\nIC3 2023, August 03\u201305, 2023, Noida, India\nSachan et al.\n2.5\nWord-Embeddings\nWord-Embedding helps to improve on the typical \"bag-of-words\"\nworldview, which requires a massive sparse feature vector to score\nevery word individually to represent this same entire vocabulary.\nThis perception is sparse because the vocabulary is large, and each\nword or document is defined by a massive vector. Using a word\nmap-based dictionary, word embedding needs to be converted terms\n(words) into real value feature vectors. There are two basic issues\nwith standard feature engineering techniques for deep learning.\nData is represented using sparse vectors, and the second is that\nsome of the meanings of words are not taken into consideration.\nSimilar phrases will have values in embedding vectors that are\nalmost real-valued. The Input length in our proposed study is set\nto 700 for our suggested model. If the texts seemed to be integer\nencoded with value systems between 10 and 20, the vocabulary\ndistance would be 11. Our data is encoded as integers, and the input\nand output dimensions are both set to 50,000. The embedding layer\noutcome will be used in successive layers and for BiLSTM and GRU\nlayers.\n2.6\nMachine Learning Model\nWithin the scope of the research, we are using the subsequent ma-\nchine learning techniques, to examine and compare the overall\nefficacy of our suggested Bi-LSTM strategy: Support Vector Ma-\nchine, Gaussian NB, Logistic Regression, K - nearest neighbors, and\nRandom Forest (RF).\n2.7\nConvolution Network\nThe popular RNN model generally performs well but takes too\nlong to train the model incorporating the textual sequential data.\nWhen a layer is added after the RNN layer, the model\u2019s learning\nduration is considerably decreased. Higher-level feature extraction\nis another benefit. [19] additionally possible using the convolutional\nlayer. In essence, the convolution layer looks for combinations of\nthe various words or paragraphs in the document that involve the\nfilters. We use features with 128 dimensions and a size 10 for each.\nFor this task, the Relu activation function is utilized. After that, the\none-dimensional largest pooling layers with a pooling size of 4 are\nput on the data in order to obtain higher-level features.\n2.8\nBiLSTM Network with GRU\nRecurrent Neural Network (RNN) technique of text sentiment anal-\nysis is particularly well-liked and frequently applied. Recurrent\nneural networks (RNN) surpass conventional neural networks. be-\ncause it can remember the information from earlier time steps\nthanks to its memory. A state vector is combined with an RNN\u2019s\ndata to create a new state vector. The resulting state vector uses the\npresent to recollect past knowledge. The RNN is straightforward\nand is based on the following equations:\n\u210e\ud835\udc61 = tanh (\ud835\udc4a\u210e\u210e\u210e\ud835\udc61\u22121 +\ud835\udc4a\ud835\udf0b\u210e\ud835\udc65\ud835\udc61)\n(7)\n\ud835\udc66\ud835\udc61 = \ud835\udc4a\u210e\ud835\udc66\u210e\ud835\udc61\n(8)\nThe vanilla RNN[18]is not very good at remembering previous\nsequences. In addition to that, RNN struggles with diminishing\ngradient descent. A kind of RNN is a long short-term recall network\n(LSTM), solves a vanishing gradient descent problem and learns\nlong-term dependencies[10]. LSTM was actually created to address\nthe problem of long-term reliance. LSTM has the unique ability to\nrecall. The cell state is the LSTM model\u2019s central concept. With\nonly a small amount of linear interaction, the cell state follows the\nsequence essentially unmodified from beginning to end. gate of\nan LSTM is also significant. Under the command of these gates,\ninformation is safely inserted to or eliminated from the cell stated.\nThe following equations are used by the LSTM model to update\neach cell:\n\ud835\udc53\ud835\udc61 = \ud835\udf0e\n\ufffd\n\ud835\udc4a\ud835\udc53 \u00b7 [\u210e\ud835\udc61\u22121,\ud835\udc65\ud835\udc61] + \ud835\udc4f\ud835\udc53\n\ufffd\n(9)\nIn this case, Xt denotes input, and ht is the hidden state at the t\ntime step. The following is the revised cell state Ct:\n\ud835\udc56t = \ud835\udf0e (\ud835\udc4a\ud835\udc56 [\u210e\ud835\udc61\u22121,\ud835\udc65\ud835\udc61] + \ud835\udc4f\ud835\udc56)\n(10)\n\ud835\udc36\ud835\udc47 = tanh (\ud835\udc4a\ud835\udc50 [\u210e\ud835\udc61\u22121,\ud835\udc65\ud835\udc61] + \ud835\udc4f\ud835\udc50\ud835\udc61)\n(11)\n\ud835\udc36\ud835\udc61 = \ud835\udc53\ud835\udc61 \u2217 \ud835\udc36\ud835\udc61\u22121 + \ud835\udc56\ud835\udc61 \u2217 \ud835\udc36\ud835\udc47\n(12)\nHere, we may compute the output and hidden state at t time steps\nusing the point-wise multiplication operator *.\n\ud835\udc5c\ud835\udc61 = \ud835\udf0e (\ud835\udc4a\ud835\udc5c \u00b7 [\u210e\ud835\udc61\u22121,\ud835\udc65\ud835\udc61] + \ud835\udc4f\ud835\udc5c)\n(13)\n\u210e\ud835\udc61 = \ud835\udc5c\ud835\udc61 \u2217 tanh (\ud835\udc36\ud835\udc61)\n(14)\nDue to the reality it only considers all prior contexts from the\npresent one, LSTM does have a few drawbacks. As a result of this,\nit may accept data from preceding time steps through LSTM as well\nas RNN. Therefore, in order to avoid this issue, further improve-\nments are carried out with the help of a bidirectional recurrent\nneural network(Bi-RNN). BiRNN [13] can handle two pieces of in-\nformation from both the front and the back. Bi-LSTM is created\nby combining the Bi-RNN and LSTM. As a result, operating LSTM\nhas advantages such as cell state storage so that BiRNN have way\nto acknowledge from the context before and after. As a conse-\nquence of this, it provides the Bi-LSTM with the advantages of an\nLSTM with feedback for the next layer. Remembering long-term\ndependencies is a significant new benefit of Bi-LSTM. The output,\nwhich is a feature vector, will be based on the call state. Finally,\nwe forecast the probability of email content as Normal, Fraudu-\nlent, Harassment, and Suspicious Emails using as an input to the\nsoftmax activation function, which is a weighted sum of the dense\nlayer\u2019s outputs. To regulate the information flow, GRU employs\nthe point-wise multiplying function and logistic sigmoid activation.\nThe GRU has hidden states of storage memory and does not have\ndistinct memory cells or units for state control. The W, U, and b\nvectors, which stand for weights, gates, and biases, respectively, are\ncrucial variables that must be calculated during the creation of the\nGRU model. For training reasons, the pre-trained word embedding\nknown as the Glove vector is used. They made it clear that GRU\nis the superior model when there is a large amount of training\ndata for textual groups and word embedding is available. BiLSTM,\nCNN, and GRU is required so as to compensate for the deletion\nof the document\u2019s long-term and short-term connections. In our\ncase, the embedding dimension, maximum sequence length, and\nlexicon size were used to start the LSTM embedding layer in three\nseparate LSTM models. The input vector was modified to make it\nappropriate for such a Conv1D layer, prior situations\u2019 sequences are\nreturned by LSTM layer. The \"return sequences\" of the LSTM layer\nmust be set to False when the subsequent state is free of the gated\n184\nSemantic Analysis and Classification of Emails through Informative Selection of Features and Ensemble AI Model\nIC3 2023, August 03\u201305, 2023, Noida, India\narchitecture. Quantity of learning parameters must be taken into\nconsideration. A 350-unit LSTM layer was set - up, and different\nLSTM unit combinations were tested. More importantly, because\nit has more parts, the model made with BiLSTM will take longer\nto train. Bidirectional LSTM is the name of a particular kind of\nrecurrent neural network that is primarily used for the processing\nof natural languages. (BiLSTM). It is able to use data from both\nsides, and, in contrast to regular LSTM, it enables input flow in\nboth directions. It is an effective instrument for demonstrating the\nlogical relationships between words and phrases, and this involves\nboth the forward and backward directions of the sequence. In con-\nclusion, BiLSTM works by adding one extra layer of LSTM, causing\nthe information flow to travel in the other direction. It only denotes\nthat the input sequence runs in reverse at the next LSTM layer. Mul-\ntiple operations, including averaging, summation, multiplication,\nand concatenation, are then applied to the results of the two LSTM\nlayers. The gated design of Bi-LSTM and GRU networks solves\nthe disappearing gradient and exploding problems. A good way to\nhandle more long sequences is to use Bi-LSMT and GRU together.\nGRU works well with datasets that don\u2019t have text. In two to three\nrounds, the complicated CNN+BiLSTM+GRU model learns the long\nsequence of email text well. We have used word embedding, cnn,\nbidirectional lstm and gru networks as our three building blocks\nto separate email messages based on their sentiment and text\u2019s\nsequential features. Also, we succinctly demonstrate below why\nthese blocks help identify email spam:\n\u2022 First, We have used the Sequence - to - sequence Lstm as the\ncurrent block in the networks since it can retrieve both the\nprevious and next sequences from the current. More so than\na straightforward LSTM network, it can also recognize and\nextract text sentiment and sequential properties.\n\u2022 Second, we extract the more complex and advanced charac-\nteristics for Bi-LSTM network using Convolutional Network\nblock, which is the network\u2019s second block after the Bi-LSTM\nblock. Bi-LSTM takes a long time to extract text-based fea-\ntures, hence one of the reasons for using this block is to\nreduce the network\u2019s overall training time.\n3\nEXPERIMENTAL EVALUATION\n3.1\nExperimental Setup\nWe divided the information into training and testing groups of\n80/20. We divided the remaining 20% of the 80 percent training\ndata into test data for the model. Construct, compute, and evaluate\nthe efficacy of the suggested method using the Pythonic packages\nKeras, as TensorFlow and Scikit learn.\n3.2\nDataset Description\nEmail spam detection is the foundation of this research project. The\ndataset includes normal emails from the Enron corpora, deceptive\nemails from phished email corpora, harassment emails chosen from\nhate speech, and the offensive dataset. Only the content of the email\nbody is used for analysis; all header information, including sender,\ntopic, CC, and BCC, are eliminated. Word2vector, TF-IDF, and Word\nEmbedding are used to extract characteristics from the email mes-\nsage and classify them. This dataset[8] is publicly available. The\npresented model is implemented using Python, and several metrics,\nincluding accuracy, precision, and recall, are used to examine the\noutcomes.\n3.3\nEvaluation Metrics and Results\nClassifier performance is assessed Using metrics such as accuracy,\nprecision, and recall. Four terms make up a confusion matrix that\nis used to calculate these metrics.\n\u2022 True positives (TP) are positive values that have been accu-\nrately assigned the positive label.\n\u2022 The negative values that are accurately identified as negative\nare known as True Negatives (TN).\n\u2022 True Negative values are those that can be accurately identi-\nfied as being negative (TN).\n\u2022 Positive readings that have been mistakenly labeled as nega-\ntive are known as False Negatives (FN).\nAssess the efficacy of the suggested model is listed below:\n3.3.1\nAccuracy. Accuracy reveals how frequently the ML model\nwas overall correct.\nAccuracy =\n\ud835\udc47\ud835\udc43 +\ud835\udc47\ud835\udc41\n\ud835\udc47\ud835\udc43 +\ud835\udc47\ud835\udc41 + \ud835\udc39\ud835\udc43 + \ud835\udc39\ud835\udc41\n(15)\n3.3.2\nPrecision. The accuracy of the model gauges how effectively\nit can predict a specific category.\nPrecision =\n\ud835\udc47\ud835\udc43\n\ud835\udc47\ud835\udc43 + \ud835\udc39\ud835\udc43\n(16)\n3.3.3\nRecall. Recall tells us how often the model was able to rec-\nognize a specific category.\nRecall =\n\ud835\udc47\ud835\udc43\n\ud835\udc47\ud835\udc43 + \ud835\udc39\ud835\udc41\n(17)\nModel\nAccuracy\nPrecision\nRecall\nGaussian NB\n91.3\n90.1\n91.8\nRandom Forest\n88.41\n90\n88\nKNN\n86.6\n89\n87\nSVM\n92.4\n91\n92\nLSTM\n95.2\n95\n95.7\nProposed\nEnsemble\n(CNN,BiLSTM+GRU)\n97.32\n95.6\n95.3\nTable 1: Differet Model\u2019s Score on Test Data\nAccuracy, Precision, and Recall metrics are computed. In the\ngiven Table 1 where six different classifiers are Gaussian NB, Ran-\ndom Forest, KNN, SVM, LSTM, and Propose Ensemble Hybrid\nModel (CNN+BiLSTM+GRU) have been used in this work. In the\nCNN, Bi-LSTM, and GRU architectures which enable sequence pre-\ndiction, CNN strands for feature extraction on data input which are\ncombined with LSTM. It requires less time training and a higher\nexpandable model. Any bottlenecks are created by predictions and\nthe increasing number of distinct units of information. This model\nis useful for dealing with issue-related classifications that consist\nof two or more than two classes. So suggested Ensemble model, out\nof these six classifiers, produces more accurate findings.\n185\nIC3 2023, August 03\u201305, 2023, Noida, India\nSachan et al.\nFigure 1: Performance Analysis\n3.4\nComparative Analysis\nA model\u2019s ability to fit new data is measured by the validation\nloss, whereas its ability to fit training data is determined by the\ntraining loss. The two main variables that decide whether in which\nlearning is efficient or not are validation loss and training loss.\nLSTM and Suggested Ensemble hybrid Models have equivalent loss\nand accuracy. In this context, we are contrasting the LSTM with the\nproposed model (CNN, Bilstm, and GRU) in terms of their respective\nvalidation accuracies and losses. The model\u2019s accuracy was at its\nhighest after 14 epochs of operation when it achieved an accuracy\nof roughly 97-98% while minimizing model loss.\nFigure 2: LSTM Model Training and Validation Accuracy\nFigure 3: LSTM Model Training and Validation Loss\nFigure 4: Ensemble Model (CNN,BiLSTM+GRU) Training\nand Validation Accuracy\nFigure 5: Ensemble Model (CNN,BiLSTM+GRU)Training\nand Validation Loss\n186\nSemantic Analysis and Classification of Emails through Informative Selection of Features and Ensemble AI Model\nIC3 2023, August 03\u201305, 2023, Noida, India\nIn this Proposed ensemble hybrid model\u2019s train accuracy is 98.7%\nValidation accuracy is 97.32% and LSTM has train accuracy of 97.41%\nand validation accuracy is 95.2%. So based on figures 3 and 5 indicate\nthe validation loss for LSTM and the proposed ensemble hybrid\nmodel to be 0.93 and 0.84, respectively, and figures 2 and 4 show the\nvalidation accuracy to be 95.2% and 97.3%, respectively. LSTM and\nthe proposed hybrid model used ensemble artificial intelligence,\nwith the proposed hybrid model outperforming the LSTM. We\ndecide on dense architecture as the final model for identifying the\ntext messages as spam or nonspam based on loss, accuracy, and the\naforementioned charts. The loss and accuracy over epochs are more\nstable than LSTM, and the Proposed classifier has a straightforward\nstructure.\n4\nCONCLUSION\nThe model is composed of four networks Word-Embeddings, CNN,\nBi-LSTM, and GRU. We may train the model more quickly by using\nthe convolutional layer first, followed by the word-embedding layer,\nand then the BiLSTM network. The Bidirectional LSTM network\nalso has higher-level properties that we can extract. We have used\na bidirectional LSTM(BiLSTM)and GRU network to memorize a\nsentence\u2019s contextual meaning and sequential structure, which im-\nproves the model\u2019s performance accuracy to roughly 97.32 percent.\nREFERENCES\n[1] Rayan Salah Hag Ali and Neamat El Gayar. 2019. Sentiment analysis using unla-\nbeled email data. In 2019 International Conference on Computational Intelligence\nand Knowledge Economy (ICCIKE). IEEE, 328\u2013333.\n[2] Ali Shafigh Aski and Navid Khalilzadeh Sourati. 2016. Proposed efficient algo-\nrithm to filter spam using machine learning techniques. Pacific Science Review A:\nNatural Science and Engineering 18, 2 (2016), 145\u2013149.\n[3] Huwaida T Elshoush and Esraa A Dinar. 2019. Using adaboost and stochastic\ngradient descent (sgd) algorithms with R and orange software for filtering e-mail\nspam. In 2019 11th Computer Science and Electronic Engineering (CEEC). IEEE,\n41\u201346.\n[4] Weimiao Feng, Jianguo Sun, Liguo Zhang, Cuiling Cao, and Qing Yang. 2016. A\nsupport vector machine based naive Bayes algorithm for spam filtering. In 2016\nIEEE 35th International Performance Computing and Communications Conference\n(IPCCC). IEEE, 1\u20138.\n[5] Pranjul Garg and Nancy Girdhar. 2021. A Systematic Review on Spam Filtering\nTechniques based on Natural Language Processing Framework. In 2021 11th Inter-\nnational Conference on Cloud Computing, Data Science & Engineering (Confluence).\nIEEE, 30\u201335.\n[6] Adam Kavon Ghazi-Tehrani and Henry N Pontell. 2021. Phishing evolves: Ana-\nlyzing the enduring cybercrime. Victims & Offenders 16, 3 (2021), 316\u2013342.\n[7] Radicati Group et al. 2015. Email Statistics Report 2015\u20132019. Radicati Group.\nAccessed August 13 (2015), 2019.\n[8] Maryam Hina, Mohsin Ali, and Javed. 2021. Sefaced: Semantic-based forensic\nanalysis and classification of e-mail data using deep learning. IEEE Access 9\n(2021), 98398\u201398411.\n[9] Maryam Hina, Mohsin Ali, Abdul Rehman Javed, Fahad Ghabban, Liaqat Ali\nKhan, and Zunera Jalil. 2021. Sefaced: Semantic-based forensic analysis and\nclassification of e-mail data using deep learning. IEEE Access 9 (2021), 98398\u2013\n98411.\n[10] Weicong Kong, Zhao Yang Dong, Youwei Jia, David J Hill, Yan Xu, and Yuan\nZhang. 2017. Short-term residential load forecasting based on LSTM recurrent\nneural network. IEEE transactions on smart grid 10, 1 (2017), 841\u2013851.\n[11] T Kumaresan and C Palanisamy. 2017. E-mail spam classification using S-cuckoo\nsearch and support vector machine. International Journal of Bio-Inspired Compu-\ntation 9, 3 (2017), 142\u2013156.\n[12] Nuha H Marza, Mehdi E Manaa, and Hussein A Lafta. 2021. Classification of\nspam emails using deep learning. In 2021 1st Babylon International Conference on\nInformation Technology and Science (BICITS). IEEE, 63\u201368.\n[13] Tomas Mikolov and Geoffrey Zweig. 2012. Context dependent recurrent neural\nnetwork language model. In 2012 IEEE Spoken Language Technology Workshop\n(SLT). IEEE, 234\u2013239.\n[14] Sarwat Nizamani, Nasrullah Memon, Mathies Glasdam, and Dong Duong Nguyen.\n2014. Detection of fraudulent emails by employing advanced feature abundance.\nEgyptian Informatics Journal 15, 3 (2014), 169\u2013174.\n[15] V Priya, I Sumaiya Thaseen, Thippa Reddy Gadekallu, Mohamed K Aboudaif,\nand Emad Abouel Nasr. 2021. Robust attack detection approach for IIoT using\nensemble classifier. arXiv preprint arXiv:2102.01515 (2021).\n[16] Justinas Rastenis, Simona Ramanauskait\u02d9e, Justinas Janulevi\u010dius, Antanas \u010cenys,\nAsta Slotkien\u02d9e, and K\u0119stutis Pakrijauskas. 2020. E-mail-based phishing attack\ntaxonomy. Applied Sciences 10, 7 (2020), 2363.\n[17] Karthika D Renuka and P Visalakshi. 2014. Latent semantic indexing based SVM\nmodel for email spam classification. (2014).\n[18] Shuvendu Roy, Sk Imran Hossain, MAH Akhand, and N Siddique. 2018. Sequence\nmodeling for intelligent typing assistant with Bangla and English keyboard. In\n2018 International Conference on Innovation in Engineering and Technology (ICIET).\nIEEE, 1\u20136.\n[19] Tara N Sainath, Oriol Vinyals, Andrew Senior, and Ha\u015fim Sak. 2015. Convolu-\ntional, long short-term memory, fully connected deep neural networks. In 2015\nIEEE international conference on acoustics, speech and signal processing (ICASSP).\nIeee, 4580\u20134584.\n[20] Anuj Kumar Singh, Shashi Bhushan, and Sonakshi Vij. 2019. Filtering spam\nmessages and mails using fuzzy C means algorithm. In 2019 4th International\nConference on Internet of Things: Smart Innovation and Usages (IoT-SIU). IEEE,\n1\u20135.\n[21] Kristina Toutanova and Colin Cherry. 2009. A global model for joint lemmati-\nzation and part-of-speech prediction. In Proceedings of the Joint Conference of\nthe 47th Annual Meeting of the ACL and the 4th International Joint Conference on\nNatural Language Processing of the AFNLP. 486\u2013494.\n[22] Tian Xia. 2020. A constant time complexity spam detection algorithm for boosting\nthroughput on rule-based filtering systems. IEEE Access 8 (2020), 82653\u201382661.\n[23] Yan Zhang, PengFei Liu, and JingTao Yao. 2019. Three-way email spam filtering\nwith game-theoretic rough sets. In 2019 International conference on computing,\nnetworking and communications (ICNC). IEEE, 552\u2013556.\nReceived 15 April 2023\n187\n",
    "pdf_url": "/media/Article_02_3ac80585055b4ad8a0f2f4441c34d582.pdf",
    "references": [
      "[1] Rayan Salah Hag Ali and Neamat El Gayar. 2019. Sentiment analysis using unla-",
      "beled email data. In 2019 International Conference on Computational Intelligence",
      "and Knowledge Economy (ICCIKE). IEEE, 328\u2013333.",
      "[2] Ali Shafigh Aski and Navid Khalilzadeh Sourati. 2016. Proposed efficient algo-",
      "rithm to filter spam using machine learning techniques. Pacific Science Review A:",
      "Natural Science and Engineering 18, 2 (2016), 145\u2013149.",
      "[3] Huwaida T Elshoush and Esraa A Dinar. 2019. Using adaboost and stochastic"
    ],
    "publication_date": "2023-11-06T00:00:00",
    "corrected": 0,
    "_id": "l_pca40B7ffmqzjIzInG"
  },
  {
    "titre": "Large Language Model Augmented Narrative Driven Recommendations",
    "resume": "Narrative-driven recommendation (NDR) presents an informationaccess problem where users solicit recommendations with verbosedescriptions of their preferences and context, for example, travelerssoliciting recommendations for points of interest while describ-ing their likes/dislikes and travel circumstances. These requestsare increasingly important with the rise of natural language-basedconversational interfaces for search and recommendation systems.However, NDR lacks abundant training data for models, and currentplatforms commonly do not support these requests. Fortunately,classical user-item interaction datasets contain rich textual data,e.g., reviews, which often describe user preferences and context this may be used to bootstrap training for NDR models. In thiswork, we explore using large language models (LL Ms) for dataaugmentation to train NDR models. We use LLMs for authoringsynthetic narrative queries from user-item interactions with few-shot prompting and train retrieval models for NDR on syntheticqueries and user-item interaction data. Our experiments demon-strate that this is an effective strategy for training small-parameterretrieval models that outperform other retrieval and LLM baselinesfor narrative-driven recommendation.",
    "auteurs": [
      "Andrew McCallum",
      "Recommender",
      "Andrew McCallum",
      "Hamed Zamani",
      "Recommender",
      "subreddits1",
      "\ud835\udc51\ud835\udc56}\ud835\udc41\ud835\udc62"
    ],
    "institutions": [
      "Hamed  University of Massachusetts AmherstUSA",
      "Sheshera  University of Massachusetts AmherstUSA",
      "Andrew Mc  of Massachusetts AmherstUSA"
    ],
    "mots_cles": [
      "queries",
      "models",
      "user",
      "narrative",
      "retrieval",
      "item",
      "mint",
      "items",
      "model",
      "language"
    ],
    "texte_integral": "Large Language Model Augmented Narrative Driven\nRecommendations\nSheshera Mysore\nsmysore@cs.umass.edu\nUniversity of Massachusetts Amherst\nUSA\nAndrew McCallum\nmccallum@cs.umass.edu\nUniversity of Massachusetts Amherst\nUSA\nHamed Zamani\nhzamani@cs.umass.edu\nUniversity of Massachusetts Amherst\nUSA\nABSTRACT\nNarrative-driven recommendation (NDR) presents an information\naccess problem where users solicit recommendations with verbose\ndescriptions of their preferences and context, for example, travelers\nsoliciting recommendations for points of interest while describ-\ning their likes/dislikes and travel circumstances. These requests\nare increasingly important with the rise of natural language-based\nconversational interfaces for search and recommendation systems.\nHowever, NDR lacks abundant training data for models, and current\nplatforms commonly do not support these requests. Fortunately,\nclassical user-item interaction datasets contain rich textual data,\ne.g., reviews, which often describe user preferences and context\n\u2013 this may be used to bootstrap training for NDR models. In this\nwork, we explore using large language models (LLMs) for data\naugmentation to train NDR models. We use LLMs for authoring\nsynthetic narrative queries from user-item interactions with few-\nshot prompting and train retrieval models for NDR on synthetic\nqueries and user-item interaction data. Our experiments demon-\nstrate that this is an effective strategy for training small-parameter\nretrieval models that outperform other retrieval and LLM baselines\nfor narrative-driven recommendation.\nCCS CONCEPTS\n\u2022 Information systems \u2192 Recommender systems; Users and inter-\nactive retrieval; \u2022 Computing methodologies \u2192 Natural language\ngeneration.\nACM Reference Format:\nSheshera Mysore, Andrew McCallum, and Hamed Zamani. 2023. Large\nLanguage Model Augmented Narrative Driven Recommendations. In Sev-\nenteenth ACM Conference on Recommender Systems (RecSys \u201923), Septem-\nber 18\u201322, 2023, Singapore, Singapore. ACM, New York, NY, USA, 7 pages.\nhttps://doi.org/10.1145/3604915.3608829\n1\nINTRODUCTION\nRecommender systems personalized to users are an important com-\nponent of several industry-scale platforms [16, 17, 46]. These sys-\ntems function by inferring users\u2019 interests from their prior inter-\nactions on the platform and making recommendations based on\nthese inferred interests. While recommendations based on historical\nPermission to make digital or hard copies of all or part of this work for personal or\nclassroom use is granted without fee provided that copies are not made or distributed\nfor profit or commercial advantage and that copies bear this notice and the full citation\non the first page. Copyrights for components of this work owned by others than the\nauthor(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or\nrepublish, to post on servers or to redistribute to lists, requires prior specific permission\nand/or a fee. Request permissions from permissions@acm.org.\nRecSys \u201923, September 18\u201322, 2023, Singapore, Singapore\n\u00a9 2023 Copyright held by the owner/author(s). Publication rights licensed to ACM.\nACM ISBN 979-8-4007-0241-9/23/09...$15.00\nhttps://doi.org/10.1145/3604915.3608829\ninteractions are effective, users soliciting recommendations often\nstart with a vague idea about their desired target items or may\ndesire recommendations depending on the context of use, often\nmissing in historical interaction data (Figure 1). In these scenarios,\nit is common for users to solicit recommendations through long-\nform narrative queries describing their broad interests and context.\nInformation access tasks like these have been studied as narrative-\ndriven recommendations (NDR) for items ranging from books [5]\nand movies [18], to points of interest [1]. Bogers and Koolen [5]\nnote these narrative requests to be common on discussion forums\nand several subreddits1, but, there is a lack of support for these\ncomplex natural language queries in current recommenders.\nHowever, with the emergence of conversational interfaces for\ninformation access tasks, support for complex NDR tasks is likely\nto become necessary. In this context, recent work has noted an\nincrease in complex and subjective natural language requests com-\npared to more conventional search interfaces [13, 34]. Furthermore,\nthe emergence of large language models (LLM) with strong lan-\nguage understanding capabilities presents the potential for fulfilling\nsuch complex requests [9, 33]. This work explores the potential for\nre-purposing historical user-item recommendation datasets, tra-\nditionally used for training collaborative filtering recommenders,\nwith LLMs to support NDR.\nSpecifically, given a user\u2019s interactions, \ud835\udc37\ud835\udc62, with items and\ntheir accompanying text documents (e.g., reviews, descriptions)\n\ud835\udc37\ud835\udc62 = {\ud835\udc51\ud835\udc56}\ud835\udc41\ud835\udc62\n\ud835\udc56=1, selected from a user-item interaction dataset I, we\nprompt InstructGPT, a 175B parameter LLM, to author a synthetic\nnarrative query \ud835\udc5e\ud835\udc62 based on \ud835\udc37\ud835\udc62 (Figure 2). Since we expect the\nquery \ud835\udc5e\ud835\udc62 to be noisy and not fully representative of all the user\nreviews, \ud835\udc37\ud835\udc62 is filtered to retain only a fraction of the reviews based\non a language-model assigned likelihood of \ud835\udc5e\ud835\udc62 given a user doc-\nument, \ud835\udc51\ud835\udc56. Then, a pre-trained LM based retrieval model (110M\nparameters) is fine-tuned for retrieval on the synthetic queries and\nfiltered reviews.\nOur approach, which we refer to as Mint2, follows from the\nobservation that while narrative queries and suggestions are often\nmade in online discussion forums, and could serve as training data,\nthe number of these posts and the diversity of domains for which\nthey are available is significantly smaller than the size and diversity\nof passively gathered user-item interaction datasets. E.g. while\nBogers and Koolen [5] note nearly 25,000 narrative requests for\nbooks on the LibraryThing discussion forum, a publicly available\nuser-item interaction dataset for Goodreads contains interactions\nwith nearly 2.2M books by 460k users [43] .\nWe empirically evaluate Mint in a publicly available test collec-\ntion for point of interest recommendation: pointrec [1]. To train\n1r/MovieSuggestions, r/booksuggestions, r/Animesuggest\n2Mint: Data augMentation with INteraction narraTives.\n777\nRecSys \u201923, September 18\u201322, 2023, Singapore, Singapore\nMysore, McCallum, Zamani\nFigure 1: An example narrative query soliciting point of\ninterest recommendations. The query describes the users\npreferences and the context of their request.\nFigure 2: The format of the prompt used in Mint for\ngenerating synthetic narrative queries from user-item\ninteraction with a large language model.\nour NDR models, we generate synthetic training data based on\nuser-item interaction datasets from Yelp. Models (110M parameters)\ntrained with Mint significantly outperform several baseline models\nand match the performance of significantly larger LLM baselines\nautoregressively generating recommendations. Code and synthetic\ndatasets are available:3\n2\nRELATED WORK\nData Augmentation for Information Access. A line of recent\nwork has explored using language models to generate synthetic\nqueries for data augmentation to train models for information re-\ntrieval tasks [7, 8, 15, 23, 31]. Here, given a document collection of\ninterest, a pre-trained language model is used to create synthetic\nqueries for the document collection. An optional filtering step ex-\ncludes noisy queries, and finally, a bi-encoder or a cross-encoder is\ntrained for the retrieval task. While earlier work of Ma et al. [31]\ntrain a custom query generation model on web-text datasets, more\nrecent work has leveraged large language models for zero/few-shot\nquestion generation [7, 8, 15, 23]. In generating synthetic queries,\nthis work indicates the effectiveness of smaller parameter LLMs\n(up to 6B parameters) for generating synthetic queries in simpler\ninformation-retrieval tasks [7, 8, 23], and finds larger models (100B\nparameters and above) to be necessary for harder tasks such as\nargument retrieval [15, 23]. Similar to this work, we explore the\ngeneration of synthetic queries with LLMs for a retrieval task. Un-\nlike this work, we demonstrate a data augmentation method for\ncreating effective training data from sets of user documents found in\nrecommendation datasets rather than individual documents. Other\nwork in this space has also explored training more efficient multi-\nvector models from synthetic queries instead of more expensive\ncross-encoder models [39] and generating queries with a diverse\nrange of intents than the ones available in implicit feedback datasets\nto enhance item retrievability [35].\n3https://github.com/iesl/narrative-driven-rec-mint/\nBesides creating queries for ad-hoc retrieval tasks, concurrent\nwork of Leszczynski et al. [25] has also explored the creation of syn-\nthetic conversational search datasets from music recommendation\ndatasets with LLMs. The synthetic queries and user documents are\nthen used to train bi-encoder retrieval models for conversational\nsearch. Our work resembles this in creating synthetic queries from\nsets of user items found in recommendation interaction datasets.\nHowever, it differs in the task of focus, creating long-form narra-\ntive queries for NDR. Finally, our work also builds on the recent\nperspective of Radlinski et al. [36] who make a case for natural\nlanguage user profiles driving recommenders \u2013 narrative requests\ntie closely to natural language user profiles. Our work presents a\nstep toward these systems.\nFinally, while our work explores data augmentation from user-\nitem interactions for a retrieval-oriented NDR task, prior work has\nalso explored data augmentation of the user-item graph for training\ncollaborative filtering models. This work has often explored aug-\nmentation to improve recommendation performance for minority\n[12, 47] or cold-start users [11, 28, 45]. And has leveraged genera-\ntive models [11, 45] and text similarity models [28] for augmenting\nthe user-item graph.\nComplex Queries in Information Access. With the advent\nof performant models for text understanding, focus on complex\nand interactive information access tasks has seen a resurgence\n[2, 29, 32, 48]. NDR presents an example of this \u2013 NDR was first\nformalized in Bogers and Koolen [5] for the case of book recommen-\ndation and subsequently studied in other domains [3, 4, 6]. Bogers\nand Koolen [5] systematically examined narrative requests posted\nby users on discussion forums. They defined NDR as a task requir-\ning item recommendation based on a long-form narrative query\nand prior-user item interactions. While this formulation resembles\npersonalized search [42] and query-driven recommendation [20],\nthe length and complexity of requests differentiate these from NDR.\nOther work has also demonstrated the effectiveness of re-ranking\ninitial recommendations from collaborative filtering approaches\n778\nLarge Language Model Augmented Narrative Driven Recommendations\nRecSys \u201923, September 18\u201322, 2023, Singapore, Singapore\nFigure 3: Mint re-purposes readily available user-item interaction datasets commonly used to train collaborative filtering\nmodels for narrative-driven recommendation. This is done by authoring narrative queries for sets of items liked by a user with\na large language model. The data is filtered with a smaller language model and retrieval models are trained on the synthetic\nqueries and user items.\nbased on the narrative query [18]. More recent work of Afzali et al.\n[1] formulate the NDR task without access to the prior interactions\nof a user while also noting the value of contextual cues contained\nin the narrative request. In our work, we focus on this latter for-\nmulation of NDR, given the lack of focus on effectively using the\nrich narrative queries in most prior work. Further, we demonstrate\nthe usefulness of data augmentation from LLMs and user-item\ninteraction datasets lacking narrative queries.\nBesides this, a range of work has explored more complex, long-\nform, and interactive query formulations for information access;\nthese resemble queries in NDR. Arguello et al. [2] define the tip of\ntongue retrieval task, a known-item search task where user queries\ndescribe the rich context of items while being unable to recall item\nmetadata itself. Mysore et al. [32] formulate an aspect conditional\nquery-by example task where results must match specific aspects of\na long natural language query. And finally, a vibrant body of work\nhas explored conversational critiquing of recommenders where nat-\nural language feedback helps tune the recommendations received\nby users [30, 44, 49].\n3\nMETHOD\n3.1\nProblem Setup\nIn our work, we define narrative-driven recommendation (NDR) to\nbe a ranking task, where given a narrative query \ud835\udc5e made by a user\n\ud835\udc62, a ranking system \ud835\udc53 must generate a ranking \ud835\udc45 over a collection\nof items C. Further, we assume access to a user-item interaction\ndataset I consisting of user interactions with items (\ud835\udc62, {\ud835\udc51\ud835\udc56}\ud835\udc41\ud835\udc62\n\ud835\udc56=1). We\nassume the items \ud835\udc51\ud835\udc56 to be textual documents like reviews or item\ndescriptions. While we don\u2019t assume there to be any overlap in the\nusers making narrative queries or the collection of items C and the\nuser-items interaction dataset I, we assume them to be from the\nsame broad domain, e.g., books, movies, points-of-interest.\n3.2\nProposed Method\nOur proposed method, Mint, for NDR, re-purposes a dataset of\nabundantly available user-item interactions, I = {(\ud835\udc62, {\ud835\udc51\ud835\udc56}\ud835\udc41\ud835\udc62\n\ud835\udc56=1)} into\ntraining data for retrieval models by using LLMs as query gener-\nation models to author narrative queries \ud835\udc5e\ud835\udc62: D = {(\ud835\udc5e\ud835\udc62, {\ud835\udc51\ud835\udc56}\ud835\udc41\ud835\udc62\n\ud835\udc56=1)}.\nThen, retrieval models are trained on the synthetic dataset D (Fig-\nure 3).\n3.2.1\nNarrative Queries from LLMs. To author a narrative query \ud835\udc5e\ud835\udc62\nfor a user in I, we make use of the 175B parameter InstructGPT4\nmodel as our query generation model QGen. We include the text\nof interacted items {\ud835\udc51\ud835\udc56}\ud835\udc41\ud835\udc62\n\ud835\udc56=1 in the prompt for QGen, and instruct it\nto author a narrative query (Figure 2). To improve the coherence\nof generated queries and obtain correctly formatted outputs, we\nmanually author narrative queries for 3 topically diverse users\nbased on their interacted items and include it in the prompt for\nQGen. The same three few shot examples are used for the whole\ndataset I, and the three users were chosen from I. Generating\nnarrative queries based on user interactions may also be considered\na form of multi-document summarization for generating a natural\nlanguage user profile [36].\n3.2.2\nFiltering Items for Synthetic Queries. Since we expect user\nitems to capture multiple aspects of their interests and generated\nqueries to only capture a subset of these interests, we only retain\nsome of the items present in {\ud835\udc51\ud835\udc56}\ud835\udc41\ud835\udc62\n\ud835\udc56=1 before using it for training re-\ntrieval models. For this, we use a pre-trained language model to com-\npute the likelihood of the query given each user item, \ud835\udc43\ud835\udc3f\ud835\udc40 (\ud835\udc5e\ud835\udc62|\ud835\udc51\ud835\udc56),\nand only retain the top \ud835\udc40 highly scoring item for \ud835\udc5e\ud835\udc62, this re-\nsults in \ud835\udc40 training samples per user for our NDR retrieval models:\n{(\ud835\udc5e\ud835\udc62,\ud835\udc51\ud835\udc56)\ud835\udc40\n\ud835\udc56=1}. In our experiments, we use FlanT5 with 3B parame-\nters [14] for computing and follow Sachan et al. [40] for computing\n\ud835\udc43\ud835\udc3f\ud835\udc40 (\ud835\udc5e\ud835\udc62|\ud835\udc51\ud835\udc56). Note that our use of \ud835\udc43\ud835\udc3f\ud835\udc40 (\ud835\udc5e\ud835\udc62|\ud835\udc51\ud835\udc56) represents a query-\nlikelihood model classically used for ad-hoc search and recently\nshown to be an effective unsupervised re-ranking method when\nused with large pre-trained language models [40].\n3.2.3\nTraining Retrieval Models. We train bi-encoder and cross-\nencoder models for NDR on the generated synthetic dataset \u2013 com-\nmonly used models in search tasks. Bi-encoders are commonly used\nas scalable first-stage rankers from a large collection of items. On the\nother hand, cross-encoders allow a richer interaction between query\nand item and are used as second-stage re-ranking models. For both\nmodels, we use a pre-trained transformer language model architec-\nture with 110M parameters, MPnet, a model similar to Bert [41].\nBi-encoder models embed the query and item independently into\nhigh dimensional vectors: q\ud835\udc62 = MPNet(\ud835\udc5e\ud835\udc62), d\ud835\udc56 = MPNet(\ud835\udc51\ud835\udc56) and\nrank items for the user based on the minimum L2 distance between\n4https://platform.openai.com/docs/models/gpt-3, text-davinci-003\n779\nRecSys \u201923, September 18\u201322, 2023, Singapore, Singapore\nMysore, McCallum, Zamani\nq\ud835\udc62 and d\ud835\udc56. Embeddings are obtained by averaging token embeddings\nfrom the final layer of MPNet, and the same model is used for both\nqueries and items. Cross-encoder models input both the query and\nitem and output a score to be used for ranking \ud835\udc60 = \ud835\udc53Cr([\ud835\udc5e\ud835\udc62;\ud835\udc51\ud835\udc56]),\nwhere \ud835\udc53Cr is parameterized as w\ud835\udc47 dropout\n\ufffd\nW\ud835\udc47 MPNet(\u00b7)\n\ufffd\n. We\ntrain our bi-encoder model with a margin ranking loss: L\ud835\udc35\ud835\udc56 =\n\ufffd\n\ud835\udc62\n\ufffd\ud835\udc40\n\ud835\udc56=1 max[\ud835\udc3f2(q\ud835\udc62, d\ud835\udc56) \u2212 \ud835\udc3f2(q\ud835\udc62, d\n\u2032\n\ud835\udc56) + \ud835\udeff, 0] with randomly sam-\npled negatives \ud835\udc51\n\u2032 and \ud835\udeff = 1. Our cross-encoders are trained with\na cross-entropy loss: L\ud835\udc36\ud835\udc5f = \ufffd\n\ud835\udc62\n\ufffd\ud835\udc40\n\ud835\udc56=1 log(\n\ufffd \ud835\udc52\ud835\udc60\n\ud835\udc51\u2032 \ud835\udc52\ud835\udc60\u2032 ). For training, 4\nnegative example items \ud835\udc51\u2032 are randomly sampled from ranks 100-\n300 from our trained bi-encoder. At test time, we retrieve the top\n200 items with our trained bi-encoder and re-rank them with the\ncross-encoder - we evaluate both these components in experiments\nand refer to them as BiEnc-Mint and CrEnc-Mint.\n4\nEXPERIMENTS AND RESULTS\nNext, we evaluate Mint on a publicly available test collection for\nNDR and present a series of ablations.\n4.1\nExperimental Setup\n4.1.1\nDatasets. We perform evaluations on an NDR dataset for\npoint-of-interest (POI) recommendation Pointrec [1]. Pointrec\ncontains 112 realistic narrative queries (130 words long) obtained\nfrom discussion forums on Reddit and items pooled from baseline\nrankers. The items are annotated on a graded relevance scale by\ncrowd-workers and/or discussion forum members and further vali-\ndated by the dataset authors. The item collection C in Pointrec\ncontains 700k POIs with metadata (category, city) and noisy text\nsnippets describing the POI obtained from the Bing search engine.\nFor test time ranking, we only rank the candidate items in the city\nand request category (e.g., \u201cRestaurants\u201d) of the query available in\nPointrec - this follows prior practice to exclude clearly irrelevant\nitems [1, 26]. We use user-item interaction datasets from Yelp to\ngenerate synthetic queries for training.5 Note also that we limit our\nevaluations to Pointrec since it presents the only publicly avail-\nable, manually annotated, and candidate pooled test collection for\nNDR, to our knowledge. Other datasets for NDR use document col-\nlections that are no longer publicly accessible [24], contain sparse\nand noisy relevance judgments due to them being determined with\nautomatic rules applied to discussion threads [18, 24], lack pooling\nto gather candidates for judging relevance [18, 24], or lack realistic\nnarrative queries [21]. We leave the development of more robust\ntest collections and evaluation methods for NDR to future work.\n4.1.2\nImplementation Details. Next, we describe important details\nfor Mint and leave finer details of the model and training to our\ncode release. To sample user interactions for generating synthetic\nqueries from the Yelp dataset, we exclude POIs and users with\nfewer than ten reviews to ensure that users were regular users of\nthe site with well represented interests. This follows common prior\npractice in preparing user-item interaction datasets for use [27].\nThen we retain users who deliver an average rating greater than\n3/5 and with 10-30 above-average reviews. This desirably biases\nour data to users who commonly describe their likings (rather than\n5https://www.yelp.com/dataset\ndislikes). It also retains the users whose interests are summarizable\nby QGen. In the Yelp dataset, this results in 45,193 retained users.\nNow, 10,000 randomly selected users are chosen for generating syn-\nthetic narrative queries. For these users, a single randomly selected\nsentence from 10 of their reviews is included in the prompt (Figure\n2) to QGen, i.e., \ud835\udc41\ud835\udc62 = 10. After generating synthetic queries, some\nitems are filtered out (\u00a73.2.2). Here, we exclude 40% of the items\nfor a user. This results in about 60,000 training samples for training\nBiEnc-Mint and CrEnc-Mint. These decisions were made manu-\nally by examining the resulting datasets and the cost of authoring\nqueries. The expense of generating \ud835\udc5e\ud835\udc62 was about USD 230.\n4.1.3\nBaselines. We compare BiEnc-Mint and CrEnc-Mint mod-\nels against several standard and performant retrieval model base-\nlines. These span zero-shot/unsupervised rankers, supervised bi-\nencoders, unsupervised cross-encoders, and LLM baselines. BM25:\nA standard unsupervised sparse retrieval baseline based on term\noverlap between query and document, with strong generalization\nperformance across tasks and domains [38]. Contriver: A BERT-base\nbi-encoder model pre-trained for zero-shot retrieval with weakly su-\npervised query-document pairs [22]. MPNet-1B: A strong Sentence-\nBert bi-encoder model initialized with MPNet-base and trained on\n1 billion supervised query-document pairs aggregated from numer-\nous domains [37]. BERT-MSM: A BERT-base bi-encoder fine-tuned\non supervised question-passage pairs from MSMarco. UPR: A two-\nstage approach that retrieves items with a Contriver bi-encoder\nand re-ranks the top 200 items with a query-likelihood model using\na FlanT5 model with 3B parameters [14, 40]. This may be seen\nas an unsupervised \u201ccross-encoder\u201d model. Grounded LLM: A re-\ncently proposed two-stage approach which autoregressively gener-\nates ten pseudo-relevant items using an LLM (175B InstructGPT)\nprompted with the narrative query and generates recommenda-\ntions grounded in C by retrieving the nearest neighbors for each\ngenerated item using a bi-encoder [19]. We include one few-shot\nexample of a narrative query and recommended items in the prompt\nto the LLM. We run this baseline three times and report average\nperformance across runs. We report NDCG at 5 and 10, MAP, MRR,\nand Recall at 100 and 200. Finally, our reported results should be\nconsidered lower bounds on realistic performance due to the un-\njudged documents (about 70% at \ud835\udc58 = 10) in our test collections\n[10].\n4.2\nResults\nTable 1 presents the performance of the proposed method compared\nagainst baselines. Here, bold numbers indicate the best-performing\nmodel, and superscripts indicate statistical significance computed\nwith two-sided t-tests at \ud835\udc5d < 0.05.\nHere, we first note the performance of baseline approaches. We\nsee BM25 outperformed by Contriver, a transformer bi-encoder\nmodel trained for zero-shot retrieval; this mirrors prior work [22].\nNext, we see supervised bi-encoder models trained on similar pas-\nsage (MPNet-1B) and question-answer (BERT-MSM) pairs outper-\nform a weakly supervised model (Contriver) by smaller margins.\nFinally, the Grounded LLM outperforms all bi-encoder baselines, in-\ndicating strong few-shot generalization and mirroring prior results\n[19]. Examining the Mint models, we first note that the BiEnc-\nMint sees statistically significant improvement compared to BM25\n780\nLarge Language Model Augmented Narrative Driven Recommendations\nRecSys \u201923, September 18\u201322, 2023, Singapore, Singapore\nTable 1: Performance of the proposed method, Mint, for point-of-interest recommendation on Pointrec. The superscripts\ndenote statistically significant improvements compared to specific baseline models.\nPointrec\nModel\nParameters\nNDCG@5\nNDCG@10\nMAP\nMRR\nRecall@100\nRecall@200\n1BM25\n-\n0.2682\n0.2464\n0.1182\n0.2685\n0.4194\n0.5429\n2Contriver\n110M\n0.2924\n0.2776\n0.1660\n0.3355\n0.4455\n0.5552\n3MPNet-1B\n110M\n0.3038\n0.2842\n0.1621\n0.3566\n0.4439\n0.5657\n4BERT-MSM\n110M\n0.3117\n0.2886\n0.1528\n0.3320\n0.4679\n0.5816\n5Grounded LLM\n175B+110M\n0.3558\n0.3251\n0.1808\n0.3861\n0.4797\n0.5797\n6UPR\n110M+3B\n0.3586\n0.3242\n0.1712\n0.4013\n0.4489\n0.5552\nBiEnc-Mint\n110M\n0.34891\n0.32631\n0.18901\n0.39821\n0.49141\n0.6221\nCrEnc-Mint\n2\u00d7110M\n0.372512\n0.348912\n0.219214\n0.43171\n0.5448123\n0.6221\nand outperforms the best bi-encoder baselines by 11-13% on preci-\nsion measures and 5-7% on recall measures. Specifically, we see a\nmodel trained for question-answering (BERT-MSM) underperform\nBiEnc-Mint, indicating the challenge of the NDR task. Further,\nBiEnc-Mint, trained on 5 orders of magnitude lesser data than\nMPNet-1B, sees improved performance \u2013 indicating the quality of\ndata obtained from Mint. Furthermore, BiEnc-Mint also performs\nat par with a 175B LLM while offering the inference efficiency of a\nsmall-parameter bi-encoder. Next, we see CrEnc-Mint outperform\nthe baseline bi-encoders, BiEnc-Mint, UPR, and Grounded LLM\nby 4-21% on precision measures and 7-13% on recall measures \u2013\ndemonstrating the value of Mint for training NDR models.\n4.3\nAblations\nIn Table 2, we ablate various design choices in Mint. Different\nchoices result in different training sets for the BiEnc and CrEnc\nmodels. Also, note that in reporting ablation performance for CrEnc,\nwe still use the performant BiEnc-Mint model for obtaining nega-\ntive examples for training and first-stage ranking. Without high-\nquality negative examples, we found CrEnc to result in much poorer\nperformance.\nNo item filtering. Since synthetic queries are unlikely to rep-\nresent all the items of a user, Mint excludes user items {\ud835\udc51\ud835\udc56}\ud835\udc41\ud835\udc62\n\ud835\udc56=1\nwhich have a low likelihood of being generated from the document\n(\u00a73.2.2). Without this step, we expect the training set for training\nretrieval models to be larger and noisier. In Table 2, we see that\nexcluding this step leads to a lower performance for BiEnc and\nCrEnc, indicating that the quality of data obtained is important for\nperformance.\n6B LLM for QGen. Mint relies on using an expensive 175B pa-\nrameter InstructGPT model for QGen. Here, we investigate the\nefficacy for generating\ud835\udc5e\ud835\udc62 for {\ud835\udc51\ud835\udc56}\ud835\udc41\ud835\udc62\n\ud835\udc56=1 with a 6B parameter Instruct-\nGPT model (text-curie-001). We use an identical setup to the\n175B LLM for this. In Table 2, we see that training on the synthetic\nnarrative queries of the smaller LLM results in worse models \u2013 of-\nten underperforming the baselines in Table 1. This indicates the\ninability of a smaller model to generate complex narrative queries\nwhile conditioning on a set of user items. This necessity of a larger\nLLM for generating queries in complex retrieval tasks has been\nobserved in prior work [15, 23].\n6B LLM for Item Queries. We find a smaller 6B LLM to result\nin poor quality data when used to generate narrative queries con-\nditioned on {\ud835\udc51\ud835\udc56}\ud835\udc41\ud835\udc62\n\ud835\udc56=1. Here we simplify the text generation task \u2013\nusing a 6B LLM to generate queries for individual items \ud835\udc51\ud835\udc56. This\nexperiment also mirrors the setup for generating synthetic queries\nfor search tasks [7, 15]. Here, we use 3-few shot examples and sam-\nple one item per user for generating \ud835\udc5e\ud835\udc62. Given the lower cost of\nusing a smaller LLM, we use all 45,193 users in our Yelp dataset\nrather than a smaller random sample. From Table 2, we see that this\nresults in higher quality queries than using smaller LLMs for gen-\nerating narrative queries from {\ud835\udc51\ud835\udc56}\ud835\udc41\ud835\udc62\n\ud835\udc56=1. The resulting BiEnc model\nunderperforms the BiEnc-Mint, indicating the value of generating\ncomplex queries conditioned on multiple items as in Mint for NDR.\nWe see that CrEnc approaches the performance of CrEnc-Mint\u2013\nnote, however, that this approach uses the performant BiEnc-Mint\nfor sampling negatives and first stage ranking. We leave further\nexploration of using small parameter LLMs for data augmentation\nfor NDR models to future work.\n5\nCONCLUSIONS\nIn this paper, we present Mint, a data augmentation method for the\nnarrative-driven recommendation (NDR) task. Mint re-purposes\nhistorical user-item interaction datasets for NDR by using a 175B pa-\nrameter large language model to author long-form narrative queries\nwhile conditioning on the text of items liked by users. We evaluate\nbi-encoder and cross-encoder models trained on data from Mint on\nthe publicly available Pointrec test collection for narrative-driven\npoint of interest recommendation. We demonstrate that the result-\ning models outperform several strong baselines and ablated models\nand match or outperform a 175B LLM directly used for NDR in a\n1-shot setup.\nHowever, Mint also presents some limitations. Given our use of\nhistorical interaction datasets for generating synthetic training data\nand the prevalence of popular interests in these datasets longer,\ntailed interests are unlikely to be present in the generated syn-\nthetic datasets. In turn, causing retrieval models to likely see poorer\nperformance on these requests. Our use of LLMs to generate syn-\nthetic queries also causes the queries to be repetitive in structure,\nlikely causing novel longer-tail queries to be poorly served. These\nlimitations may be addressed in future work.\n781\nRecSys \u201923, September 18\u201322, 2023, Singapore, Singapore\nMysore, McCallum, Zamani\nTable 2: Mint ablated for different design choices on Pointrec.\nPointrec\nAblation\nNDCG@5\nNDCG@10\nMAP\nMRR\nRecall@100\nRecall@200\nBiEnc-Mint\n0.3489\n0.3263\n0.1890\n0.3982\n0.5263\n0.6221\n\u2212 No item filtering\n0.2949\n0.2766\n0.1634\n0.3505\n0.4979\n0.5951\n\u2212 6B LLM for QGen\n0.2336\n0.2293\n0.1125\n0.2287\n0.426\n0.5435\n\u2212 6B LLM for Item Queries\n0.3012\n0.2875\n0.1721\n0.3384\n0.4800\n0.5909\nCrEnc-Mint\n0.3725\n0.3489\n0.2192\n0.4317\n0.5448\n0.6221\n\u2212 No item filtering\n0.3570\n0.3379\n0.2071\n0.4063\n0.5366\n0.6221\n\u2212 6B LLM for QGen\n0.2618\n0.2421\n0.1341\n0.3118\n0.4841\n0.6221\n\u2212 6B LLM for Item Queries\n0.3792\n0.3451\n0.2128\n0.4098\n0.5546\n0.6221\nBesides this, other avenues also present rich future work. While\nMint leverages a 175B LLM for generating synthetic queries, smaller\nparameter LLMs may be explored for this purpose - perhaps by\ntraining dedicated QGen models. Mint may also be expanded to\nexplore more active strategies for sampling items and users for\nwhom narrative queries are authored - this may allow more effi-\ncient use of large parameter LLMs while ensuring higher quality\ntraining datasets. Next, the generation of synthetic queries from\nsets of documents may be explored for a broader range of retrieval\ntasks beyond NDR given its promise to generate larger training\nsets \u2013 a currently underexplored direction. Finally, given the lack of\nlarger-scale test collections for NDR and the effectiveness of LLMs\nfor authoring narrative queries from user-item interaction, fruitful\nfuture work may also explore the creation of larger-scale datasets\nin a mixed-initiative setup to robustly evaluate models for NDR.\nACKNOWLEDGMENTS\nWe thank anonymous reviewers for their invaluable feedback. This\nwork was partly supported by the Center for Intelligent Informa-\ntion Retrieval, NSF grants IIS-1922090 and 2143434, the Office of\nNaval Research contract number N000142212688, an Amazon Alexa\nPrize grant, and the Chan Zuckerberg Initiative under the project\nScientific Knowledge Base Construction. Any opinions, findings\nand conclusions or recommendations expressed here are those of\nthe authors and do not necessarily reflect those of the sponsors.\nREFERENCES\n[1] Jafar Afzali, Aleksander Mark Drzewiecki, and Krisztian Balog. 2021. POINTREC:\nA Test Collection for Narrative-Driven Point of Interest Recommendation. In\nProceedings of the 44th International ACM SIGIR Conference on Research and\nDevelopment in Information Retrieval (Virtual Event, Canada) (SIGIR \u201921). As-\nsociation for Computing Machinery, New York, NY, USA, 2478\u20132484.\nhttps:\n//doi.org/10.1145/3404835.3463243\n[2] Jaime Arguello, Adam Ferguson, Emery Fine, Bhaskar Mitra, Hamed Zamani, and\nFernando Diaz. 2021. Tip of the Tongue Known-Item Retrieval: A Case Study in\nMovie Identification. In Proceedings of the 6th international ACM SIGIR Conference\non Human Information Interaction and Retrieval. ACM. https://dlnext.acm.org/\ndoi/10.1145/3406522.3446021\n[3] Toine Bogers, Maria G\u00e4de, Marijn Koolen, Vivien Petras, and Mette Skov. 2018.\n\u201cWhat was this Movie About this Chick?\u201d A Comparative Study of Relevance\nAspects in Book and Movie Discovery. In Transforming Digital Worlds: 13th Inter-\nnational Conference, iConference 2018, Sheffield, UK, March 25-28, 2018, Proceedings\n13. Springer, 323\u2013334.\n[4] Toine Bogers, Maria G\u00e4de, Marijn Koolen, Vivien Petras, and Mette Skov. 2019.\n\u201cLooking for an amazing game I can relax and sink hours into...\u201d: A Study of\nRelevance Aspects in Video Game Discovery. In Information in Contemporary\nSociety: 14th International Conference, iConference 2019, Washington, DC, USA,\nMarch 31\u2013April 3, 2019, Proceedings 14. Springer, 503\u2013515.\n[5] Toine Bogers and Marijn Koolen. 2017. Defining and Supporting Narrative-Driven\nRecommendation. In Proceedings of the Eleventh ACM Conference on Recommender\nSystems (Como, Italy) (RecSys \u201917). Association for Computing Machinery, New\nYork, NY, USA, 238\u2013242. https://doi.org/10.1145/3109859.3109893\n[6] Toine Bogers and Marijn Koolen. 2018. \u201cI\u2019m looking for something like...\u201d:\nCombining Narratives and Example Items for Narrative-driven Book Recommen-\ndation. In Knowledge-aware and Conversational Recommender Systems Workshop.\nCEUR Workshop Proceedings.\n[7] Luiz Bonifacio, Hugo Abonizio, Marzieh Fadaee, and Rodrigo Nogueira. 2022.\nInPars: Unsupervised Dataset Generation for Information Retrieval. In Proceedings\nof the 45th International ACM SIGIR Conference on Research and Development\nin Information Retrieval (Madrid, Spain) (SIGIR \u201922). Association for Computing\nMachinery, New York, NY, USA, 2387\u20132392.\nhttps://doi.org/10.1145/3477495.\n3531863\n[8] Leonid Boytsov, Preksha Patel, Vivek Sourabh, Riddhi Nisar, Sayani Kundu,\nRamya Ramanathan, and Eric Nyberg. 2023. InPars-Light: Cost-Effective Unsu-\npervised Training of Efficient Rankers. arXiv:2301.02998\n[9] Tom Brown, Benjamin Mann, Nick Ryder, Melanie Subbiah, Jared D Kaplan,\nPrafulla Dhariwal, Arvind Neelakantan, Pranav Shyam, Girish Sastry, Amanda\nAskell, Sandhini Agarwal, Ariel Herbert-Voss, Gretchen Krueger, Tom Henighan,\nRewon Child, Aditya Ramesh, Daniel Ziegler, Jeffrey Wu, Clemens Winter,\nChris Hesse, Mark Chen, Eric Sigler, Mateusz Litwin, Scott Gray, Benjamin\nChess, Jack Clark, Christopher Berner, Sam McCandlish, Alec Radford, Ilya\nSutskever, and Dario Amodei. 2020. Language Models are Few-Shot Learners.\nIn Advances in Neural Information Processing Systems, H. Larochelle, M. Ran-\nzato, R. Hadsell, M.F. Balcan, and H. Lin (Eds.), Vol. 33. Curran Associates,\nInc., 1877\u20131901.\nhttps://proceedings.neurips.cc/paper_files/paper/2020/file/\n1457c0d6bfcb4967418bfb8ac142f64a-Paper.pdf\n[10] Chris Buckley and Ellen M. Voorhees. 2004. Retrieval Evaluation with Incomplete\nInformation. In Proceedings of the 27th Annual International ACM SIGIR Conference\non Research and Development in Information Retrieval (Sheffield, United Kingdom)\n(SIGIR \u201904). Association for Computing Machinery, New York, NY, USA, 25\u201332.\nhttps://doi.org/10.1145/1008992.1009000\n[11] Dong-Kyu Chae, Jihoo Kim, Duen Horng Chau, and Sang-Wook Kim. 2020. AR-\nCF: Augmenting Virtual Users and Items in Collaborative Filtering for Addressing\nCold-Start Problems. In Proceedings of the 43rd International ACM SIGIR Con-\nference on Research and Development in Information Retrieval (Virtual Event,\nChina) (SIGIR \u201920). Association for Computing Machinery, New York, NY, USA,\n1251\u20131260. https://doi.org/10.1145/3397271.3401038\n[12] Lei Chen, Le Wu, Kun Zhang, Richang Hong, Defu Lian, Zhiqiang Zhang, Jun\nZhou, and Meng Wang. 2023. Improving Recommendation Fairness via Data\nAugmentation. In Proceedings of the ACM Web Conference 2023 (Austin, TX,\nUSA) (WWW \u201923). Association for Computing Machinery, New York, NY, USA,\n1012\u20131020. https://doi.org/10.1145/3543507.3583341\n[13] Li Chen, Zhirun Zhang, Xinzhi Zhang, and Lehong Zhao. 2022. A Pilot Study\nfor Understanding Users\u2019 Attitudes Towards a Conversational Agent for News\nRecommendation. In Proceedings of the 4th Conference on Conversational User\nInterfaces (Glasgow, United Kingdom) (CUI \u201922). Association for Computing\nMachinery, New York, NY, USA, Article 36, 6 pages.\nhttps://doi.org/10.1145/\n3543829.3544530\n[14] Hyung Won Chung, Le Hou, Shayne Longpre, Barret Zoph, Yi Tay, William Fedus,\nEric Li, Xuezhi Wang, Mostafa Dehghani, Siddhartha Brahma, et al. 2022. Scaling\ninstruction-finetuned language models. arXiv preprint arXiv:2210.11416 (2022).\n[15] Zhuyun Dai, Vincent Y Zhao, Ji Ma, Yi Luan, Jianmo Ni, Jing Lu, Anton Bakalov,\nKelvin Guu, Keith Hall, and Ming-Wei Chang. 2023. Promptagator: Few-shot\n782\nLarge Language Model Augmented Narrative Driven Recommendations\nRecSys \u201923, September 18\u201322, 2023, Singapore, Singapore\nDense Retrieval From 8 Examples. In The Eleventh International Conference on\nLearning Representations. https://openreview.net/forum?id=gmL46YMpu2J\n[16] Abhinandan S. Das, Mayur Datar, Ashutosh Garg, and Shyam Rajaram. 2007.\nGoogle News Personalization: Scalable Online Collaborative Filtering. In Pro-\nceedings of the 16th International Conference on World Wide Web (Banff, Alberta,\nCanada) (WWW \u201907). Association for Computing Machinery, New York, NY, USA,\n271\u2013280. https://doi.org/10.1145/1242572.1242610\n[17] James Davidson, Benjamin Liebald, Junning Liu, Palash Nandy, Taylor Van Vleet,\nUllas Gargi, Sujoy Gupta, Yu He, Mike Lambert, Blake Livingston, and Dasarathi\nSampath. 2010. The YouTube Video Recommendation System. In Proceedings of\nthe Fourth ACM Conference on Recommender Systems (Barcelona, Spain) (RecSys\n\u201910). Association for Computing Machinery, New York, NY, USA, 293\u2013296. https:\n//doi.org/10.1145/1864708.1864770\n[18] Lukas Eberhard, Simon Walk, Lisa Posch, and Denis Helic. 2019. Evaluating\nNarrative-Driven Movie Recommendations on Reddit. In Proceedings of the 24th\nInternational Conference on Intelligent User Interfaces (Marina del Ray, California)\n(IUI \u201919). Association for Computing Machinery, New York, NY, USA, 1\u201311. https:\n//doi.org/10.1145/3301275.3302287\n[19] Luyu Gao, Xueguang Ma, Jimmy Lin, and Jamie Callan. 2022. Precise Zero-Shot\nDense Retrieval without Relevance Labels. arXiv preprint arXiv:2212.10496 (2022).\n[20] Negar Hariri, Bamshad Mobasher, and Robin Burke. 2013. Query-Driven Context\nAware Recommendation. In Proceedings of the 7th ACM Conference on Recom-\nmender Systems (Hong Kong, China) (RecSys \u201913). Association for Computing\nMachinery, New York, NY, USA, 9\u201316. https://doi.org/10.1145/2507157.2507187\n[21] Seyyed Hadi Hashemi, Jaap Kamps, Julia Kiseleva, Charles LA Clarke, and Ellen M\nVoorhees. 2016. Overview of the TREC 2016 Contextual Suggestion Track.. In\nTREC.\n[22] Gautier Izacard, Mathilde Caron, Lucas Hosseini, Sebastian Riedel, Piotr Bo-\njanowski, Armand Joulin, and Edouard Grave. 2022. Unsupervised Dense Infor-\nmation Retrieval with Contrastive Learning. Transactions on Machine Learning\nResearch (2022). https://openreview.net/forum?id=jKN1pXi7b0\n[23] Vitor Jeronymo, Luiz Bonifacio, Hugo Abonizio, Marzieh Fadaee, Roberto Lotufo,\nJakub Zavrel, and Rodrigo Nogueira. 2023. InPars-v2: Large Language Models as\nEfficient Dataset Generators for Information Retrieval. arXiv:2301.01820\n[24] Marijn Koolen, Toine Bogers, Maria G\u00e4de, Mark Hall, Iris Hendrickx, Hugo\nHuurdeman, Jaap Kamps, Mette Skov, Suzan Verberne, and David Walsh. 2016.\nOverview of the CLEF 2016 Social Book Search Lab. In Experimental IR Meets Mul-\ntilinguality, Multimodality, and Interaction, Norbert Fuhr, Paulo Quaresma, Teresa\nGon\u00e7alves, Birger Larsen, Krisztian Balog, Craig Macdonald, Linda Cappellato,\nand Nicola Ferro (Eds.). Springer International Publishing, Cham, 351\u2013370.\n[25] Megan Leszczynski, Ravi Ganti, Shu Zhang, Krisztian Balog, Filip Radlinski,\nFernando Pereira, and Arun Tejasvi Chaganty. 2023. Generating Synthetic Data\nfor Conversational Music Recommendation Using Random Walks and Language\nModels. arXiv:2301.11489\n[26] Xin Liu, Yong Liu, Karl Aberer, and Chunyan Miao. 2013. Personalized Point-of-\nInterest Recommendation by Mining Users\u2019 Preference Transition. In Proceedings\nof the 22nd ACM International Conference on Information & Knowledge Manage-\nment (San Francisco, California, USA) (CIKM \u201913). Association for Computing Ma-\nchinery, New York, NY, USA, 733\u2013738. https://doi.org/10.1145/2505515.2505639\n[27] Yiding Liu, Tuan-Anh Nguyen Pham, Gao Cong, and Quan Yuan. 2017. An\nExperimental Evaluation of Point-of-Interest Recommendation in Location-Based\nSocial Networks. Proc. VLDB Endow. 10, 10 (jun 2017), 1010\u20131021. https://doi.\norg/10.14778/3115404.3115407\n[28] Federico L\u00f3pez, Martin Scholz, Jessica Yung, Marie Pellat, Michael Strube, and\nLucas Dixon. 2021. Augmenting the user-item graph with textual similarity\nmodels. arXiv preprint arXiv:2109.09358 (2021).\n[29] Xing Han Lu, Siva Reddy, and Harm de Vries. 2023. The StatCan Dialogue\nDataset: Retrieving Data Tables through Conversations with Genuine Intents. In\nProceedings of the 17th Conference of the European Chapter of the Association for\nComputational Linguistics. Association for Computational Linguistics, Dubrovnik,\nCroatia, 2799\u20132829. https://aclanthology.org/2023.eacl-main.206\n[30] Kai Luo, Scott Sanner, Ga Wu, Hanze Li, and Hojin Yang. 2020. Latent Linear\nCritiquing for Conversational Recommender Systems. In The Web Conference.\n[31] Ji Ma, Ivan Korotkov, Yinfei Yang, Keith Hall, and Ryan McDonald. 2021. Zero-shot\nNeural Passage Retrieval via Domain-targeted Synthetic Question Generation.\nIn Proceedings of the 16th Conference of the European Chapter of the Associa-\ntion for Computational Linguistics: Main Volume. Association for Computational\nLinguistics, Online, 1075\u20131088. https://doi.org/10.18653/v1/2021.eacl-main.92\n[32] Sheshera Mysore, Tim O\u2019Gorman, Andrew McCallum, and Hamed Zamani. 2021.\nCSFCube - A Test Collection of Computer Science Research Articles for Faceted\nQuery by Example. In Thirty-fifth Conference on Neural Information Processing\nSystems Datasets and Benchmarks Track (Round 2). https://doi.org/10.48550/arXiv.\n2103.12906\n[33] Long Ouyang, Jeffrey Wu, Xu Jiang, Diogo Almeida, Carroll Wainwright, Pamela\nMishkin, Chong Zhang, Sandhini Agarwal, Katarina Slama, Alex Ray, John\nSchulman, Jacob Hilton, Fraser Kelton, Luke Miller, Maddie Simens, Amanda\nAskell, Peter Welinder, Paul F Christiano, Jan Leike, and Ryan Lowe. 2022.\nTraining language models to follow instructions with human feedback. In\nAdvances in Neural Information Processing Systems, S. Koyejo, S. Mohamed,\nA. Agarwal, D. Belgrave, K. Cho, and A. Oh (Eds.), Vol. 35. Curran Associates,\nInc., 27730\u201327744. https://proceedings.neurips.cc/paper_files/paper/2022/file/\nb1efde53be364a73914f58805a001731-Paper-Conference.pdf\n[34] Andrea Papenmeier, Dagmar Kern, Daniel Hienert, Alfred Sliwa, Ahmet Aker,\nand Norbert Fuhr. 2021. Starting Conversations with Search Engines - Interfaces\nThat Elicit Natural Language Queries. In Proceedings of the 2021 Conference on\nHuman Information Interaction and Retrieval (Canberra ACT, Australia) (CHIIR\n\u201921). Association for Computing Machinery, New York, NY, USA, 261\u2013265. https:\n//doi.org/10.1145/3406522.3446035\n[35] Gustavo Penha, Enrico Palumbo, Maryam Aziz, Alice Wang, and Hugues\nBouchard. 2023. Improving Content Retrievability in Search with Controllable\nQuery Generation. In Proceedings of the ACM Web Conference 2023 (Austin, TX,\nUSA) (WWW \u201923). Association for Computing Machinery, New York, NY, USA,\n3182\u20133192. https://doi.org/10.1145/3543507.3583261\n[36] Filip Radlinski, Krisztian Balog, Fernando Diaz, Lucas Dixon, and Ben Wedin.\n2022. On Natural Language User Profiles for Transparent and Scrutable Rec-\nommendation. In Proceedings of the 45th International ACM SIGIR Conference\non Research and Development in Information Retrieval (Madrid, Spain) (SIGIR\n\u201922). Association for Computing Machinery, New York, NY, USA, 2863\u20132874.\nhttps://doi.org/10.1145/3477495.3531873\n[37] Nils Reimers and Iryna Gurevych. 2019. Sentence-BERT: Sentence Embeddings\nusing Siamese BERT-Networks. In Proceedings of the 2019 Conference on Em-\npirical Methods in Natural Language Processing. Association for Computational\nLinguistics. https://arxiv.org/abs/1908.10084\n[38] Stephen Robertson and Hugo Zaragoza. 2009.\nThe Probabilistic Relevance\nFramework: BM25 and Beyond. Found. Trends Inf. Retr. 3, 4 (apr 2009), 333\u2013389.\nhttps://doi.org/10.1561/1500000019\n[39] Jon Saad-Falcon, Omar Khattab, Keshav Santhanam, Radu Florian, Martin\nFranz, Salim Roukos, Avirup Sil, Md Arafat Sultan, and Christopher Potts. 2023.\nUDAPDR: Unsupervised Domain Adaptation via LLM Prompting and Distillation\nof Rerankers. arXiv:2303.00807 [cs.IR]\n[40] Devendra Sachan, Mike Lewis, Mandar Joshi, Armen Aghajanyan, Wen-tau\nYih, Joelle Pineau, and Luke Zettlemoyer. 2022. Improving Passage Retrieval\nwith Zero-Shot Question Generation. In Proceedings of the 2022 Conference on\nEmpirical Methods in Natural Language Processing. Association for Computational\nLinguistics, Abu Dhabi, United Arab Emirates, 3781\u20133797. https://aclanthology.\norg/2022.emnlp-main.249\n[41] Kaitao Song, Xu Tan, Tao Qin, Jianfeng Lu, and Tie-Yan Liu. 2020. MPNet: Masked\nand Permuted Pre-training for Language Understanding. In Advances in Neural\nInformation Processing Systems, Vol. 33. https://proceedings.neurips.cc/paper_\nfiles/paper/2020/file/c3a690be93aa602ee2dc0ccab5b7b67e-Paper.pdf\n[42] Jaime Teevan, Susan T. Dumais, and Eric Horvitz. 2005. Personalizing Search via\nAutomated Analysis of Interests and Activities. In Proceedings of the 28th Annual\nInternational ACM SIGIR Conference on Research and Development in Information\nRetrieval (Salvador, Brazil) (SIGIR \u201905). Association for Computing Machinery,\nNew York, NY, USA, 449\u2013456. https://doi.org/10.1145/1076034.1076111\n[43] Mengting Wan and Julian McAuley. 2018. Item Recommendation on Monotonic\nBehavior Chains. In Proceedings of the 12th ACM Conference on Recommender\nSystems (Vancouver, British Columbia, Canada) (RecSys \u201918). Association for\nComputing Machinery, New York, NY, USA, 86\u201394.\nhttps://doi.org/10.1145/\n3240323.3240369\n[44] Haonan Wang, Chang Zhou, Carl Yang, Hongxia Yang, and Jingrui He. 2021.\nControllable Gradient Item Retrieval. In Web Conference.\n[45] Qinyong Wang, Hongzhi Yin, Hao Wang, Quoc Viet Hung Nguyen, Zi Huang,\nand Lizhen Cui. 2019. Enhancing Collaborative Filtering with Generative Aug-\nmentation. In Proceedings of the 25th ACM SIGKDD International Conference\non Knowledge Discovery & Data Mining (Anchorage, AK, USA) (KDD \u201919). As-\nsociation for Computing Machinery, New York, NY, USA, 548\u2013556.\nhttps:\n//doi.org/10.1145/3292500.3330873\n[46] Jiajing Xu, Andrew Zhai, and Charles Rosenberg. 2022. Rethinking Personalized\nRanking at Pinterest: An End-to-End Approach. In Proceedings of the 16th ACM\nConference on Recommender Systems (Seattle, WA, USA) (RecSys \u201922). Association\nfor Computing Machinery, New York, NY, USA, 502\u2013505.\nhttps://doi.org/10.\n1145/3523227.3547394\n[47] Yuxin Ying, Fuzhen Zhuang, Yongchun Zhu, Deqing Wang, and Hongwei Zheng.\n2023. CAMUS: Attribute-Aware Counterfactual Augmentation for Minority Users\nin Recommendation. In Proceedings of the ACM Web Conference 2023 (Austin, TX,\nUSA) (WWW \u201923). Association for Computing Machinery, New York, NY, USA,\n1396\u20131404. https://doi.org/10.1145/3543507.3583538\n[48] Hamed Zamani, Johanne R Trippas, Jeff Dalton, and Filip Radlinski. 2022. Con-\nversational information seeking. arXiv preprint arXiv:2201.08808 (2022).\n[49] Jie Zou, Yifan Chen, and Evangelos Kanoulas. 2020. Towards Question-Based\nRecommender Systems. In Proceedings of the 43rd International ACM SIGIR Confer-\nence on Research and Development in Information Retrieval (Virtual Event, China)\n(SIGIR \u201920). Association for Computing Machinery, New York, NY, USA, 881\u2013890.\nhttps://doi.org/10.1145/3397271.3401180\n783\n",
    "pdf_url": "/media/Article_07.pdf",
    "references": [
      "[1] Jafar Afzali, Aleksander Mark Drzewiecki, and Krisztian Balog. 2021. POINTREC:",
      "A Test Collection for Narrative-Driven Point of Interest Recommendation. In",
      "Proceedings of the 44th International ACM SIGIR Conference on Research and",
      "Development in Information Retrieval (Virtual Event, Canada) (SIGIR \u201921). As-",
      "sociation for Computing Machinery, New York, NY, USA, 2478\u20132484.",
      "https:",
      "//doi.org/10.1145/3404835.3463243",
      "[2] Jaime Arguello, Adam Ferguson, Emery Fine, Bhaskar Mitra, Hamed Zamani, and",
      "Fernando Diaz. 2021. Tip of the Tongue Known-Item Retrieval: A Case Study in",
      "Movie Identification. In Proceedings of the 6th international ACM SIGIR Conference",
      "on Human Information Interaction and Retrieval. ACM. https://dlnext.acm.org/",
      "doi/10.1145/3406522.3446021",
      "[3] Toine Bogers, Maria G\u00e4de, Marijn Koolen, Vivien Petras, and Mette Skov. 2018."
    ],
    "publication_date": "2023-11-07T00:00:00",
    "corrected": 0,
    "_id": "_KLJa40B3PLCePsgEjvX"
  }
]